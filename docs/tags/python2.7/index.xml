<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python2.7 on LTAN.ME</title>
    <link>https://ltan.me/tags/python2.7/</link>
    <description>Recent content in python2.7 on LTAN.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jun 2022 20:56:27 +0800</lastBuildDate><atom:link href="https://ltan.me/tags/python2.7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Get Started With Developing Kodi Plugins</title>
      <link>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</link>
      <pubDate>Thu, 16 Jun 2022 20:56:27 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</guid>
      <description>how to get started with developing kodi plugins 开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务 主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力 学习kodi插</description>
      <content>&lt;h1 id=&#34;how-to-get-started-with-developing-kodi-plugins&#34;&gt;how to get started with developing kodi plugins&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务
主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力
学习kodi插件开发除了需要一些编程经验外，还需要了解kodi系统插件运行环境，开发环境等
今天特记录一下如何搭建kodi开发环境，
搭建开发环境需要准备以下步骤，以windows 10+ python2.7+ vmware 操作环境为例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1 利用vmware安装libreELEC 系统，libreELEC 就是一个阉割版本的Linux+kodi整合而成
安装libreELEC，首先是去官网下载libreELEC OVA文件&lt;br&gt;
官网：https://libreelec.tv/downloads/generic/&lt;br&gt;
&lt;img src=&#34;libreELEC-OVA.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2 用vmware打开下载好的libreELEC OVA 文件即可运行&lt;br&gt;
&lt;img src=&#34;vmware-open-libreelec-ova.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
启动后，启用ssh 设置ssh密码，启用smb服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3 设置windows10 与 libreELEC 网络互通，并且还要让libreelec 访问外网，vmware需要设置桥接模式 或者 nat网络模式，让libreelec 可以访问网外网，
我这边设置NAT模式，需要知道vmware nat 的ip 范围，一般nat模式，vmware会自动分配一个ip给libreelec的，我这里设置静态，不然ip会变动
影响后面开发&lt;br&gt;
&lt;img src=&#34;kodi-set-static-ip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
4 配置libreELEC 系统文件共享给windows 10访问，ip为libreELEC系统的刚设置的ip&lt;br&gt;
只要下图片窗口能正常打开，即网络能访问通&lt;br&gt;
&lt;img src=&#34;map-drive-ip-sharefile.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
映射windows盘符,这步很重要，不然会影响后面代码开发&lt;br&gt;
&lt;img src=&#34;map-drive-x.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
5 进入libreELEC系统，安装hellworld模块&lt;br&gt;
下载hellworld模块，下载地址如下&lt;br&gt;
&lt;a href=&#34;https://github.com/zag2me/script.hello.world/archive/master.zip&#34;&gt;https://github.com/zag2me/script.hello.world/archive/master.zip&lt;/a&gt;&lt;br&gt;
选择安装从zip 文件 安装插件，安装前提是需要设置安装来源允许 未知来源&lt;code&gt;unkown&lt;/code&gt;安装&lt;br&gt;
&lt;img src=&#34;kodi-install-from-zip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
6 用命令行工具登录libreELEC系统并进入到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt; 创建&lt;code&gt;project&lt;/code&gt;，移动&lt;code&gt;script.hello.world&lt;/code&gt;插件目录到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt;共享目录下
并做好script.hello.world软链接，这一步需要把插件目录移动共享目录让windows10可见能访问，原来的libreELEC插件目录做好软链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;      cd /storage/.kodi/userdata/   
       
      mkdir project 
        
      mv /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project   
      
      ln -sf /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project/script.hello.world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;7 上一步成功后，应该可以用pycharm 打开&lt;code&gt;script.hello.world&lt;/code&gt; 项目了&lt;br&gt;
windows 10 打开可以看到如下结果&lt;br&gt;
&lt;img src=&#34;script.hello.world-project-dir.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;pycharm-open-helloworld.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
8 安装pycharm 插件，该插件用于pycharm python 代码自动提示&lt;br&gt;
&lt;img src=&#34;kodi-pugin-install-pycharm.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
9 修改kodi helloworld插件代码并运行&lt;br&gt;
addon.py为主要执行文件，插件入口文件，&lt;br&gt;
&lt;img src=&#34;helloworld-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code1.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
再次修改代码，再次运行
&lt;img src=&#34;kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
日志查看&lt;br&gt;
tail -f  /storage/.kodi/temp/kodi.log &lt;br&gt;
&lt;img src=&#34;tail--f-log.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
xbmc打开窗口，并显示音乐播放列表&lt;br&gt;
xbmc.executebuiltin(&amp;ldquo;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;quot;)&lt;br&gt;
xbmc打印日志&lt;br&gt;
xbmc.log(&amp;ldquo;message&amp;rdquo;,level=xbmc.LOGNOTICE)&lt;br&gt;
参考文档官网&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&#34;&gt;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/Add-on_development&#34;&gt;https://kodi.wiki/view/Add-on_development&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>My Python2.7 Notes</title>
      <link>https://ltan.me/post/2021/07/my-python2.7-notes/</link>
      <pubDate>Wed, 21 Jul 2021 20:43:52 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/my-python2.7-notes/</guid>
      <description>python 日常笔记 记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个</description>
      <content>&lt;h1 id=&#34;python-日常笔记&#34;&gt;python 日常笔记&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 &amp;raquo;&amp;gt; 后直接执行代码。Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;时间转换&#34;&gt;时间转换&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromtimestamp(long(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1528797322&amp;#34;&lt;/span&gt;))
print date_time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, %H:%M:%S&amp;#34;&lt;/span&gt;)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;])
 
 
strftime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:31:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
strftime2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:30:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;32&amp;#34;&lt;/span&gt;,strftime&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;strftime2)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
print datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple()
print time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple())
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print long(time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(date1) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;where-in-mysql-使用&#34;&gt;where in mysql 使用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_config_list&lt;/span&gt;(conn, cur, aid, keys):
 sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;select `key`,label from config where id = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; and `key` in (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (
    aid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; len(keys)))
    cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(sql, keys)
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fetchall()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;实现类似java-stream-grouping-by-to-map-效果&#34;&gt;实现类似java stream grouping by to map 效果&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_config_list(conn, cur,item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;],keys)
print clist
clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]:v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(clist)}
print clist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;三目表达式应用&#34;&gt;三目表达式应用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reso&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viseo&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sourname&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brad&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;批量插入mysql&#34;&gt;批量插入mysql&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;INSERT INTO breakfast (name, spam, eggs, sausage, price) VALUES (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;, [ (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spam and Sausage Lover&amp;#39;s Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not So Much Spam Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Don&amp;#39;t Wany ANY SPAM! Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.95&lt;/span&gt; ) ] )
&lt;span style=&#34;color:#75715e&#34;&gt;#so in your case:&lt;/span&gt;
c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insert into T (F1,F2) values (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;, [(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Abacus Mental Arithmetic Problem Generation</title>
      <link>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</link>
      <pubDate>Tue, 01 Jun 2021 09:33:32 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</guid>
      <description>珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成 珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到</description>
      <content>&lt;h1 id=&#34;珠心算二笔三笔五笔十笔一位加减混合计算题自动生成&#34;&gt;珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到世界各国，推进着人类文明的发展历程。&lt;/p&gt;
&lt;p&gt;珠心算只有三个符号即1、5和0;数学有10个符号，即0、1、2、3、4、5、6、7、8、9。可见珠心算运算的简捷性。珠心算的直观模型作用能培养小孩子的数学概念能力，珠心算的分析模型作用能帮助小孩子理解应用题的结构关系和数量关系，提高解题能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./zhuxinsuanpang.jpg&#34; alt=&#34;珠心算盘&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这几天看到娃娘，在用办公软件excel 给5岁娃出题，一页一页的打印出来, 很费劲&lt;/p&gt;
&lt;p&gt;我说这个可以写个程序自动生成出来，更快。不用这么幸苦&lt;/p&gt;
&lt;p&gt;开始我不太了解珠心算的规则，后面翻了资料，还真不是随便10以内的加减组合。有一定的规则，如上文章开头所描述&lt;/p&gt;
&lt;h3 id=&#34;出题要求规则如下&#34;&gt;出题要求规则如下:&lt;/h3&gt;
&lt;p&gt;加法&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以加&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以加&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以加&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
减法&lt;br&gt;
&lt;code&gt;9&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;，&lt;code&gt;9&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以减&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1-9&lt;/code&gt;都可以加减&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;出&lt;code&gt;五笔&lt;/code&gt;到&lt;code&gt;十笔&lt;/code&gt;的题&lt;/p&gt;
&lt;p&gt;要求计算结果不能是负数，结果不能大于10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;于是就有以下代码&#34;&gt;于是就有以下代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding=utf-8 -*-&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Workbook
wb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Workbook()
ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;active
reload(sys)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setdefaultencoding(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;)
var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
sa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getNum&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getU&lt;/span&gt;(f):
    u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:
        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (u &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;,var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;, var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getV&lt;/span&gt;(a):
    al &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(a)
    qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (al &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
        qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, al)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; qz
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getRes&lt;/span&gt;(a,b,u):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(u&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;b
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recursive_formula&lt;/span&gt;(num,count,arr):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(arr)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
      arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(num))
    u1, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getU(num)
    count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[getV(a)]
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(u1))
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(v))
        r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getRes(num,v,u1)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; recursive_formula(r, count, arr)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; arr 
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
cell &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#生成excel 4列表格&lt;/span&gt;
total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#生成100题&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; recursive_formula(getNum(), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, [])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(data)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;total:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(a) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;)

print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;共&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;题&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; len(data)
rows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:
    rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(item)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(rows)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;cell:
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(rows)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; rows[:]
version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H%M%S&amp;#39;&lt;/span&gt;)
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;珠心算题目生成-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xlsx&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (cell,len(data),version))
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终生成效果如下，请自行调整打印格式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210601102211603.png&#34; alt=&#34;image-20210601102211603&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
