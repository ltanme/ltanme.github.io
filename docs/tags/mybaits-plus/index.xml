<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mybaits Plus on LTAN.ME</title>
    <link>https://ltan.me/tags/mybaits-plus/</link>
    <description>Recent content in Mybaits Plus on LTAN.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Sep 2021 16:49:31 +0800</lastBuildDate><atom:link href="https://ltan.me/tags/mybaits-plus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mybaits Plus Comes With Paging VS Com.github.pagehelper Paging Plug In</title>
      <link>https://ltan.me/post/2021/09/mybaits-plus-comes-with-paging-vs-com.github.pagehelper-paging-plug-in/</link>
      <pubDate>Mon, 27 Sep 2021 16:49:31 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/mybaits-plus-comes-with-paging-vs-com.github.pagehelper-paging-plug-in/</guid>
      <description>mybatis-plus 自带分页 和 com.github.pagehelper工具使用对比 对经常写中台列表数据管理接口的同学来说，需要经常使用到分页插件来提升自己的工作效率，通常我用过最多的两款插件如标题所示，这两款插件在写</description>
      <content>&lt;h1 id=&#34;mybatis-plus-自带分页-和-comgithubpagehelper工具使用对比&#34;&gt;mybatis-plus 自带分页 和 com.github.pagehelper工具使用对比&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;对经常写中台列表数据管理接口的同学来说，需要经常使用到分页插件来提升自己的工作效率，通常我用过最多的两款插件如标题所示，这两款插件在写文章之前，我一直搞不清，浮躁，混为一谈，需要总结整理&lt;/p&gt;
&lt;p&gt;今抽空花些时间来比较一下他们在返回&lt;code&gt;response body&lt;/code&gt; 时内容, 观察到&lt;code&gt;pagehelper&lt;/code&gt;不愧是术业有专攻啊，个人认为&lt;code&gt;pagehelper&lt;/code&gt; 作为专业分页插件不得不说，其功能特点比&lt;code&gt;mybatis-plus&lt;/code&gt; 完善多了，考虑到人性化，由期在前后端对接方面，大大提升了效率，少写很多代码，不过有时还是看需求场景，对于不需要web端展示的，我推荐&lt;code&gt;mybatis-plus 自带的page分页&lt;/code&gt; ,它相比&lt;code&gt;pagehelper&lt;/code&gt;插件提供的能力还是比较简单，比如没有提供&lt;code&gt;页码位置&lt;/code&gt;，&lt;code&gt;前一页&lt;/code&gt;，&lt;code&gt;后一页&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;mybatis-plus-page&#34;&gt;mybatis-plus page&lt;/h2&gt;
&lt;p&gt;以下为mybatis-plus 分页插件在返回data数据 结构如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;records&amp;#34;&lt;/span&gt;: [
           &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.....&lt;/span&gt;		
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;current&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;orders&amp;#34;&lt;/span&gt;: [],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;searchCount&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;代码使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#a6e22e&#34;&gt;pageList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RequestParam&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;defaultValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Integer pageNum&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
                          &lt;span style=&#34;color:#a6e22e&#34;&gt;@RequestParam&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;defaultValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Integer pageSize&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	  QueryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; queryWrapper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; QueryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
      Page&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Page&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;pageNum&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pageSize&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; 
      IPage&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xxService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;page&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; queryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; list
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pagehelper&#34;&gt;pagehelper&lt;/h2&gt;
&lt;p&gt;以下为pagehelper 的返回data数据，结构如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;: [
            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.....&lt;/span&gt;
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pageNum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pageSize&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;startRow&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;endRow&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prePage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nextPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isFirstPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isLastPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hasPreviousPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hasNextPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigatePages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigatepageNums&amp;#34;&lt;/span&gt;: [],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigateFirstPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigateLastPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;web前端对接时看到有 prePage，nextPage 实现太香，不要不要的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210927173234110.png&#34; alt=&#34;image-20210927173234110&#34;&gt;&lt;/p&gt;
&lt;p&gt;代码使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; @GetMapping(&amp;quot;/list&amp;quot;)
   public Object pageList(@RequestParam(defaultValue = &amp;quot;1&amp;quot;) Integer pageNum,
                          @RequestParam(defaultValue = &amp;quot;10&amp;quot;) Integer pageSize) {
      QueryWrapper&amp;lt;xxModel&amp;gt; queryWrapper = new QueryWrapper&amp;lt;&amp;gt;();
      PageHelper.startPage(pageNum, pageSize); 
	  List&amp;lt;xxModel&amp;gt; list = xxService.list(queryWrapper);
      return new PageInfo&amp;lt;&amp;gt;(list)
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后总结：&lt;/p&gt;
&lt;p&gt;​     推荐大家按需求选自己最合适的分页插件，当然两者可以整合一起使用。有冲突的话则排除冲突，用 mybatis-plus 则重点在mybatis &lt;code&gt;dao&lt;/code&gt;,&lt;code&gt;service&lt;/code&gt;,&lt;code&gt;mapper&lt;/code&gt; ，常见sql可以不写xml,不写service，除非特别的连表查询sql语句，而&lt;code&gt;pagehelper&lt;/code&gt; 则重点在于分页，分页功能强大无敌，对于需要web前端分页的小伙伴，它可以帮你节省不少时间，另外对我当前使用的mybatis-plus 在默认的情况下，&lt;code&gt;mybatis-plus total 为0的问题&lt;/code&gt;， 为了解决total字段为0的问题，百度,google搜索一大把关于它的文章，解决方法。还有个坑就是&lt;code&gt;mybatis-plus的分页，单页查询默认为500条限制&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
