<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kodi on LTAN.ME</title>
    <link>https://ltan.me/tags/kodi/</link>
    <description>Recent content in kodi on LTAN.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jun 2022 20:56:27 +0800</lastBuildDate><atom:link href="https://ltan.me/tags/kodi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Get Started With Developing Kodi Plugins</title>
      <link>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</link>
      <pubDate>Thu, 16 Jun 2022 20:56:27 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</guid>
      <description>how to get started with developing kodi plugins 开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务 主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力 学习kodi插</description>
      <content>&lt;h1 id=&#34;how-to-get-started-with-developing-kodi-plugins&#34;&gt;how to get started with developing kodi plugins&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务
主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力
学习kodi插件开发除了需要一些编程经验外，还需要了解kodi系统插件运行环境，开发环境等
今天特记录一下如何搭建kodi开发环境，
搭建开发环境需要准备以下步骤，以windows 10+ python2.7+ vmware 操作环境为例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1 利用vmware安装libreELEC 系统，libreELEC 就是一个阉割版本的Linux+kodi整合而成
安装libreELEC，首先是去官网下载libreELEC OVA文件&lt;br&gt;
官网：https://libreelec.tv/downloads/generic/&lt;br&gt;
&lt;img src=&#34;libreELEC-OVA.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2 用vmware打开下载好的libreELEC OVA 文件即可运行&lt;br&gt;
&lt;img src=&#34;vmware-open-libreelec-ova.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
启动后，启用ssh 设置ssh密码，启用smb服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3 设置windows10 与 libreELEC 网络互通，并且还要让libreelec 访问外网，vmware需要设置桥接模式 或者 nat网络模式，让libreelec 可以访问网外网，
我这边设置NAT模式，需要知道vmware nat 的ip 范围，一般nat模式，vmware会自动分配一个ip给libreelec的，我这里设置静态，不然ip会变动
影响后面开发&lt;br&gt;
&lt;img src=&#34;kodi-set-static-ip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
4 配置libreELEC 系统文件共享给windows 10访问，ip为libreELEC系统的刚设置的ip&lt;br&gt;
只要下图片窗口能正常打开，即网络能访问通&lt;br&gt;
&lt;img src=&#34;map-drive-ip-sharefile.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
映射windows盘符,这步很重要，不然会影响后面代码开发&lt;br&gt;
&lt;img src=&#34;map-drive-x.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
5 进入libreELEC系统，安装hellworld模块&lt;br&gt;
下载hellworld模块，下载地址如下&lt;br&gt;
&lt;a href=&#34;https://github.com/zag2me/script.hello.world/archive/master.zip&#34;&gt;https://github.com/zag2me/script.hello.world/archive/master.zip&lt;/a&gt;&lt;br&gt;
选择安装从zip 文件 安装插件，安装前提是需要设置安装来源允许 未知来源&lt;code&gt;unkown&lt;/code&gt;安装&lt;br&gt;
&lt;img src=&#34;kodi-install-from-zip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
6 用命令行工具登录libreELEC系统并进入到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt; 创建&lt;code&gt;project&lt;/code&gt;，移动&lt;code&gt;script.hello.world&lt;/code&gt;插件目录到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt;共享目录下
并做好script.hello.world软链接，这一步需要把插件目录移动共享目录让windows10可见能访问，原来的libreELEC插件目录做好软链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;      cd /storage/.kodi/userdata/   
       
      mkdir project 
        
      mv /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project   
      
      ln -sf /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project/script.hello.world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;7 上一步成功后，应该可以用pycharm 打开&lt;code&gt;script.hello.world&lt;/code&gt; 项目了&lt;br&gt;
windows 10 打开可以看到如下结果&lt;br&gt;
&lt;img src=&#34;script.hello.world-project-dir.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;pycharm-open-helloworld.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
8 安装pycharm 插件，该插件用于pycharm python 代码自动提示&lt;br&gt;
&lt;img src=&#34;kodi-pugin-install-pycharm.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
9 修改kodi helloworld插件代码并运行&lt;br&gt;
addon.py为主要执行文件，插件入口文件，&lt;br&gt;
&lt;img src=&#34;helloworld-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code1.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
再次修改代码，再次运行
&lt;img src=&#34;kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
日志查看&lt;br&gt;
tail -f  /storage/.kodi/temp/kodi.log &lt;br&gt;
&lt;img src=&#34;tail--f-log.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
xbmc打开窗口，并显示音乐播放列表&lt;br&gt;
xbmc.executebuiltin(&amp;ldquo;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;quot;)&lt;br&gt;
xbmc打印日志&lt;br&gt;
xbmc.log(&amp;ldquo;message&amp;rdquo;,level=xbmc.LOGNOTICE)&lt;br&gt;
参考文档官网&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&#34;&gt;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/Add-on_development&#34;&gt;https://kodi.wiki/view/Add-on_development&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;码字不易，求打赏
&lt;img src=&#34;payqr.jpg&#34; alt=&#34;payqr&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Set Kodi to Start Playing Content</title>
      <link>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</link>
      <pubDate>Sun, 13 Jun 2021 07:09:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</guid>
      <description>我是如何在coreelec系统设置开机自动播放视频列表的 手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱 打造一台家用融媒体diy宣传</description>
      <content>&lt;h1 id=&#34;我是如何在coreelec系统设置开机自动播放视频列表的&#34;&gt;&lt;strong&gt;我是如何在coreelec系统设置开机自动播放视频列表的&lt;/strong&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱&lt;/p&gt;
&lt;p&gt;打造一台家用融媒体diy宣传广告机,设置定时开关机，定时播放指定内容，比如每天早上播放《三字经》《刷牙》，每天中午播放《交通安全》，晚上播放《护眼宣导片》&lt;/p&gt;
&lt;p&gt;等三个.mp4文件。于是翻了一下kodi技术开发论坛，就有了以下成果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原论坛：https://forum.kodi.tv/showthread.php?tid=157120&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;​     用electerm ssh管理软件登录到kodi 系统，在/storage/.kodi/userdata/ 目录下 创建 autoexec.py 文件 ，输入代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc 
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/test.m3u)&amp;#34;&lt;/span&gt;)
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# 设置音量，这个很有用，比如早上闹钟模式可以设置大一点，晚上睡觉前可以小一点声音，这里的脚本是在nas 群晖系统自动生成，采用定时任务生成的，然后在kodi设备做了开机启动挂载nfs共享实现的&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;test.m3u我这里只是测试音视频列表，你可以用nas nfs 接入就可以，做一个软链接即可读取&lt;/p&gt;
&lt;p&gt;test.m3u为播放列表，该文件是生成的，生成工具在这里，也可以制混合m3u播放列表，包含本地播放，在线链接播放&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Isayso/PlaylistEditorTV&#34;&gt;Isayso/PlaylistEditorTV: IPTV m3u list Editor/Player for Windows with Kodi support (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072200142.png&#34; alt=&#34;image-20210613072200142&#34;&gt;&lt;/p&gt;
&lt;p&gt;设备实际播放效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072552887.png&#34; alt=&#34;image-20210613072552887&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后推荐一款-快控-app-非常好用配合ddnsto远程控制相当完美&#34;&gt;最后推荐一款 &lt;code&gt;快控&lt;/code&gt; APP 非常好用，配合ddnsto远程控制相当完美&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162652341.png&#34; alt=&#34;image-20210615162652341&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162617390.png&#34; alt=&#34;image-20210615162617390&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;h1 id=&#34;注意事项总结&#34;&gt;注意事项总结&lt;/h1&gt;
&lt;p&gt;本场景需求是：让n1 kodi 设备 音视频播放器，开机自动播放，并根据早，中，晚，周末，节假日特证来设置不同播放内容，内容可以是&lt;/p&gt;
&lt;p&gt;网络采集的在线视频，在线新闻，音乐，Youtube频道自动播放等等，诸如此类，&lt;/p&gt;
&lt;p&gt;需要注意以下几点：&lt;/p&gt;
&lt;p&gt;1，通过小米智能插座，控制开关机时段，比如早上时间段为6：00 ~ 8：00， 中午时间段11：00 ~ 14：00 ， 晚上时间段：17：30 ~ 21：00&lt;/p&gt;
&lt;p&gt;2，内容通过群晖计划任务，定时生成播放计划脚本，以及播放内容&lt;/p&gt;
&lt;p&gt;3，播放列表根据自己喜好，分类制作不同的分类播放列表&lt;/p&gt;
&lt;p&gt;​      如国学单独一个播放列表，流行music一个播放列表，背景音乐，睡前音乐等等&lt;/p&gt;
&lt;p&gt;播放列表是自己生成的播放列表.m3u格式如下文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-m3u&#34; data-lang=&#34;m3u&#34;&gt;#EXTCPlayListM3U::M3U
#EXTINF:0,高枫 - 大中国
/storage/recordings/mp3/高枫 - 大中国.mp3
#EXTINF:0,下山
/storage/recordings/01.下山.flac
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;开机自动播放脚本存储位置 &lt;code&gt;/storage/.kodi/userdata/autoexec.py&lt;/code&gt;  代码内容如下，根据自身需求定制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime

today &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;today()
d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()
now &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; today&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day
dayOfWeek &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;weekday())
cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(getattr(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hour&amp;#39;&lt;/span&gt;))
cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(getattr(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;minute&amp;#39;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(dayOfWeek&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dayOfWeek &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;):
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;):
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/go2school.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/go2school.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;))
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatall)&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;):
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;))
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatall)&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/playlist.m3u)&amp;#34;&lt;/span&gt;)
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;))
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatoff)&amp;#34;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过不需要重启coreELEC系统就可以执行，这样可以快速调试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kodi-send --action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RunScript(&amp;#34;special://profile/autoexec.py&amp;#34;)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其播放计划脚本为autoexec.py 脚本 需要根据不同日期判断音量，不同时间段判断播放内容&lt;/p&gt;
&lt;p&gt;m3u 文件格式制作请参考文档：&lt;a href=&#34;https://en.wikipedia.org/wiki/M3U&#34;&gt;M3U - Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;码字不易，求打赏
&lt;img src=&#34;payqr.jpg&#34; alt=&#34;payqr&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
