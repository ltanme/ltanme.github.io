<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LTAN.ME</title>
    <link>https://ltan.me/post/</link>
    <description>Recent content in Posts on LTAN.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Aug 2021 15:58:44 +0800</lastBuildDate><atom:link href="https://ltan.me/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Main Route and Soft Route Use Configuration</title>
      <link>https://ltan.me/post/2021/08/main-route-and-soft-route-use-configuration/</link>
      <pubDate>Wed, 11 Aug 2021 15:58:44 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/main-route-and-soft-route-use-configuration/</guid>
      <description>软路由配置使用方法 为什么需要使用软路由，是为了不影响原来主路由上网配置，网络环境，增加一个软路由来专门来解析404网站，及特殊的网络连接 满足上网需求，下图就是今天要介绍软路由其中一种设置方法，不影响原</description>
      <content>&lt;h1 id=&#34;软路由配置使用方法&#34;&gt;软路由配置使用方法&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么需要使用软路由，是为了不影响原来主路由上网配置，网络环境，增加一个软路由来专门来解析404网站，及特殊的网络连接&lt;/p&gt;
&lt;p&gt;满足上网需求，下图就是今天要介绍软路由其中一种设置方法，不影响原来的网络环境下，给增加一台软路由方法，ip设置方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210811160444222.png&#34; alt=&#34;image-20210811160444222&#34;&gt;&lt;/p&gt;
&lt;p&gt;当电视或者手机需要打开404网站，则需要单独配置 dns 和网关ip,即可正常扶梯&lt;/p&gt;
&lt;p&gt;上图为作者家用宽带  移动运营商300M 速度，上行30M, 下行300M,实际用speedtest测速apk，测试速度上行为4m, 下行为50M/s&lt;/p&gt;
&lt;p&gt;主要设置注意点：&lt;/p&gt;
&lt;p&gt;1,k2p 做为软路由，需要连使用lan口 接入主路由，k2p 自身需要接入lan口 而不是wan 口，接入wan口的话，则会产生的ip和主路由ip不在同一个网段，这样以来你的局域网访问就麻烦，这样默认情况下如果链接的软路由wifi的的手访问不了 群晖，最终你家里如果有多个路由器且都不在同一个网段的话，结果设备访问会多一层nat转发&lt;/p&gt;
&lt;p&gt;2，关于测速，很多朋友对自己家里网速并不关心，不知道自己家里的路由器最大能不能跑满运营商给的网络环境。我经常会碰到运营商打电话给我推销网络提速套餐，然而自己家里路由是个十几年前的百兆路由器tplink的，如果提速成功了，往往网速还停留在原来的样子&lt;/p&gt;
&lt;p&gt;这样是不是很坑，花的网络费用价值缺没有最大化，这里给大家推荐 手机 安装一款speedtest apk ,以后你可以时不时的点击一下测试你自己家里网速情况。当我加装了软路由器后，我再用speedtest 测速，并没有达到理想的值，于是在找原因，也打过几次电话给运营商投诉，后面发现是路由器本身发热温度太高了，导致的网速变慢，于是需要买风扇了，降温效果很明显，再次测试网速，可以正常了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210811164100204.png&#34; alt=&#34;image-20210811164100204&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tensorflow Dll Solutions for Missing Files</title>
      <link>https://ltan.me/post/2021/07/tensorflow-dll-solutions-for-missing-files/</link>
      <pubDate>Mon, 26 Jul 2021 10:29:15 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/tensorflow-dll-solutions-for-missing-files/</guid>
      <description>TensorFlow DLL Solutions for missing files：cudnn64_8.dll not found&amp;amp;cusolver64_10.dll not found 解决tensorflow在安装最新版本（2.5.0） 时，运行时报错找不到各种dll文件方法。网上有很多的原因，说有因版本太高了，不兼容 还给了什么</description>
      <content>&lt;h1 id=&#34;tensorflow-dll-solutions-for-missing-filescudnn64_8dll-not-foundcusolver64_10dll-not-found&#34;&gt;TensorFlow DLL Solutions for missing files：cudnn64_8.dll not found&amp;amp;cusolver64_10.dll not found&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;解决tensorflow在安装最新版本（2.5.0） 时，运行时报错找不到各种dll文件方法。网上有很多的原因，说有因版本太高了，不兼容&lt;/p&gt;
&lt;p&gt;还给了什么版本对应安装包，反正是折腾了很久，作为tensorflow使用新手，主要是想用用最新版本如何。正好换了台新的笔记本联想工作本本&lt;/p&gt;
&lt;p&gt;legion系统 r7000, 内存32G, CPU amd 4000 series ryzen，显卡nvidia  geforce gtx 1060。最初我按照网上的教程安装很多个版本都试了不行，一气之下，安装最新新版 pip install tensorflow 最新版本如何，什么需要设置pip镜像， 反正都是科学网络了，下载速度也快。&lt;/p&gt;
&lt;p&gt;当前配置的最新的显卡驱动，最新的tensorflow框架版本2.5.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726103856956.png&#34; alt=&#34;image-20210726103856956&#34;&gt;&lt;/p&gt;
&lt;p&gt;第一步，更新nvidia 驱动程序 ，去nvidia官网更新，能更新则更新最新版本显卡驱动程序，不能更新则卸载，然后重新安装显卡驱动程序&lt;/p&gt;
&lt;p&gt;​                 去nvidia官网下载一个GeForce_Experience 的软件，用来专门更新显卡驱动程&lt;/p&gt;
&lt;p&gt;第二步下载最新版本的cuda开发工具sdk, 最新版，去官网下载，不要点我这个链接下载，&lt;/p&gt;
&lt;p&gt;​      我最下载最新的是这个链接地址 &lt;a href=&#34;https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda_11.4.0_471.11_win10.exe&#34;&gt;https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda_11.4.0_471.11_win10.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​       再次提醒，你去官网下载，不要下载我上面连接。免的版本不兼容&lt;/p&gt;
&lt;p&gt;第三步， 安装最新版本的anaconda3 最版本的&lt;/p&gt;
&lt;p&gt;​      去掉官网下载 &lt;a href=&#34;https://repo.anaconda.com/archive/Anaconda3-2020.11-Windows-x86_64.exe&#34;&gt;https://repo.anaconda.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第四步，安装tensorflow最新版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;​       pip install tensorflow

​       pip install tensorflow-gpu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第五步，则试是否正常，运行如下脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tensorflow &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; tf
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TF_CPP_MIN_LOG_LEVEL&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;constant(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;)
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;constant(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;)
print(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b)
print(tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GPU:&amp;#39;&lt;/span&gt;, tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_physical_devices(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GPU&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现运行后报错，找不到各种dll 文件，像如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\anaconda3\python.exe E:/studyProject/python/tensorflow/test4.py
2021-07-26 09:52:07.878136: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2.5.0
2021-07-26 09:52:20.978421: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library nvcuda.dll
2021-07-26 09:52:21.087958: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 09:52:21.088759: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 09:52:22.594321: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublas64_11.dll
2021-07-26 09:52:22.594571: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublasLt64_11.dll
2021-07-26 09:52:23.993389: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cufft64_10.dll
2021-07-26 09:52:24.075060: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library curand64_10.dll
2021-07-26 09:52:24.866344: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusolver64_11.dll
2021-07-26 09:52:25.583784: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusparse64_11.dll
2021-07-26 09:52:25.586297: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library &#39;cudnn64_8.dll&#39;; dlerror: cudnn64_8.dll not found
2021-07-26 09:52:25.586582: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1766] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2021-07-26 09:52:25.590408: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-07-26 09:52:25.594368: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1258] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-07-26 09:52:25.594692: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1264]      
tf.Tensor(3.0, shape=(), dtype=float32)
GPU: []

Process finished with exit code 0

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上问题有两个问题&lt;/p&gt;
&lt;p&gt;1，找 不到&amp;rsquo;cudnn64_8.dll&#39;; dlerror: cudnn64_8.dll not found&lt;/p&gt;
&lt;p&gt;2，GPU: []  gpu不支持，跑tensorflow怎么能没有gpu工作呢，怎么不支持gpu呢&lt;/p&gt;
&lt;p&gt;首先把第一个版本解决&lt;/p&gt;
&lt;p&gt;直接在网站https://www.dll-files.com/search/下载，我上面报错只丢了一个dll 文件，有些人丢一堆，我在这建议安装最新版本cuda,和显卡驱动程序 再测试一下&lt;/p&gt;
&lt;p&gt;下载dll文件后，把它放在cuda 安装目录 bin文件下，具体目录，我的目录如下：&lt;/p&gt;
&lt;p&gt;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\bin&lt;/p&gt;
&lt;p&gt;注意NVIDIA GPU Computing Toolkit  这个目录是你下载cuda后，双击解压安装后才会有的这个目录，必须安装，而不是下载下来解压就有的&lt;/p&gt;
&lt;p&gt;安装完后，重启电脑&lt;/p&gt;
&lt;p&gt;再跑一次上面脚本得到如下信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\anaconda3\python.exe E:/studyProject/python/tensorflow/test4.py
2021-07-26 10:26:42.976336: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 10:26:48.285803: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library nvcuda.dll
2021-07-26 10:26:48.337562: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 10:26:48.338010: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 10:26:48.357652: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublas64_11.dll
2021-07-26 10:26:48.357930: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublasLt64_11.dll
2021-07-26 10:26:48.373414: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cufft64_10.dll
2021-07-26 10:26:48.376599: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library curand64_10.dll
2021-07-26 10:26:48.383979: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusolver64_11.dll
2021-07-26 10:26:48.392844: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusparse64_11.dll
2021-07-26 10:26:48.394278: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudnn64_8.dll
2021-07-26 10:26:48.394723: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0
2021-07-26 10:26:48.395510: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-07-26 10:26:48.398205: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 10:26:48.398921: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0
2021-07-26 10:26:49.488227: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1258] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-07-26 10:26:49.488470: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1264]      0 
2021-07-26 10:26:49.488610: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1277] 0:   N 
2021-07-26 10:26:49.489126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1418] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2147 MB memory) -&amp;gt; physical GPU (device: 0, name: NVIDIA GeForce GTX 1650, pci bus id: 0000:01:00.0, compute capability: 7.5)
tf.Tensor(3.0, shape=(), dtype=float32)
2.5.0
GPU: [PhysicalDevice(name=&#39;/physical_device:GPU:0&#39;, device_type=&#39;GPU&#39;)]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如下三行是打印的真实结果，上面是tensorflow打印的日志信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;｀tf.Tensor(3.0, shape=(), dtype=float32)｀&lt;br&gt;
｀2.5.0｀&lt;br&gt;
｀GPU: [PhysicalDevice(name=&#39;/physical_device:GPU:0&#39;, device_type=&amp;lsquo;GPU&amp;rsquo;)]｀&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终于看到GPU 中括号里有 信息了，说明gpu生效，安装tensorflow-gpu成功，&lt;/p&gt;
&lt;p&gt;如果你用Anaconda Jupyter Notebook 默认是不会打印 上面日志的，也就是说看不到什么dll 文件丢失&lt;/p&gt;
&lt;p&gt;我用的pycharm ide&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726110316971.png&#34; alt=&#34;image-20210726110316971&#34;&gt;&lt;/p&gt;
&lt;p&gt;我用pycharm ide 配置的环境 如下，我电脑 安装了很多的python 环境，有代码需要在pycharm 切换python 版本，才能正常跑起来，比如我的tensorflow2.5.0 是要用Python 3.8.8才能跑的。 就是如下设置&lt;/p&gt;
&lt;p&gt;下面就是我安装的tensorflow 相关依赖包&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726110516851.png&#34; alt=&#34;image-20210726110516851&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My Python2.7 Notes</title>
      <link>https://ltan.me/post/2021/07/my-python2.7-notes/</link>
      <pubDate>Wed, 21 Jul 2021 20:43:52 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/my-python2.7-notes/</guid>
      <description>python 日常笔记 记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个</description>
      <content>&lt;h1 id=&#34;python-日常笔记&#34;&gt;python 日常笔记&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 &amp;raquo;&amp;gt; 后直接执行代码。Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;时间转换&#34;&gt;时间转换&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromtimestamp(long(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1528797322&amp;#34;&lt;/span&gt;))
print date_time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, %H:%M:%S&amp;#34;&lt;/span&gt;)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;])
 
 
strftime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:31:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
strftime2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:30:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;32&amp;#34;&lt;/span&gt;,strftime&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;strftime2)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
print datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple()
print time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple())
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print long(time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(date1) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;where-in-mysql-使用&#34;&gt;where in mysql 使用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_config_list&lt;/span&gt;(conn, cur, aid, keys):
 sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;select `key`,label from config where id = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; and `key` in (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (
    aid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; len(keys)))
    cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(sql, keys)
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fetchall()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;实现类似java-stream-grouping-by-to-map-效果&#34;&gt;实现类似java stream grouping by to map 效果&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_config_list(conn, cur,item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;],keys)
print clist
clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]:v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(clist)}
print clist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;三目表达式应用&#34;&gt;三目表达式应用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reso&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viseo&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sourname&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brad&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;批量插入mysql&#34;&gt;批量插入mysql&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;INSERT INTO breakfast (name, spam, eggs, sausage, price) VALUES (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;, [ (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spam and Sausage Lover&amp;#39;s Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not So Much Spam Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Don&amp;#39;t Wany ANY SPAM! Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.95&lt;/span&gt; ) ] )
&lt;span style=&#34;color:#75715e&#34;&gt;#so in your case:&lt;/span&gt;
c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insert into T (F1,F2) values (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;, [(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Mathematical Concepts Ai Learing Section 2</title>
      <link>https://ltan.me/post/2021/07/mathematical-concepts-ai-learing-section-2/</link>
      <pubDate>Fri, 09 Jul 2021 16:23:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/mathematical-concepts-ai-learing-section-2/</guid>
      <description>AI学习&amp;ndash;数学基础概念 绝对值 绝对值是指一个数在数轴上所对应点到原点的距离，例如，3的绝对值为3，-3的绝对值也为3。数字的绝对值可以被认为是与零的距离。 应用举例： from keras import backend as K # b是生成一个</description>
      <content>&lt;h1 id=&#34;ai学习--数学基础概念&#34;&gt;AI学习&amp;ndash;数学基础概念&lt;/h1&gt;
&lt;h4 id=&#34;绝对值&#34;&gt;绝对值&lt;/h4&gt;
&lt;p&gt;绝对值是指一个数在数轴上所对应点到原点的距离，例如，3的绝对值为3，-3的绝对值也为3。数字的绝对值可以被认为是与零的距离。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;应用举例：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; backend &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; K
&lt;span style=&#34;color:#75715e&#34;&gt;# b是生成一个4x4 二维 -1 ~ 0 的随机数&lt;/span&gt;
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; K&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random_uniform_variable(shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), low&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, high&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 均匀分布&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 原始打印&lt;/span&gt;
print(b)
&lt;span style=&#34;color:#75715e&#34;&gt;# 取绝对值后打印&lt;/span&gt;
print(K&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;abs(b))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#原始数据打印，一个二维张量，4x4列的数据&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Variable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Variable:0&amp;#39;&lt;/span&gt; shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32, numpy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
array([[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9059057&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.58264804&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9395989&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.39963734&lt;/span&gt;],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1112231&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5067514&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.10375643&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6551852&lt;/span&gt; ],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8337679&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.778535&lt;/span&gt;  , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7544004&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5426916&lt;/span&gt; ],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.09164572&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6224438&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2649765&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.45468187&lt;/span&gt;]],
      dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      
&lt;span style=&#34;color:#75715e&#34;&gt;#取绝对值后的结果&lt;/span&gt;
tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tensor(
[[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9059057&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.58264804&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9395989&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.39963734&lt;/span&gt;]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1112231&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5067514&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.10375643&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6551852&lt;/span&gt; ]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8337679&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.778535&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7544004&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5426916&lt;/span&gt; ]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.09164572&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6224438&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2649765&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.45468187&lt;/span&gt;]], shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Anaconda Modify the Domestic Mirror Ai Learning Section 1</title>
      <link>https://ltan.me/post/2021/07/anaconda-modify-the-domestic-mirror-ai-learning-section-1/</link>
      <pubDate>Thu, 08 Jul 2021 20:58:37 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/anaconda-modify-the-domestic-mirror-ai-learning-section-1/</guid>
      <description>我的AI学习第一课 Anaconda 修改镜像源 为什么要修改镜像源，因为初次使用anaconda 发现下载太慢了，都是从官网服务器拉取模块，需要 等很漫长时间， 因此网上找了一上镜像源和修改源的方法，就用清华大学的源 [https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/](https://link.jianshu.com/?t=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/) 大概分</description>
      <content>&lt;h1 id=&#34;我的ai学习第一课-anaconda-修改镜像源&#34;&gt;我的AI学习第一课 Anaconda 修改镜像源&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要修改镜像源，因为初次使用anaconda 发现下载太慢了，都是从官网服务器拉取模块，需要 等很漫长时间，&lt;/p&gt;
&lt;p&gt;因此网上找了一上镜像源和修改源的方法，就用清华大学的源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/](https://link.jianshu.com/?t=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大概分为三步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1首先找到conda安装目录&#34;&gt;1、首先找到conda安装目录&lt;/h2&gt;
&lt;p&gt;这里我安装在&lt;code&gt;D:\anaconda3&lt;/code&gt;  然后找到&lt;code&gt;condabin&lt;/code&gt;目录&lt;/p&gt;
&lt;p&gt;在地址输入 &lt;code&gt;cmd&lt;/code&gt; 命令并回车执行，在弹窗的cmd 窗口输入以下两条命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;此时，目录 C:\Users&amp;lt;你的用户名&amp;gt; 下就会生成配置文件.condarc，内容如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&amp;gt;type .condarc
channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - defaults
show_channel_urls: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2修改配置文件&#34;&gt;2、修改配置文件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;删除上述配置文件 .condarc 中的第三行，然后保存，最终版本文件如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
show_channel_urls: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3查看是生否生效&#34;&gt;3、查看是生否生效&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;通过命令 conda info 查看当前配置信息，内容如下，即修改成功，关注 channel URLs 字段内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ondabin&amp;gt;conda info

     active environment : None
       user config file : C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;condarc
 populated config files : C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;condarc
          conda version : 4.10.3
    conda-build version : 3.21.4
         python version : 3.8.8.final.0
       virtual packages : __cuda&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;11.0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                          __win&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                          __archspec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64
       base environment : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;writable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      conda av data dir : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;tc&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda
  conda av metadata url : None
           channel URLs : https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64
                          https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/noarch
                          https://repo.anaconda.com/pkgs/main/win-64
                          https://repo.anaconda.com/pkgs/main/noarch
                          https://repo.anaconda.com/pkgs/r/win-64
                          https://repo.anaconda.com/pkgs/r/noarch
                          https://repo.anaconda.com/pkgs/msys2/win-64
                          https://repo.anaconda.com/pkgs/msys2/noarch
          package cache : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;conda&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
       envs directories : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;conda&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
               platform : win-64
             user-agent : conda/4.10.3 requests/2.25.1 CPython/3.8.8 Windows/10 Windows/10.0.19041
          administrator : True
             netrc file : None
           offline mode : False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;很明显我上述加的 清华镜像源 己成功了，&lt;code&gt;win-64&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Phicomm Router Upgrade System to Openwrt</title>
      <link>https://ltan.me/post/2021/07/phicomm-router-upgrade-system-to-openwrt/</link>
      <pubDate>Fri, 02 Jul 2021 14:40:17 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/phicomm-router-upgrade-system-to-openwrt/</guid>
      <description>OpenWrt Lede 系统 刷入 k2p 路由器 记录一下，过去经常用的k2p 刷入老毛子系统【padavan】 不用选闪存布局，分分钟成功刷入。但这次刷入OpenWrt 时发现死活进去路由器登录界面。经过在恩山发贴求助终于解决，感谢恩</description>
      <content>&lt;h1 id=&#34;openwrt-lede-系统-刷入-k2p-路由器&#34;&gt;OpenWrt Lede 系统 刷入 k2p 路由器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一下，过去经常用的k2p 刷入老毛子系统【padavan】 不用选闪存布局，分分钟成功刷入。但这次刷入OpenWrt 时发现死活进去路由器登录界面。经过在恩山发贴求助终于解决，感谢恩山大神们，真的很厉害！
我刷入步骤是都先复位的，长按复位键 8到10秒，松开，
然后上传&lt;code&gt;openwrt-ramips-mt7621-phicomm_k2p-initramfs-kernel.binn &lt;/code&gt;文件，
然后点击更新，重启，就是不能进入&lt;code&gt;openwrt&lt;/code&gt; 系统路由系统，关键是&lt;code&gt;openwrt wifi ssid &lt;/code&gt;搜索不到，没看到， 说明刷入不成功，我用网线链接电脑 ，电脑网线插上都不能有正常的&lt;code&gt;ip&lt;/code&gt; 获取到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;登录界面如下图, 打开 http://192.168.10.10 就可以进入，如果找不到ip是多少，可以用ipconfig查看，必须是电脑 网线有线连接到 k2p lan口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702144843102.png&#34; alt=&#34;image-20210702144843102&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;默认用户名 &lt;code&gt;root&lt;/code&gt;   密码 &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702144651741.png&#34; alt=&#34;image-20210702144651741&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;刷入失败导致路由器不能工作，重新解决步骤   记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702145346377.png&#34; alt=&#34;image-20210702145346377&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Solve the Startup Problem of Nano Disk Manager Zerotier</title>
      <link>https://ltan.me/post/2021/06/solve-the-startup-problem-of-nano-disk-manager-zerotier/</link>
      <pubDate>Tue, 15 Jun 2021 16:06:18 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/solve-the-startup-problem-of-nano-disk-manager-zerotier/</guid>
      <description>解决[贝壳云]小刚炮系统（Nano Disk Manager） zerotier 开机启动问题 在网上找了很多的教程，有很相关做开机启动 zerotier 客户端，我都没有成功，好几次由于停电导致的 盒子启动后并没有启动zerotier 客户端。出门在</description>
      <content>&lt;h1 id=&#34;解决贝壳云小刚炮系统nano-disk-manager-zerotier-开机启动问题&#34;&gt;解决[贝壳云]小刚炮系统（Nano Disk Manager） zerotier 开机启动问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在网上找了很多的教程，有很相关做开机启动 zerotier 客户端，我都没有成功，好几次由于停电导致的 盒子启动后并没有启动zerotier 客户端。出门在外没有远程服务真的很不方便。经过折腾好一阵子找到一个解决方法如下&lt;/p&gt;
&lt;h5 id=&#34;找到原来开机启动脚本没有的话添加即可-etcinitds50zerotiersh&#34;&gt;找到原来开机启动脚本,没有的话添加即可 /etc/init.d/S50zerotier.sh&lt;/h5&gt;
&lt;h5 id=&#34;把如下代码新建startup_zerotiersh文件写入如下代码内容保存在root目录下&#34;&gt;把如下代码，新建startup_zerotier.sh文件，写入如下代码内容，保存在/root目录下&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt; 
#!/bin/sh
program=zerotier
sn=`ps -ef | grep program | grep -v grep |awk &#39;{print $2}&#39;`
if [ &amp;quot;${sn}&amp;quot; = &amp;quot;&amp;quot; ]
then
  sh /etc/init.d/S50zerotier.sh
  echo start ok !
else
  echo running
fi
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;h5 id=&#34;在小刚炮系统后台打开任务执行菜单栏添加-计划任务为每隔2分钟启动该脚本即可&#34;&gt;在小刚炮系统后台，打开任务执行菜单栏，添加 计划任务为每隔2分钟启动该脚本即可&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702145944040.png&#34; alt=&#34;image-20210702145944040&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Set Kodi to Start Playing Content</title>
      <link>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</link>
      <pubDate>Sun, 13 Jun 2021 07:09:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</guid>
      <description>我是如何在coreelec系统设置开机自动播放视频列表的 手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱 打造一台家用融媒体diy宣传</description>
      <content>&lt;h1 id=&#34;我是如何在coreelec系统设置开机自动播放视频列表的&#34;&gt;&lt;strong&gt;我是如何在coreelec系统设置开机自动播放视频列表的&lt;/strong&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱&lt;/p&gt;
&lt;p&gt;打造一台家用融媒体diy宣传广告机,设置定时开关机，定时播放指定内容，比如每天早上播放《三字经》《刷牙》，每天中午播放《交通安全》，晚上播放《护眼宣导片》&lt;/p&gt;
&lt;p&gt;等三个.mp4文件。于是翻了一下kodi技术开发论坛，就有了以下成果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原论坛：https://forum.kodi.tv/showthread.php?tid=157120&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;​     用electerm ssh管理软件登录到kodi 系统，在/storage/.kodi/userdata/ 目录下 创建 autoexec.py 文件 ，输入代码如下&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/.kodi/userdata/playlists/video/1.mp4)&amp;#34;&lt;/span&gt;)
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatall)&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#PlayerControl(repeatall)  这一句是循环播放1.mp4文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;1.mp4 我这里只是测试视频，你可以用nas nfs 接入就可以，做一个软链接即可读取&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072200142.png&#34; alt=&#34;image-20210613072200142&#34;&gt;&lt;/p&gt;
&lt;p&gt;设备实际播放效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072552887.png&#34; alt=&#34;image-20210613072552887&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后推荐一款-快控-app-非常好用配合ddnsto远程控制相当完美&#34;&gt;最后推荐一款 &lt;code&gt;快控&lt;/code&gt; APP 非常好用，配合ddnsto远程控制相当完美&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162652341.png&#34; alt=&#34;image-20210615162652341&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162617390.png&#34; alt=&#34;image-20210615162617390&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>Abacus Mental Arithmetic Problem Generation</title>
      <link>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</link>
      <pubDate>Tue, 01 Jun 2021 09:33:32 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</guid>
      <description>珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成 珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到</description>
      <content>&lt;h1 id=&#34;珠心算二笔三笔五笔十笔一位加减混合计算题自动生成&#34;&gt;珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到世界各国，推进着人类文明的发展历程。&lt;/p&gt;
&lt;p&gt;珠心算只有三个符号即1、5和0;数学有10个符号，即0、1、2、3、4、5、6、7、8、9。可见珠心算运算的简捷性。珠心算的直观模型作用能培养小孩子的数学概念能力，珠心算的分析模型作用能帮助小孩子理解应用题的结构关系和数量关系，提高解题能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./zhuxinsuanpang.jpg&#34; alt=&#34;珠心算盘&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这几天看到娃娘，在用办公软件excel 给5岁娃出题，一页一页的打印出来, 很费劲&lt;/p&gt;
&lt;p&gt;我说这个可以写个程序自动生成出来，更快。不用这么幸苦&lt;/p&gt;
&lt;p&gt;开始我不太了解珠心算的规则，后面翻了资料，还真不是随便10以内的加减组合。有一定的规则，如上文章开头所描述&lt;/p&gt;
&lt;h3 id=&#34;出题要求规则如下&#34;&gt;出题要求规则如下:&lt;/h3&gt;
&lt;p&gt;加法&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以加&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以加&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以加&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
减法&lt;br&gt;
&lt;code&gt;9&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;，&lt;code&gt;9&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以减&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1-9&lt;/code&gt;都可以加减&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;出&lt;code&gt;五笔&lt;/code&gt;到&lt;code&gt;十笔&lt;/code&gt;的题&lt;/p&gt;
&lt;p&gt;要求计算结果不能是负数，结果不能大于10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;于是就有以下代码&#34;&gt;于是就有以下代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding=utf-8 -*-&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Workbook
wb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Workbook()
ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;active
reload(sys)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setdefaultencoding(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;)
var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
sa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getNum&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getU&lt;/span&gt;(f):
    u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:
        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (u &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;,var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;, var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getV&lt;/span&gt;(a):
    al &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(a)
    qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (al &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
        qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, al)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; qz
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getRes&lt;/span&gt;(a,b,u):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(u&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;b
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recursive_formula&lt;/span&gt;(num,count,arr):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(arr)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
      arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(num))
    u1, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getU(num)
    count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[getV(a)]
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(u1))
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(v))
        r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getRes(num,v,u1)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; recursive_formula(r, count, arr)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; arr 
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
cell &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#生成excel 4列表格&lt;/span&gt;
total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#生成100题&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; recursive_formula(getNum(), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, [])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(data)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;total:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(a) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;)

print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;共&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;题&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; len(data)
rows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:
    rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(item)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(rows)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;cell:
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(rows)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; rows[:]
version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H%M%S&amp;#39;&lt;/span&gt;)
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;珠心算题目生成-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xlsx&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (cell,len(data),version))
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终生成效果如下，请自行调整打印格式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210601102211603.png&#34; alt=&#34;image-20210601102211603&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Application Based on lua-resty-balancer</title>
      <link>https://ltan.me/post/2021/05/application-based-on-lua-resty-balancer/</link>
      <pubDate>Sun, 30 May 2021 12:46:19 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/application-based-on-lua-resty-balancer/</guid>
      <description>基于openresty lua-resty-balancer 模块实现自定义分流功能 该模块为提供分流算法，抽离了hash算法, roundrobin轮询等，好处使业务灵活调用算法而分配对像。该对像不一定指服务器，也可以是数据对像或文件对像等</description>
      <content>&lt;h1 id=&#34;基于openresty--lua-resty-balancer-模块实现自定义分流功能&#34;&gt;基于openresty  lua-resty-balancer 模块实现自定义分流功能&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;该模块为提供分流算法，抽离了hash算法, roundrobin轮询等，好处使业务灵活调用算法而分配对像。该对像不一定指服务器，也可以是数据对像或文件对像等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1，下载https://github.com/openresty/lua-resty-balancer&lt;/p&gt;
&lt;p&gt;编译安装balancer&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://github.com/openresty/lua-resty-balancer&#34;&gt;lua-resty-balancer&lt;/a&gt;目录下执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt; gcc -O2 -fPIC -I/usr/local/include -c chash.c -o chash.o

 gcc -shared -o librestychash.so chash.o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将编译后的so文件存放在openresty 安装目录下的lualib 文件夹下即可，&lt;/p&gt;
&lt;p&gt;把 chash.lua   roundrobin.lua    两个文件复制到lualib/resty 目录下即可&lt;/p&gt;
&lt;p&gt;2，应用业务代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;worker_processes&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;error_log&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;logs/error.log&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;debug&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;events&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;worker_connections&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;http&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;init_by_lua_block&lt;/span&gt; {
	    &lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;resty_chash&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.chash&amp;#34;&lt;/span&gt;
		&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;cjson&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;require(&amp;#34;cjson.safe&amp;#34;)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;object_list_1999&lt;/span&gt; = {
            &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;#34;1985&amp;#34;]&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;[&amp;#34;1986&amp;#34;]&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;str_null&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;string.char(0)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pids,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;nodes&lt;/span&gt; = {}&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; {}
        &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pid,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;weight&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pairs(object_list_1999)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;do&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;string.gsub(pid,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;str_null)&lt;/span&gt; 
            &lt;span style=&#34;color:#e6db74&#34;&gt;pids[id]&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pid&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;nodes[id]&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;weight&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;resty_chash:new(nodes)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_chash_up_1999&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_ids_1999&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pids&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;server&lt;/span&gt; {
        &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;;
		&lt;span style=&#34;color:#f92672&#34;&gt;charset&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;utf-8&lt;/span&gt;;
        &lt;span style=&#34;color:#f92672&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/fpId&lt;/span&gt; {
		    &lt;span style=&#34;color:#f92672&#34;&gt;default_type&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;text/html&lt;/span&gt;;
			&lt;span style=&#34;color:#f92672&#34;&gt;content_by_lua_block&lt;/span&gt; {
				&lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;args,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;ngx.req.get_uri_args()&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;userId&lt;/span&gt;  = &lt;span style=&#34;color:#e6db74&#34;&gt;args[&amp;#34;userId&amp;#34;]&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_chash_up_1999&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pid&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_ids_1999&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up:find(userId)&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;hit_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pid[id]&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;ngx.say(&amp;#34;用户ID:&amp;#34;..userId..&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;命中了:&amp;#34;..hit_id)&lt;/span&gt;
			&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>How to Customize Load Balancing Logic Based on Openresty</title>
      <link>https://ltan.me/post/2021/05/how-to-customize-load-balancing-logic-based-on-openresty/</link>
      <pubDate>Wed, 19 May 2021 17:37:04 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-customize-load-balancing-logic-based-on-openresty/</guid>
      <description>基于openresty 自定义tcp 请求流量转发到不同消息处理服务器 有个消息推荐项目，netty 框架技术架构，客户端采用netty client 封装的私有tcp 协议 请求消息服务器。需要一套tcp 分流处理网关来分发请</description>
      <content>&lt;h1 id=&#34;基于openresty-自定义tcp-请求流量转发到不同消息处理服务器&#34;&gt;基于openresty 自定义tcp 请求流量转发到不同消息处理服务器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;有个消息推荐项目，netty 框架技术架构，客户端采用netty client 封装的私有tcp 协议 请求消息服务器。需要一套tcp 分流处理网关来分发请求流量到不同的tcp 消息处理器，现采用openresty 基本可以满足，主要是是用到openresy  balancer&lt;/p&gt;
&lt;p&gt;[]: &lt;a href=&#34;https://github.com/openresty/lua-resty-balancer#name&#34;&gt;https://github.com/openresty/lua-resty-balancer#name&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;模块技术实现，具体请参考官方文档说明&lt;/p&gt;
&lt;p&gt;主要思路是 利用 lua 语言 lpack 模块 对私有协议头 协议主体进行解析，解析得到设备id 取模得到一台上游消息处理服务器upstream server 节点， 然后通过balancer 模块更新上游处理服务器转发流量。&lt;/p&gt;
&lt;p&gt;也可以利用openresty 自带balancer 模块来完成实现，应用核心代码如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;stream {
  lua_code_cache off; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关闭代码缓存，利于调用，生产环境不建议&lt;/span&gt;
  init_by_lua_block {  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;当&lt;/span&gt;nginx &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;启动时，初始化时，从&lt;/span&gt;redis加载配置&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，或者从&lt;/span&gt;etcd &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;加载配置&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;该数据可以做一个后台管理，运维人员直接后台操作&lt;/span&gt;
    require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ngx.balancer&amp;#39;&lt;/span&gt;)
    _G.BACKENDS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.3&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
    }
  }
  
  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;配置&lt;/span&gt;lua请求拦截器 upstream
  upstream lua_dispatcher {
    server &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0.0.1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;;
    balancer_by_lua_block {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; balancer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ngx.balancer&amp;#39;&lt;/span&gt;)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; backend_index
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.crc32_long(ngx.ctx.devid);
      backend_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (hash &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; backend_table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; _G.BACKENDS[backend_index]
      &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;通过激活&lt;/span&gt;id算出一个hash值 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;取个模后，得到服务器下标&lt;/span&gt;index &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;然后更新&lt;/span&gt;balancer &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;即可流量负载过去&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; ok, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; balancer.set_current_peer(table.unpack(backend_table))
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; ok &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
          ngx.log(ngx.ERR, err)
          ngx.exit(ngx.ERROR)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    }
  }
  
   &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;配置代码&lt;/span&gt; proxy
  server {
    listen &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;;
    proxy_pass lua_dispatcher;
    preread_by_lua_block {
        require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pack&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; mypack    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.pack
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; myunpack    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.unpack
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.req.socket(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; sock &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;got the request socket&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed to get the request socket: &amp;#34;&lt;/span&gt;, err)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;先尝试读取固定头&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;个字节&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; data, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sock:receive(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;如果遇到&lt;/span&gt;timeout,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;或者&lt;/span&gt;close的情况&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，则&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;本次循环读取，继续下一条读取&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; err&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; err &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;close&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;按消息推送私有协议读取返回的参数，&lt;/span&gt;type1为消息类型&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;ver2为消息推送私有协议版本号&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;time待命时间&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;len4为消息体的长度&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，不包含头的长度&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; succ,succLen,type1,Ver2,Time3,Len4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pcall(myunpack,data,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;ccHH&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;读取剩余的消息体长度内容&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; body, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sock:receive(Len4)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;如果读取&lt;/span&gt;body为空&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，则退出&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; body &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;打印&lt;/span&gt;body消息内容 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;解析&lt;/span&gt;body是一个json串&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，需要对&lt;/span&gt;json进行解码&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，再赋值给&lt;/span&gt;ngx.ctx &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;全局上下文中共享变量&lt;/span&gt;
            ngx.ctx.device_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; body[devid]
            ngx.log(ngx.ERR, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;------bdy &amp;#34;&lt;/span&gt;, body)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
  
    }
  }
  
    
  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如下图，左边是设备，中间是tcp 流量转发器，  右 边是消息处理服务器，  设备需要和消息处理服务器 建立tcp长链接，并维持不间断时间心跳，总之采用openresty 来完现流量分发具有强性能，只需要在原来的netty消息层外层加个流量处理网关即可。&lt;/p&gt;
&lt;p&gt;但我们在实际环境不推荐这样做，除非小项目，大项目还是推荐apisix 网关来处理很方便&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210519191548391.png&#34; alt=&#34;image-20210519191548391&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Run Spring Boot Program on Windows Server</title>
      <link>https://ltan.me/post/2021/05/how-to-run-spring-boot-program-on-windows-server/</link>
      <pubDate>Thu, 13 May 2021 16:22:51 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-run-spring-boot-program-on-windows-server/</guid>
      <description>spring boot程序如何正确运行在Windows服务器上面 一次项目开发中，要求服务器是windows环境，一般我们都是用java sprint boot 开发的程序运行在linux 环境中，通过supervisor程序来守护，设置</description>
      <content>&lt;h1 id=&#34;spring-boot程序如何正确运行在windows服务器上面&#34;&gt;spring boot程序如何正确运行在Windows服务器上面&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一次项目开发中，要求服务器是windows环境，一般我们都是用java sprint boot 开发的程序运行在linux 环境中，通过supervisor程序来守护，设置开机启动之类的操作命令， 很少有人用windows server, 这次机会遇到这个问题需要解决，好在记的我在几年前用过java service wapper（简称jsw）这个程序 ，对jsw 有一些了解,于是找一相当资料看一下&lt;/p&gt;
&lt;p&gt;官网资料介绍在这里：https://wrapper.tanukisoftware.com/doc/english/launch-win.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在这里简单介绍一下jsw，通过官网介绍，我了解到。&lt;/p&gt;
&lt;p&gt;他可以替代supervisor 做程序守护，开机启动等相关设置，如果是需要把jar包跑在windows 服务器当中。我需要通过sc 命令来注册服务指令&lt;/p&gt;
&lt;p&gt;目前我暂时用到服务守护，和服务注册，等特点，其他特性还没有研究。以下是记录一下我在spring boot 项目中如何使用它来打包成 jsw 服务。&lt;/p&gt;
&lt;p&gt;​    首先看一下我的项目结构图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513163512015.png&#34; alt=&#34;image-20210513163512015&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要在pom.xml 加入maven 打外插件，
插件名为：maven-assembly-plugin&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;upgrade-admin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt; 
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--主要是以下插件配置--&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-assembly-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;descriptors&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--通过service-assembly.xml 描述该项目打包的配置信息--&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;descriptor&amp;gt;&lt;/span&gt;${project.basedir}/src/assembly/service-assembly.xml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/descriptor&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/descriptors&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;service-assembly&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;single&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;配置服务jsw 打包描述信息&lt;/p&gt;
&lt;p&gt;以下是打包配置文件信息：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;service&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;bamboo-upgrade-service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Bamboo Upgrade Service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Bamboo Upgrade Windows service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;java&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;-jar upgrade-admin.jar&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;id: windows 服务id,要是唯一的，在windows 服务注册表里是唯一的

name: 服务名称

description：  服务描述

executable ： 执行bin 名称
arguments： 执行参数
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513163836081.png&#34; alt=&#34;image-20210513163836081&#34;&gt;&lt;/p&gt;
&lt;p&gt;​      service-assembly.xml 文件  这是打包核心配置核心文件&lt;/p&gt;
&lt;p&gt;​     主是用于告诉maven 需要打包的文件在哪 里，如何打包，打成什么格式的包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/ASSEMBLY/2.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;formats&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;format&amp;gt;&lt;/span&gt;zip&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/format&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/formats&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSets&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Copy in the application JAR --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSet&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;${project.build.directory}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;/&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;includes&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;${project.build.finalName}.jar&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/includes&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSet&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Copy in the resources including the wrapper exe and config --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSet&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;${project.basedir}/src/assembly/resources&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;/&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSet&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSets&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该文件的目录位置如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513164413150.png&#34; alt=&#34;image-20210513164413150&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;执行打包 mvn package 命令
&lt;img src=&#34;./image-20210513164650797.png&#34; alt=&#34;image-20210513164650797&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署程序，降upgrade-admin-service.zip包 复制到一个正式的目录下解压后下图就是解压后zip后的效果
&lt;img src=&#34;./image-20210513164952742.png&#34; alt=&#34;image-20210513164952742&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先安装windows 服务指令，上图install.bat是我之前写好的，该文件就是用来install Windows 服务脚本
install.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
bamboo-upgrade-service-wrapper install
echo 安装bamboo服务完成
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写启动服务，新建startup.bat文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; /f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;skip=3 tokens=4&amp;#34;&lt;/span&gt; %&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sc query bamboo-upgrade-service&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; set &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zt=%%i&amp;#34;&lt;/span&gt; &amp;amp;goto &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;next
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;next
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; /i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zt%&amp;#34;&lt;/span&gt;==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RUNNING&amp;#34;&lt;/span&gt; (
echo 已经发现该服务在运行
) &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; (
   net start bamboo-upgrade-service
   echo 该服务现己启动&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;请等20秒中....
)
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;停止服务 ，新建stop.bat文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  ```powershell
  @echo off
  for /f &amp;quot;skip=3 tokens=4&amp;quot; %%i in (&#39;sc query bamboo-upgrade-service&#39;) do set &amp;quot;zt=%%i&amp;quot; &amp;amp;goto :next
  :next
  if /i &amp;quot;%zt%&amp;quot;==&amp;quot;RUNNING&amp;quot; (
     net stop bamboo-upgrade-service
     echo 该服务现己关闭，请等20秒中....
  ) else (
  
  )
  pause
  ```
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;卸载服务, 新建uninstall.bat 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
bamboo-upgrade-service-wrapper uninstall
echo 卸载bamboo服务完成
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看windows运行效果&lt;/p&gt;
&lt;p&gt;按win+R 快捷键，输入&lt;em&gt;services.msc&lt;/em&gt;  命令，回车，&lt;/p&gt;
&lt;p&gt;设置开机启动该服务都可以在windows 这边设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513165843939.png&#34; alt=&#34;image-20210513165843939&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>How to Do Not Release Resources After Uploading the Zip Package in Java</title>
      <link>https://ltan.me/post/2021/05/how-to-do-not-release-resources-after-uploading-the-zip-package-in-java/</link>
      <pubDate>Wed, 12 May 2021 19:36:48 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-do-not-release-resources-after-uploading-the-zip-package-in-java/</guid>
      <description>在windows系统中检验一个上传文件程序是否有bug另一种姿势 某一天在公司对一个文件上传项目进行bug修改，不料查到另一个bug 也顺带解决，在此记录一下解决过程 在windows系统调试一个文件上传程</description>
      <content>&lt;h1 id=&#34;在windows系统中检验一个上传文件程序是否有bug另一种姿势&#34;&gt;在windows系统中检验一个上传文件程序是否有bug另一种姿势&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;某一天在公司对一个文件上传项目进行bug修改，不料查到另一个bug 也顺带解决，在此记录一下解决过程&lt;/p&gt;
&lt;p&gt;在windows系统调试一个文件上传程序，手贱想重新删除原文件，重新上传，结果这一删除发现windows 弹窗，报窗&lt;/p&gt;
&lt;p&gt;&lt;em&gt;文件正常使用&lt;/em&gt;    错误提示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个程序需求就是把一个zip包上传到ftp当中，流程是先上传到服务器本地，然后同步到ftp当中&lt;/p&gt;
&lt;p&gt;在windows 调试过程重新删除了己上传的文件，但发现不能删除的，这个问题也找了很久。&lt;/p&gt;
&lt;p&gt;于是就重新梳理一下上传的流程。&lt;/p&gt;
&lt;p&gt;发现以下问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194748766.png&#34; alt=&#34;image-20210512194748766&#34;&gt;&lt;/p&gt;
&lt;p&gt;来调试代码&lt;/p&gt;
&lt;p&gt;下面这段代码，上传zip后先保存到本地&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194834905.png&#34; alt=&#34;image-20210512194834905&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来是解压zip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194951003.png&#34; alt=&#34;image-20210512194951003&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后增加zipFile.close() 解决，增加in.close() 解决&lt;/p&gt;
&lt;p&gt;问题总结：&lt;/p&gt;
&lt;p&gt;​    论代码review 重要性，前期需要多多测试。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>A Bug That Displays Abnormally After Uploading an Image</title>
      <link>https://ltan.me/post/2021/05/a-bug-that-displays-abnormally-after-uploading-an-image/</link>
      <pubDate>Wed, 12 May 2021 19:11:15 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/a-bug-that-displays-abnormally-after-uploading-an-image/</guid>
      <description>记一次解决图片上传后在浏览器不能正常显示的问题 原来这个项目是比较老，采用的是spirng mvc +ftp 技术搭建的上传功能，通过把一个静态资源h5页，打包成一个zip上传到后台 后台再对其zip包进行解压上传到cd</description>
      <content>&lt;h1 id=&#34;记一次解决图片上传后在浏览器不能正常显示的问题&#34;&gt;记一次解决图片上传后在浏览器不能正常显示的问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原来这个项目是比较老，采用的是spirng mvc +ftp 技术搭建的上传功能，通过把一个静态资源h5页，打包成一个zip上传到后台&lt;/p&gt;
&lt;p&gt;后台再对其zip包进行解压上传到cdn服务器，以域名访问该静态资源页面，其静态资源包含html,js, jpg。 然后设计师大部分以图片形式排版，组成的html5 幻灯显示页面，难后在上传过程有偶发性的遇到图片打不开，显示不正常等问题，bug是随机复现。于是找了很久才找到这个问题根源，下面对其记录一下&lt;/p&gt;
&lt;p&gt;问题主要原因：从本地上传到ftp服务器传输读写编码不一至导致的，对于二进制图片，应采用二进制上传，开启ftp被动模式,编码为ASCII，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于文本文件如css,txt,js文件应采用utf8或者ascii都可以，关键是在文件读写时需要保持编码前后一致即可&lt;/p&gt;
&lt;p&gt;意思就是在本地解压zip后，需要把zip包静态资源按照 目录格式同步 ftp 服务器当中，关键是文件在上传前后读写需要保持编码一至就不会出现这个问题&lt;/p&gt;
&lt;p&gt;下面开始详细分析调式&lt;/p&gt;
&lt;p&gt;当设置uft8编码上传图片文件后，每个文件上传后会少很多的字节内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192524181.png&#34; alt=&#34;image-20210512192524181&#34;&gt;&lt;/p&gt;
&lt;p&gt;该图片文件默认在上传前编码格式为 ANSI&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192650863.png&#34; alt=&#34;image-20210512192650863&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后从同步到ftp 服务器后，下载到本地打开发现，编码变成了GB2312 格式的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192804222.png&#34; alt=&#34;image-20210512192804222&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然变成GB2312编码上传后的图片文件，文件md5值是一样的，浏览器不能正常显示图片文件，因为图片文件被编码破坏了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192847433.png&#34; alt=&#34;image-20210512192847433&#34;&gt;&lt;/p&gt;
&lt;p&gt;原老项目采用apache commons net 包下的ftp client，不知道为什么设置了编码也没有解决问题，说是同步到ftp工具用apache camel 组件代替 apache commons net 的ftp  client,  替换之前尝试把编码设置成uft-8,果然很容易复现问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512193353856.png&#34; alt=&#34;image-20210512193353856&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终用apache camel 代替了 ftpclient 解决ftp 同步图片后偶发性打不开的问题&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Reverse Proxy to Websocket Service Set Based on Apisix2</title>
      <link>https://ltan.me/post/2021/05/reverse-proxy-to-websocket-service-set-based-on-apisix2.4-gateway/</link>
      <pubDate>Tue, 11 May 2021 15:39:09 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/reverse-proxy-to-websocket-service-set-based-on-apisix2.4-gateway/</guid>
      <description>基于apisix2.4网关反向代理到websocket服务集节点 问题背景，主要是解决远程控制通信服务端单点问题，借助openresty强劲的性能，可定制化的负载均衡设计特点 apisix就是基于open</description>
      <content>&lt;h1 id=&#34;基于apisix24网关反向代理到websocket服务集节点&#34;&gt;基于apisix2.4网关反向代理到websocket服务集节点&lt;/h1&gt;
&lt;p&gt;问题背景，主要是解决远程控制通信服务端单点问题，借助openresty强劲的性能，可定制化的负载均衡设计特点&lt;/p&gt;
&lt;p&gt;apisix就是基于openresty开发分布式网关集群平台，优势现阶段轻量，易维护等&lt;/p&gt;
&lt;p&gt;本为搭建环境，模拟集群环境，在我windows 电脑 采用docker 模拟&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;整体的环境说明：如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511150518389.png&#34; alt=&#34;image-20210511150518389&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 搭建环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker pull django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运行python 容器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker run -itd --name py3 -v /i:/i -v /d:/d django /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 进入容器，检查容器环境是否正常&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shel&#34; data-lang=&#34;shel&#34;&gt;docker exec -it  c5d2369adde2 /bin/bash

docker exec -it 58e1c95fea73 /bin/sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;./image-20210511150600898.png&#34; alt=&#34;image-20210511150600898&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 安装websocket&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt; pip install websocket 

 pip install stomp.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 启动后端 java websocket 环境&lt;/p&gt;
&lt;p&gt;进入java 容器，设置同一个网络环境，同一个网段&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-she&#34; data-lang=&#34;she&#34;&gt;    docker run --name s1 --network app-tier -d -v /i:/i -v /d:/d -p 8081:8080 ltjsj/super-dev-env:v1.1 

​      docker exec -it s1 /bin/bash

​      java -jar /i/path/to/websocket.jar 

​       docker inspect s1 | findstr IPAddress # 查看容器ip， 准备填入apisix 节点 
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 配置apisix&lt;/p&gt;
&lt;p&gt;路由代理，配置上游&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511150841820.png&#34; alt=&#34;image-20210511150841820&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 编写python 脚本测试代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-pytho&#34; data-lang=&#34;pytho&#34;&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2021/03/31 下午03:21
# @Author  : ltan.me

from stomp_ws import Stomp
import time

def do_thing_a(msg):
    print(&amp;quot;MESSAGE: &amp;quot; + msg)

if __name__ == &amp;quot;__main__&amp;quot;:

    for i in range(0,10):
        #为了模拟设备id,激活id,采用id为作为通信参数，生成10个id分别请求websocket服务器域名
        url = &amp;quot;test.xxxx.com/stompServer/websocket?id=%s&amp;amp;activeId=416&amp;amp;deviceId=3657dc0cfede992b97d2135fd0514c6c&amp;amp;userId=1&amp;amp;&amp;amp;connectType=0&amp;amp;token=9d3b7282d295eefe9e9b959f63134dee&amp;quot; % str(i)
        print(url)
        stomp = Stomp(url, sockjs=True, wss=False)
        stomp.connect()
        stomp.subscribe(&amp;quot;/user/1_416/command&amp;quot;, do_thing_a)
        time.sleep(2)
        stomp.send(&amp;quot;/web2client_term&amp;quot;, &#39;{&amp;quot;userId&amp;quot;:1,&amp;quot;activeId&amp;quot;:416,&amp;quot;cmdType&amp;quot;:18,&amp;quot;content&amp;quot;:&amp;quot;python-hahah&amp;quot;}&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 最终运行效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511151138269.png&#34; alt=&#34;image-20210511151138269&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511151206802.png&#34; alt=&#34;image-20210511151206802&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Lua Language Parsing Private Protocol Package</title>
      <link>https://ltan.me/post/2021/05/lua-language-parsing-private-protocol-package/</link>
      <pubDate>Sat, 08 May 2021 17:47:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/lua-language-parsing-private-protocol-package/</guid>
      <description>使用lua语言解析tcp私有协议包示例 为什么需要lua来解析tcp 私有协议包？ 因为lua语言生态内，有强大的openresty 技术可使用，而openresty可以提供强劲的web 并发性能，能提供tcp</description>
      <content>&lt;h1 id=&#34;使用lua语言解析tcp私有协议包示例&#34;&gt;使用lua语言解析tcp私有协议包示例&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么需要lua来解析tcp 私有协议包？&lt;/p&gt;
&lt;p&gt;因为lua语言生态内，有强大的openresty 技术可使用，而openresty可以提供强劲的web 并发性能，能提供tcp 长链接通道 技术&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;首先需要lapck包对其解析&#34;&gt;首先需要lapck包对其解析&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone  https://github.com/Kong/lua-pack 
或
git clone https://github.com/lilien1010/lpack
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;安装lapck包需要编译&#34;&gt;安装lapck包需要编译&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508175332849.png&#34; alt=&#34;image-20210508175332849&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;--编译时找不到luah头文件需要增加以下参数其目的是让编译是找到luajit-luah头文件--&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;
&lt;p&gt;在编译时遇到 lua.h No such file or directory #include &amp;quot; lua.h&amp;quot; ？ 问题时，需要遇增加如下参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-DLUA_INCLUDE_DIR=/usr/local/openresty/luajit/include/luajit-2.1/ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终编译命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#DLUA_INCLUDE_DIR 表示lua.h 存放的位置 LUA_LIBRARY指定luajit库，so文件，
cmake ./  -DLUA_INCLUDE_DIR=/usr/local/openresty/luajit/include/luajit-2.1/  -DLUA_LIBRARY=/usr/local/lib/libluajit-5.1.so
make  #编译成so文件，得到pack.so
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;详细解析tcp私有代码如下&#34;&gt;详细解析tcp私有代码如下&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;require(&amp;quot;pack&amp;quot;)
local mypack    = string.pack
local myunpack    = string.unpack
local sock = ngx.req.socket(true)
if sock then
    ngx.say(&amp;quot;got the request socket&amp;quot;)
else
    ngx.say(&amp;quot;failed to get the request socket: &amp;quot;, err)
    return
end
while true do
    --先尝试读取固定头 6个字节
    local data, err = sock:receive(6)
    --如果遇到timeout,或者close的情况，则break 本次循环读取，继续下一条读取
    if err==&#39;timeout&#39; or err ==&#39;close&#39; then
        break
    end
    --按pmtp协议读取返回的参数，type1为消息类型，ver2为pmtp协议版本号，time待命时间，len4为消息体的长度，不包含头的长度
    --默认字节顺序为 大端，&amp;gt;ccHH
    local succ,succLen,type1,Ver2,Time3,Len4 = pcall(myunpack,data,&amp;quot;&amp;gt;ccHH&amp;quot;)
    --读取剩余的消息体长度内容
    local body, err = sock:receive(Len4)
    --如果读取body为空，则退出
    if body == nil then
        break
    end
    --打印body消息内容
    ngx.log(ngx.ERR, &amp;quot;------bdy &amp;quot;, body)
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过客户端链接后发送tcp私有协议包的一模拟效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508175828796.png&#34; alt=&#34;image-20210508175828796&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Solve the Problem of Maven Packaging Static Resource Coding</title>
      <link>https://ltan.me/post/2021/05/solve-the-problem-of-maven-packaging-static-resource-coding/</link>
      <pubDate>Sat, 08 May 2021 16:39:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/solve-the-problem-of-maven-packaging-static-resource-coding/</guid>
      <description>解决maven生成jar包时字体不能正常显示 由于前端人手不够，今天做了一个小项目，这个项目是用spring boot + layui 构建的后台管理系统。就没有用到前后端分离的方式去开发 项目做完后在打包时运行时发现浏览器显</description>
      <content>&lt;h1 id=&#34;解决maven生成jar包时字体不能正常显示&#34;&gt;解决maven生成jar包时字体不能正常显示&lt;/h1&gt;
&lt;p&gt;由于前端人手不够，今天做了一个小项目，这个项目是用spring boot  + layui 构建的后台管理系统。就没有用到前后端分离的方式去开发&lt;/p&gt;
&lt;p&gt;项目做完后在打包时运行时发现浏览器显示字体损坏，导致网站icon图标不能正常显示&lt;/p&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;解决方法：&lt;/h2&gt;
&lt;p&gt;在pom.xml 里找到build 区块用下面代码替换它&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;build&amp;gt;
        &amp;lt;finalName&amp;gt;ivy-admin&amp;lt;/finalName&amp;gt;
        &amp;lt;resources&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;
                &amp;lt;filtering&amp;gt;true&amp;lt;/filtering&amp;gt;
                &amp;lt;excludes&amp;gt;
                    &amp;lt;exclude&amp;gt;static/layui/font/**&amp;lt;/exclude&amp;gt;
                    &amp;lt;exclude&amp;gt;static/admin/font/**&amp;lt;/exclude&amp;gt;
                    &amp;lt;exclude&amp;gt;static/admin/fonts/**&amp;lt;/exclude&amp;gt;
                &amp;lt;/excludes&amp;gt;
            &amp;lt;/resource&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;
                &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
                &amp;lt;includes&amp;gt;
                    &amp;lt;include&amp;gt;static/layui/font/**&amp;lt;/include&amp;gt;
                    &amp;lt;include&amp;gt;static/admin/font/**&amp;lt;/include&amp;gt;
                    &amp;lt;include&amp;gt;static/admin/fonts/**&amp;lt;/include&amp;gt;
                &amp;lt;/includes&amp;gt;
            &amp;lt;/resource&amp;gt;
        &amp;lt;/resources&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;executable&amp;gt;true&amp;lt;/executable&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因:&lt;/h2&gt;
&lt;p&gt;经过发现在不加上面打包代码时，不排除font 字体目录时，发现maven在打包复制时，对其font字体文件编译，导致文件被改写，编码和原来的字体文件不一样，导致打包前，打包前文件md5不一样，font 字体损坏，最终浏览器显示字体损坏&lt;/p&gt;
&lt;p&gt;打包后可以对比一下字体md5文件，就知道mvn在编译打包时，损坏了font&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508170557174.png&#34; alt=&#34;image-20210508170557174&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
