<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LTAN.ME</title>
    <link>https://ltan.me/post/</link>
    <description>Recent content in Posts on LTAN.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 May 2024 10:41:26 +0800</lastBuildDate><atom:link href="https://ltan.me/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Records of Problems Encountered During the Installation and Initialization of Thingsboard 3.6.4</title>
      <link>https://ltan.me/post/2024/05/records-of-problems-encountered-during-the-installation-and-initialization-of-thingsboard-3.6.4/</link>
      <pubDate>Fri, 10 May 2024 10:41:26 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/05/records-of-problems-encountered-during-the-installation-and-initialization-of-thingsboard-3.6.4/</guid>
      <description># Records of Problems Encountered During the Installation and Initialization of Thingsboard 3.6.4 记录thingsboard3.6.4在导入 IntelliJ IDEA 2022.2.3 编译报错的一些问题 记录 如何从thingsboard3.6.4弃坑到thingsboard3.6.3 导入步骤简单说一下，先从gi</description>
      <content>&lt;p&gt;#　Records of Problems Encountered During the Installation and Initialization of Thingsboard 3.6.4&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录&lt;code&gt;thingsboard3.6.4&lt;/code&gt;在导入 &lt;code&gt;IntelliJ IDEA 2022.2.3&lt;/code&gt; 编译报错的一些问题&lt;br&gt;
记录 如何从&lt;code&gt;thingsboard3.6.4&lt;/code&gt;弃坑到&lt;code&gt;thingsboard3.6.3&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;导入步骤简单说一下，先从github下载thingsboard3.6.4 源码
导入代码前提准备是环境，我的环境如下
windows 10&lt;br&gt;
maven version 3.8.1 给 IntelliJ IDEA 2022.2.3 配置好settings.xml 采用从maven官方仓库拉取依赖&lt;br&gt;
IntelliJ IDEA 2022.2.3  &lt;br&gt;
IntelliJ IDEA 只需要安装 protocol buffers 和 lombook 就可以了&lt;br&gt;
JDK17,不是jdk11&lt;br&gt;
在本地安装postgreSQL,创建好数据库名&lt;code&gt;thingsboard364&lt;/code&gt;&lt;br&gt;
然后导入到IntelliJ IDEA 2022.2.3。&lt;br&gt;
从复制sql脚本到application的&lt;code&gt;src/main/data/&lt;/code&gt;目录下&lt;br&gt;
&lt;img src=&#34;img.png&#34; alt=&#34;img.png&#34;&gt;
把 &lt;strong&gt;IntelliJ IDEA&lt;/strong&gt; maven 设置跳过skip test,避免测试过程中遇到地域性测试，语言文本测试 导致通测试不过&lt;br&gt;
&lt;img src=&#34;img_1.png&#34; alt=&#34;img_1.png&#34;&gt;
最后点击 &lt;strong&gt;IntelliJ IDEA&lt;/strong&gt; maven package 进行编译项目 &lt;br&gt;
我遇到的问题如下：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;问题1 lombok 在jdk17下版本太低不兼容&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;class lombok.javac.apt.LombokProcessor &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;in unnamed module @0x719f35fe&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
cannot access class com.sun.tools.javac.processing.JavacProcessingEnvironment
 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;in module jdk.compiler&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
 because module jdk.compiler does not export com.sun.tools.javac.processing to
  unnamed module @0x719f35fe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;解决lombok 报错
The issue you are facing with the error &amp;ldquo;java.lang.IllegalAccessError: class lombok.javac.apt.LombokProcessor&amp;rdquo; is related to compatibility problems between Lombok and JDK versions. To resolve this issue, you need to ensure that you are using a compatible version of Lombok with your JDK. Upgrading Lombok to version 1.18.22 or higher should address this problem. Additionally, make sure that Lombok is set up correctly in your project configuration.
The error occurs because Java 17 enforces strong encapsulation, and using an older version of Lombok can lead to this issue. By upgrading to Lombok version 1.18.22 or newer, you should be able to resolve the problem. It&amp;rsquo;s crucial to verify that you are indeed using the correct version of Lombok for your build to avoid compatibility issues&lt;br&gt;
解决方方如下：
这个错误是因为Java 17 强制执行强封装，使用较旧版本的Lombok可能会导致此问题。通过升级到Lombok 1.18.22或更新版本，您应该能够解决这个问题。务必验证您确实正在使用正确的Lombok版本来构建，以避免兼容性问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在&lt;code&gt;thingsboard&lt;/code&gt; 根项目目录下&lt;code&gt;pom.xml&lt;/code&gt; 修改 第85行
&amp;lt;lombok.version&amp;gt;1.18.18&amp;lt;/lombok.version&amp;gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;lombok.version&amp;gt;&lt;/span&gt;1.18.26&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/lombok.version&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;问题2 gradle问题&lt;/em&gt;
解决方法更换版本 jdk 11,maven 版本为3.8.2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --- gradle-maven-plugin:1.0.11:invoke &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; @ http ---
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; jvmArgs: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ljava.lang.String;@519c5122
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; gradleProjectDirectory: E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\w&lt;/span&gt;orkProject&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava5&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;hingsboard&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;ransport&lt;span style=&#34;color:#ae81ff&#34;&gt;\h&lt;/span&gt;ttp&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ackaging&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Build
Downloading https://services.gradle.org/distributions/gradle-7.1.1-bin.zip
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Download https://services.gradle.org/distributions/gradle-7.1.1-bin.zip
...........................................................................................................
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting Gradle Daemon
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Connecting to Gradle Daemon
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting Gradle Daemon
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Run build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Evaluate settings
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Run build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Configure build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Load projects
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Configure build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Configure project :
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Compiling build file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;build.gradle&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Configure project :
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Configure build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Run build
FAILURE: Build failed with an exception.
* Where:
Build file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E:\workProject\java5\thingsboard\packaging\java\build.gradle&amp;#39;&lt;/span&gt;
* What went wrong:
Could not compile build file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E:\workProject\java5\thingsboard\packaging\java\build.gradle&amp;#39;&lt;/span&gt;.
&amp;gt; startup failed:
  General error during conversion: Unsupported class file major version &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;
  java.lang.IllegalArgumentException: Unsupported class file major version &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt;
  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; error
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Get more help at https://help.gradle.org
BUILD FAILED in 18m 29s
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Deleting unused version-specific caches in E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\w&lt;/span&gt;orkProject&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava5&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;hingsboard&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ackaging&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;gradle
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Build
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;INFO&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;问题3 angular js的问题&lt;/em&gt;
解决方法：换3.6.3版本&lt;br&gt;
试了梯子没有问题，全局下载tun模式。依然无效&lt;br&gt;
&lt;img src=&#34;img_2.png&#34; alt=&#34;img_2.png&#34;&gt;
报错如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;error&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; TypeError: Cannot read properties of undefined &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;reading &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pluginOptions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at module.exports &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\w&lt;/span&gt;orkProject&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava5&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;hingsboard&lt;span style=&#34;color:#ae81ff&#34;&gt;\u&lt;/span&gt;i-ngx&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;xtra-webpack.config.js:71:57&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at CustomWebpackBuilder.&amp;lt;anonymous&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\w&lt;/span&gt;orkProject&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava5&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;hingsboard&lt;span style=&#34;color:#ae81ff&#34;&gt;\u&lt;/span&gt;i-ngx&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;ode_modules&lt;span style=&#34;color:#ae81ff&#34;&gt;\@&lt;/span&gt;angular-builders&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ustom-webpack&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ist&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ustom-webpack-builder.js:32:50&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at Generator.next &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;anonymous&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at fulfilled &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\w&lt;/span&gt;orkProject&lt;span style=&#34;color:#ae81ff&#34;&gt;\j&lt;/span&gt;ava5&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;hingsboard&lt;span style=&#34;color:#ae81ff&#34;&gt;\u&lt;/span&gt;i-ngx&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;ode_modules&lt;span style=&#34;color:#ae81ff&#34;&gt;\@&lt;/span&gt;angular-builders&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ustom-webpack&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ist&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ustom-webpack-builder.js:5:58&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;提示maven在编译打包ui-ngx时注意几个目录&lt;/li&gt;
&lt;li&gt;maven 编译&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;mvn clean package  -DskipTests -s settings.xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;pgsql数据库初始化&#34;&gt;pgsql数据库初始化&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;增加pg数据库用户root 密码为root&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;CREATE ROLE root WITH LOGIN PASSWORD &amp;lsquo;root&amp;rsquo;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;增加角色给root&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;GRANT thingsboard TO root;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;设置远程访问 pg_hba.conf,不管是docker安装thingsboard这里也适用&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;host    all             all             0.0.0.0/0               md5&lt;br&gt;
postgresql.conf中的listen_addresses设置为&#39;*&#39;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;WINDOWS 10 解决node.exe占用&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;tasklist /V |findstr node.exe&lt;br&gt;
taskkill /F /PID 7132&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;maven编译ui-ngx几个缓存 &lt;code&gt;E:\maven_repository\.m2\&lt;/code&gt; 这个是我下载的组件&lt;/li&gt;
&lt;li&gt;如果你之前在你的windows电脑上尝试过多个版本进打包编译，小心缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;E:\maven_repository.m2\repository\com\github\eirslett\node\&lt;br&gt;
E:\maven_repository.m2\repository\com\github\eirslett\yarn\1.22.17\&lt;br&gt;
E:\maven_repository.m2\repository\com\github\eirslett&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;关于thingsboard-docker启动及修改docker里的pgsql-配置的工具调式&#34;&gt;关于thingsboard docker启动，及修改docker里的pgsql 配置的工具调式&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;apt-get update # 更新
docker exec -it -u root [container_name_or_id] /bin/bash  # 进入容器
apt-get install -y net-tools  # 安装netstart
apt-get install -y vim # 安装vim 修改配置
最简单的docker compose 配置 快速启动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;version: &amp;#39;3.0&amp;#39;
services:
  mytb:
    restart: always
    image: &amp;#34;thingsboard/tb-postgres:3.6.3&amp;#34;
    ports:
      - &amp;#34;8080:9090&amp;#34;
      - &amp;#34;1883:1883&amp;#34;
      - &amp;#34;7070:7070&amp;#34;
      - &amp;#34;15432:5432&amp;#34;
      - &amp;#34;5683-5688:5683-5688/udp&amp;#34;
    environment:
      TB_QUEUE_TYPE: in-memory
    volumes:
      - /data/program/thingsboard/tb-data-363:/data
      - /data/program/thingsboard/logs:/var/log/thingsboard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;说在最后&#34;&gt;说在最后&lt;/h1&gt;
&lt;p&gt;在maven 编译时，一定要使用windows 管理员权限执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mvn clean package  -DskipTests -s settings.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果ui-ngx打包遇到以下问题 Module not found 字样，则是网络的问题，才需要挂梯子
./node_modules/@angular/material/fesm2020/badge.mjs:7:0-77 - Error: Module not found: Error: Can&amp;rsquo;t resolve &amp;lsquo;@angular/platform-browser/animations&amp;rsquo; in &amp;lsquo;E:\workProject\java5\thingsboard\ui-ngx\node_modules@angular\material\fesm2020&amp;rsquo;&lt;br&gt;
主要是因为网络问题在下载以下两个包需要很长时间&lt;br&gt;
npm install @angular/common@^14.0.0 @angular/core@^14.0.0&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Smart Air Conditioning Control With ThingsBoard</title>
      <link>https://ltan.me/post/2024/05/smart-air-conditioning-control-with-thingsboard/</link>
      <pubDate>Wed, 08 May 2024 21:36:49 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/05/smart-air-conditioning-control-with-thingsboard/</guid>
      <description>Automating Climate Control: Leveraging Dual Thermometers for Smart Air Conditioning via ThingsBoard 记录一次在thingsboard中通过同时满足两个温度计的温度条件来控制空调开关机 当然这并不是真实过程对接调式，只是通过模拟的方法来熟练一下thingsboard的ruleCh</description>
      <content>&lt;h1 id=&#34;automating-climate-control-leveraging-dual-thermometers-for-smart-air-conditioning-via-thingsboard&#34;&gt;Automating Climate Control: Leveraging Dual Thermometers for Smart Air Conditioning via ThingsBoard&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一次在thingsboard中通过同时满足两个温度计的温度条件来控制空调开关机&lt;br&gt;
当然这并不是真实过程对接调式，只是通过模拟的方法来熟练一下thingsboard的ruleChain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;第一步创建一个空的规则链名称就叫两个温度计控制空调的规则链&#34;&gt;第一步，创建一个空的规则链，名称就叫&lt;code&gt;两个温度计控制空调的规则链&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;img_2.png&#34; alt=&#34;img_2.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第二步创建一个设备配置名称就叫两个温度计控制空调的设备配置&#34;&gt;第二步，创建一个设备配置，名称就叫&lt;code&gt;两个温度计控制空调的设备配置&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;img_3.png&#34; alt=&#34;img_3.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第三步分别添加三个设备温度计1温度计2空调&#34;&gt;第三步，分别添加三个设备&lt;code&gt;温度计1&lt;/code&gt;、&lt;code&gt;温度计2&lt;/code&gt;、&lt;code&gt;空调&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;img_4.png&#34; alt=&#34;img_4.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第四步给温度计1温度计2-设备添加关联关系&#34;&gt;第四步，给&lt;code&gt;温度计1&lt;/code&gt;,&lt;code&gt;温度计2&lt;/code&gt; 设备添加关联关系&lt;/h3&gt;
&lt;p&gt;添加关系的原因是，因为&lt;code&gt;温度计1&lt;/code&gt;,&lt;code&gt;温度计2&lt;/code&gt; 的温度都满足了条件需要给&lt;code&gt;空调&lt;/code&gt;发送rpc控制消息
才需创建关联空调的，这里可以理解是&lt;code&gt;温度计&lt;/code&gt;控制&lt;code&gt;空调&lt;/code&gt;，所以创建温度计&lt;code&gt;向外的关联&lt;/code&gt;（&lt;code&gt;from&lt;/code&gt;）的关系
同理也可以理解，空调需要接受温度计的控制消息&lt;code&gt;向内的关联&lt;/code&gt;（&lt;code&gt;to&lt;/code&gt;）的关系，这两个关系方向都可以
这里以from关系为例创建，但请注意，这里的&lt;code&gt;关系类型&lt;/code&gt;一定要唯一，不能一样我这里建立了两条关系分别是&lt;code&gt;relation1&lt;/code&gt;,
&lt;code&gt;relation2&lt;/code&gt;
&lt;img src=&#34;img.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第五步给两个温度计控制空调的规则链这个空白的规则链编写规则链这是最核心的部分&#34;&gt;第五步，给&lt;code&gt;两个温度计控制空调的规则链&lt;/code&gt;这个空白的规则链编写规则链，这是最核心的部分&lt;/h3&gt;
&lt;p&gt;梳理自己的流程需求，我这里的流程是前提条件，&lt;code&gt;温度计1&lt;/code&gt;、&lt;code&gt;温度计2&lt;/code&gt;、&lt;code&gt;空调&lt;/code&gt; 这三个设备已经连上了&lt;code&gt;thingsboard&lt;/code&gt; &lt;code&gt;1883&lt;/code&gt; &lt;code&gt;mqqt&lt;/code&gt; 端口
且处理活动状态，在实体设备可以看到设备状态。
我的主要流程是，&lt;code&gt;温度计1&lt;/code&gt;和&lt;code&gt;温度计2&lt;/code&gt;都在同时发送遥测消息数据格式为：
&lt;code&gt;{temperature:25}&lt;/code&gt; 并由&lt;code&gt;save timeseries&lt;/code&gt; 这个节点保存数据
当接受到&lt;code&gt;温度计1&lt;/code&gt;的遥测数据时，再查询&lt;code&gt;温度计2&lt;/code&gt;的遥测温度数据，并把&lt;code&gt;温度计2&lt;/code&gt;的数据保存在元数据中&lt;code&gt;metadata&lt;/code&gt;
这是由&lt;code&gt;related device attrbuite&lt;/code&gt; 查询得到&lt;code&gt;温度计2&lt;/code&gt;的数据
如果&lt;code&gt; success&lt;/code&gt; 然后接下来由&lt;code&gt; switch&lt;/code&gt; 判断两个温度数据是否满足，代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temperature1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temperature2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;metadata&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;//从元数据获取temperature数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nextRelation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;metadata&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;other&amp;#39;&lt;/span&gt;];
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msgType&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;POST_TELEMETRY_REQUEST&amp;#39;&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temperature2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;){
       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;温度计1&amp;gt;30且温度计2&amp;gt;40&amp;#34;&lt;/span&gt;];
    }&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;temperature1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temperature2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;){
       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;温度计1&amp;lt;30且温度计2&amp;lt;40&amp;#34;&lt;/span&gt;];
    }
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nextRelation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;metadata&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;); 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下&lt;code&gt;switch&lt;/code&gt;节点产生了两个分支，接下来到了&lt;code&gt;change originator&lt;/code&gt;
这一步是关键，因为我们上述所说到是由温度计把消息发送给空调这是错误的理解，
因为需要空调&lt;code&gt;（self）&lt;/code&gt;自已给自己发送消息才能控制空调，所以这一步目的是将发送消息者切换为空调本身
当切换&lt;code&gt;success&lt;/code&gt;成后，接下来是&lt;code&gt;script&lt;/code&gt; 转换节点 主要是组装空调能解析的数据结构
我这里定义的是数据如下, 消息体为&lt;code&gt;newMsg&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newMsg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;setKongTiao&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OFF&amp;#34;&lt;/span&gt;
    }
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newMsg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;metadata&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;msgType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msgType&lt;/span&gt;};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;img_1.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第六步debug调试&#34;&gt;第六步，debug调试&lt;/h3&gt;
&lt;p&gt;用网页模拟成功，红色区域为打开空调
&lt;img src=&#34;img_5.png&#34; alt=&#34;img_5.png&#34;&gt;
打开调式
&lt;img src=&#34;img_6.png&#34; alt=&#34;img_6.png&#34;&gt;
点击事件，查看数据，看数据是否符合预期
&lt;img src=&#34;img_7.png&#34; alt=&#34;img_7.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过以上步骤，我们可以构建一个高效且自动化的空调控制系统，使室内环境保持在舒适的温度范围内。这不仅提高了居住或工作环境的舒适度，同时也有助于节约能源。
希望这次介绍能够帮助你更好地理解在ThingsBoard平台上如何实现复杂的设备互动和自动化控制。如果需要进一步的信息或有其他疑问，请继续关注我的博客或提出咨询。&lt;/p&gt;
&lt;p&gt;不得不说thingsboard非常强大，你无需编写查询sql语句去获取数据，相反如果用了nodered做流处理，需要编写sql语句来获取设备数据的&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Server setup process using Headscale with Docker.</title>
      <link>https://ltan.me/post/2024/04/headscale-server-setup-process/</link>
      <pubDate>Mon, 15 Apr 2024 21:21:29 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/04/headscale-server-setup-process/</guid>
      <description>Server setup process using Headscale with Docker. 记录采用headscale &amp;amp; docker 异地组网过程 需求背景 曾经我尝试使用ZeroTier，最初的体验非常不错。然而，随着时间的推移，我发现连接速度变得缓慢和卡顿， 有时甚至需要借助特殊的网络加速技</description>
      <content>&lt;h1 id=&#34;server-setup-process-using-headscale-with-docker&#34;&gt;Server setup process using Headscale with Docker.&lt;/h1&gt;
&lt;h2 id=&#34;记录采用headscale--docker-异地组网过程&#34;&gt;记录采用headscale &amp;amp; docker 异地组网过程&lt;/h2&gt;
&lt;h2 id=&#34;需求背景&#34;&gt;需求背景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;曾经我尝试使用&lt;code&gt;ZeroTier&lt;/code&gt;，最初的体验非常不错。然而，随着时间的推移，我发现连接速度变得缓慢和卡顿，
有时甚至需要借助特殊的网络加速技术来提高性能。后来，在&lt;code&gt;X&lt;/code&gt;社区中，我看到有人分享了&lt;code&gt;Tailscale&lt;/code&gt;的好评，
这促使我安装了&lt;code&gt;Tailscale&lt;/code&gt;的官方客户端。相较于&lt;code&gt;ZeroTier&lt;/code&gt;，&lt;code&gt;Tailscale&lt;/code&gt;在速度上有显著的提升，
尽管偶尔也会遇到一些延迟。&lt;code&gt;Tailscale&lt;/code&gt;依赖于其官方服务器，但它支持用户自建服务器，
这一点非常吸引我。通过结合使用&lt;code&gt;Tailscale&lt;/code&gt;客户端和官网，我们可以实现异地组网。
为了达到更理想的连接速度，我决定自建异地组网系统。这样不仅能控制家中的&lt;code&gt;群晖&lt;/code&gt;设备，还能优化&lt;code&gt;PT&lt;/code&gt;下载等功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;搭建headscale服务端&#34;&gt;搭建&lt;code&gt;headscale&lt;/code&gt;服务端&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1,准备环境&lt;code&gt;linux(centos7/ubuntu)&lt;/code&gt;&lt;br&gt;
2,安装&lt;code&gt;docker&lt;/code&gt;,&lt;br&gt;
3,申请好域名,准备&lt;code&gt;https&lt;/code&gt;证书 推荐&lt;code&gt;cf&lt;/code&gt;,并解析到自己的服务器&lt;br&gt;
&lt;code&gt;ssl_certificate&lt;/code&gt; 和 &lt;code&gt;ssl_certificate_key&lt;/code&gt; 为自己申请的域名证书从cf导出来的文件&lt;br&gt;
4,安装好&lt;code&gt;nginx&lt;/code&gt;,&lt;code&gt;nginx&lt;/code&gt;配置如下,打码地方为自己的域名，箭头处需要开启&lt;code&gt;websocket&lt;/code&gt;&lt;br&gt;
&lt;img src=&#34;img.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;准备headscale-配置文件&#34;&gt;准备&lt;code&gt;headscale&lt;/code&gt; 配置文件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;创建目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mkdir -p /root/mydocker/config
chmod -R a+x /root/mydocker/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;从以下链接地址下载配置文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget -O /root/mydocker/conf/config.yaml https://raw.githubusercontent.com/juanfont/headscale/main/config-example.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;修改配置文件&lt;code&gt;config.yaml&lt;/code&gt; 文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt; server_url: https://你的域名:443
 listen_addr: 0.0.0.0:8080
 metrics_listen_addr: 0.0.0.0:9090
 noise:
    private_key_path: /etc/headscale/noise_private.key
 database:
  type: sqlite3
  sqlite:
    path: /etc/headscale/db.sqlite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;部署headscale&#34;&gt;部署headscale&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;启动docker, 我是在/root/mydocker/ 目录启动的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;  docker run --name headscale --detach --volume &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/config:/etc/headscale/ --publish 0.0.0.0:8080:8080 --publish 0.0.0.0:9090:9090 headscale/headscale:0.23.0-alpha5 serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在windows或客户端安装tailscale官网下载并安装好&#34;&gt;在windows或客户端安装tailscale(官网下载并安装好)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;以win10 为例 直接采用命令行登录&lt;br&gt;
&lt;img src=&#34;img_1.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;br&gt;
会得到以下地址:&lt;br&gt;
https://你的域名:443/register/mkey:23234kflasdjf&amp;hellip;..
mkey 后面请复制一下
进入到headscale 服务器命令行，执行以下命令，将&lt;code&gt;23234kflasdjf.....&lt;/code&gt; 注册即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;进入服务器执行命令注册登录的设备&#34;&gt;进入服务器,执行命令注册登录的设备&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;执行以下命令，因为是docker安装的&lt;br&gt;
mywin10 就表示对应需要组网的机器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker exec headscale headscale users create mywin10
docker exec headscale headscale nodes register --user admin --key mkey:23234kflasdjf.....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;以下是我执行的上面两条docker命令的示例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@racknerd-6d4dab3 ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# docker exec headscale headscale users create admin&lt;/span&gt;
2024-04-08T12:28:08Z TRC DNS configuration loaded dns_config&lt;span style=&#34;color:#f92672&#34;&gt;={&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nameservers&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Proxied&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resolvers&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Addr&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}]}&lt;/span&gt;
User created
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@racknerd-6d4dab3 ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# docker exec headscale headscale nodes register --user admin --key mkey:2342342344444444444444fb3ce635336028bc8989fa9615e233343434&lt;/span&gt;
2024-04-08T12:28:14Z TRC DNS configuration loaded dns_config&lt;span style=&#34;color:#f92672&#34;&gt;={&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nameservers&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Proxied&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resolvers&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Addr&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}]}&lt;/span&gt;
Node desktop-mms156b registered
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;接下来就看到以下成功信息&lt;br&gt;
&lt;img src=&#34;img_1.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;tailscale 客户端自动显示当前状态&lt;br&gt;
&lt;img src=&#34;img_3.png&#34; alt=&#34;img_3.png&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来就可以远程登录我的win10了，我要从100.64.0.2 的机器远程登录100.64.0.7的机器  &lt;br&gt;
&lt;img src=&#34;img_4.png&#34; alt=&#34;img_4.png&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;远程登录win10 速度很赞，几乎和本地一样操作流畅，而且无需科学&lt;br&gt;
&lt;img src=&#34;img_5.png&#34; alt=&#34;img_5.png&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Record an Error During Node RED Deployment</title>
      <link>https://ltan.me/post/2024/02/record-an-error-during-node-red-deployment/</link>
      <pubDate>Thu, 22 Feb 2024 20:50:54 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/02/record-an-error-during-node-red-deployment/</guid>
      <description>记一次在docker 打包部署node red 启动报错 报错如下： --------------------------------------------------------------------- Your flow credentials file is encrypted using a system-generated key. If the system-generated key is lost for any reason, your credentials file will not be recoverable, you will have to delete it and re-enter your credentials. You should set your own key using the &amp;#39;credentialSecret&amp;#39; option in your settings file. Node-RED will then re-encrypt your credentials file using your chosen key the next time you deploy a change. --------------------------------------------------------------------- 22 Feb</description>
      <content>&lt;h1 id=&#34;记一次在docker-打包部署node-red-启动报错&#34;&gt;记一次在docker 打包部署node red 启动报错&lt;/h1&gt;
&lt;p&gt;报错如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;---------------------------------------------------------------------
Your flow credentials file is encrypted using a system-generated key.

If the system-generated key is lost &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; any reason, your credentials
file will not be recoverable, you will have to delete it and re-enter
your credentials.

You should set your own key using the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;credentialSecret&amp;#39;&lt;/span&gt; option in
your settings file. Node-RED will &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; re-encrypt your credentials
file using your chosen key the next time you deploy a change.
---------------------------------------------------------------------

&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:25 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;warn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Encrypted credentials not found
&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:25 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Server now running at http://127.0.0.1:3002/
&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:25 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Starting flows
&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:25 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;info&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Started flows

&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:35 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;warn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Flushing file /data/nodes to disk failed : Error: EISDIR: illegal operation on a directory, rename &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes.$$$&amp;#39;&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:35 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;warn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Error saving flows: EISDIR: illegal operation on a directory, rename &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes.$$$&amp;#39;&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Feb 20:47:35 - &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;warn&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Error: EISDIR: illegal operation on a directory, rename &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes.$$$&amp;#39;&lt;/span&gt; -&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/data/nodes&amp;#39;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pm2启动信息&#34;&gt;PM2启动信息&lt;/h2&gt;
&lt;p&gt;使用如下PM2配置文件启动Node-RED实例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pm&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nodered.json&lt;/span&gt;
    {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;apps&amp;#34;&lt;/span&gt;: [
           {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NR-INSTANCE-3002&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;script&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/src/node-red/packages/node_modules/node-red/red.js&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--userDir /data/config/node-red-3002  --nodesDir /data/nodes --port 3002&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;exec_mode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;node_args&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--inspect=9000&amp;#34;&lt;/span&gt;]
           }
        ]
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;我的settingsjs-文件的nodesdir-配置如下&#34;&gt;我的settings.js 文件的nodesDir 配置如下:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;nodesDir&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/data/nodes,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;最终解决方法为&#34;&gt;最终解决方法为：&lt;/h2&gt;
&lt;p&gt;在启动命令中去除&amp;ndash;nodesDir /data/nodes选项。官方不推荐在命令行中使用此选项，因为nodes.$$$是一个临时文件夹，起初以为是权限问题，后来发现并非如此。
若在命令行中指定&amp;ndash;nodesDir /data/nodes，且settings.js文件中也有设置，命令行的设置会优先生效。但如果两者同时设置，可能会引起兼容性问题或其他未知问题。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Remember the Problem of Apisix and Node Red Multi Instance Debugging</title>
      <link>https://ltan.me/post/2024/01/remember-the-problem-of-apisix-and-node-red-multi-instance-debugging/</link>
      <pubDate>Tue, 16 Jan 2024 17:22:05 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/01/remember-the-problem-of-apisix-and-node-red-multi-instance-debugging/</guid>
      <description>Resolving Docker Compose and ApiSix Port 502 Error 在工作中，我尝试部署Saas应用程序，使用了Docker Compose、ApiSix和Node-RED。 然而，在这个过程中，我遇到了一个502端口访问错误。 我花了一整天的时间来解决这个</description>
      <content>&lt;h1 id=&#34;resolving-docker-compose-and-apisix-port-502-error&#34;&gt;Resolving Docker Compose and ApiSix Port 502 Error&lt;/h1&gt;
&lt;p&gt;在工作中，我尝试部署Saas应用程序，使用了Docker Compose、ApiSix和Node-RED。
然而，在这个过程中，我遇到了一个502端口访问错误。
我花了一整天的时间来解决这个问题，最终找到了问题的原因。&lt;/p&gt;
&lt;p&gt;问题出在我创建Node-RED实例并在ApiSix中添加upstream时。
我注意到，当我运行以下命令来创建Node-RED实例时，我不小心将端口号设置为1881来进行暴露：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d --network apisix_apisix --name node-red-a -p 1880:1880 nodered/node-red:3.1.0-18
docker run -d --network apisix_apisix --name node-red-b -p 1881:1880 nodered/node-red:3.1.0-18
docker run -d --network apisix_apisix --name node-red-c -p 1882:1880 nodered/node-red:3.1.0-18
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但实际上，Docker网络apisix_apisix并没有使用这个暴露端口，&lt;br&gt;
而是使用了内部网络的端口。这个错误导致了我一整天的时间浪费。&lt;/p&gt;
&lt;p&gt;为了解决问题，我将Node-RED实例的端口号设置为1880，  &lt;br&gt;
与Docker网络中的端口一致，这样ApiSix能够正确地与Node-RED实例通信。&lt;br&gt;
以下端口必须要填写内部的程序实际端口&lt;br&gt;
&lt;img src=&#34;./screenshot-20240116-205136.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Solving HTTPS Debugging Issues with SSO Integration Using Ngrok on Windows</title>
      <link>https://ltan.me/post/2024/01/solving-https-debugging-issues-with-sso-integration-using-ngrok-on-windows/</link>
      <pubDate>Tue, 02 Jan 2024 10:00:00 +0800</pubDate>
      
      <guid>https://ltan.me/post/2024/01/solving-https-debugging-issues-with-sso-integration-using-ngrok-on-windows/</guid>
      <description>介绍 在这篇文章中，我们将探讨如何使用ngrok在Windows环境下解决与公司SSO系统对接时的HTTPS调试问题。我们将逐步介绍如何配置ngrok以实现内网穿透，从而允许远程服务器访问您的本地开发环</description>
      <content>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;在这篇文章中，我们将探讨如何使用ngrok在Windows环境下解决与公司SSO系统对接时的HTTPS调试问题。我们将逐步介绍如何配置ngrok以实现内网穿透，从而允许远程服务器访问您的本地开发环境。&lt;/p&gt;
&lt;h2 id=&#34;步骤1-安装ngrok&#34;&gt;步骤1: 安装ngrok&lt;/h2&gt;
&lt;p&gt;首先，需要在Windows系统上安装ngrok。请按照以下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;访问&lt;a href=&#34;https://ngrok.com/download&#34;&gt;ngrok官网&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载适用于Windows的ngrok安装包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压下载的文件到一个您方便访问的位置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开命令提示符并切换到包含ngrok的文件夹。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在命令提示符中运行以下命令以验证安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok --version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这应该会显示安装的ngrok版本。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;步骤2-配置ngrok&#34;&gt;步骤2: 配置ngrok&lt;/h2&gt;
&lt;p&gt;接下来，配置ngrok以实现内网穿透。您需要创建一个ngrok帐户并获取授权令牌。在ngrok官网注册后，复制您的授权令牌，并在命令提示符中运行以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```
ngrok config add-authtoken  [您的授权令牌]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./screenshot-20240102-205845.png&#34; alt=&#34;&#34;&gt;
配置文件保存如下&lt;br&gt;
&lt;img src=&#34;./screenshot-20240102-205956.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;步骤3-启动ngrok隧道&#34;&gt;步骤3: 启动ngrok隧道&lt;/h2&gt;
&lt;p&gt;现在，启动ngrok隧道以连接到您的本地开发服务器。假设您的本地服务器运行在端口1880上，您可以使用以下命令启动ngrok隧道：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```
ngrok http 1880
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./screenshot-20240102-210046.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;./screenshot-20240102-205914.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;步骤4-配置sso系统&#34;&gt;步骤4: 配置SSO系统&lt;/h2&gt;
&lt;p&gt;最后一步是在您的SSO系统中配置ngrok提供的公共URL。这将允许SSO系统通过ngrok隧道访问您的本地服务器。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;使用ngrok在Windows环境下解决SSO系统的HTTPS调试问题是一个简单而有效的方法。通过以上步骤，您可以轻松地实现内网穿透，从而使远程服务器能够访问您的本地开发环境。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Configure Direct Domain in Clash</title>
      <link>https://ltan.me/guides/configure-direct-domain-in-clash/</link>
      <pubDate>Thu, 12 Oct 2023 17:00:18 +0800</pubDate>
      
      <guid>https://ltan.me/guides/configure-direct-domain-in-clash/</guid>
      <description>In Clash, if you want a specific domain to bypass the proxy and connect directly, you can utilize the mixin and rules settings. Below is an example of how to set up a direct connection for the domain baolei.xxxx.com: dns: enable: true enhanced-mode: redir-host # 或者使用 fake-ip，根据你的需求选择 listen: 0.0.0.0:53 nameserver: - 172.20.128.2 # 你的首选DNS服务器,家庭内网dns,公司内网dns - 172.20.128.3 #</description>
      <content>&lt;p&gt;In Clash, if you want a specific domain to bypass the proxy and connect directly, you can utilize the &lt;code&gt;mixin&lt;/code&gt; and &lt;code&gt;rules&lt;/code&gt; settings. Below is an example of how to set up a direct connection for the domain &lt;code&gt;baolei.xxxx.com&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;dns&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;enable&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;enhanced-mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;redir-host&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 或者使用 fake-ip，根据你的需求选择&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0.0.0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;nameserver&lt;/span&gt;:
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;172.20.128.2&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 你的首选DNS服务器,家庭内网dns,公司内网dns&lt;/span&gt;
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;172.20.128.3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 你的备用DNS服务器,家庭内网dns,公司内网dns&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# - &amp;#34;8.8.8.8&amp;#34; # 公共DNS，仅在访问互联网时使用&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# - &amp;#34;8.8.4.4&amp;#34; # 公共DNS，仅在访问互联网时使用&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;fallback&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# 当 nameserver 无法解析才使用以下dns解析&lt;/span&gt;
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8.8.8.8&amp;#34;&lt;/span&gt;
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8.8.4.4&amp;#34;&lt;/span&gt;
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.1.1&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;fallback-filter&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;geoip&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用GeoIP规则过滤掉国内的IP地址&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;ipcidr&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# 保证以下私有地址范围不使用fallback DNS&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0/8&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.0.0.0/8&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.0/8&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;169.254.0.0/16&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;172.16.0.0/12&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;::1/128&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fc00::/7&amp;#34;&lt;/span&gt;
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fe80::/10&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;rules&lt;/span&gt;:
  - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DOMAIN-SUFFIX,baolei.xxxx.com,DIRECT&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 确保这条规则在任何可能触发代理的规则之前&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# 其他规则...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mixin&lt;/code&gt;: This setting allows you to modify the main configuration dynamically. It is useful when you want to have a base configuration and apply changes without affecting the main configuration.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dns&lt;/code&gt;: Inside the mixin, this section configures the DNS settings for Clash.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;enable&lt;/code&gt;: true: This enables the DNS feature in Clash.&lt;br&gt;
&lt;code&gt;listen&lt;/code&gt;: :53: This instructs Clash to listen on port 53 for DNS requests.&lt;br&gt;
&lt;code&gt;nameserver&lt;/code&gt;: This specifies the default DNS servers that Clash will use to resolve domain names. In this case, Google&amp;rsquo;s public DNS (8.8.8.8) is used.&lt;br&gt;
&lt;code&gt;rules&lt;/code&gt;: This section defines the rules for how domains are treated in terms of routing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DOMAIN-SUFFIX,baolei.xxxx.com,DIRECT&lt;/code&gt;: This rule means that any domain ending with baolei.xxxx.com will connect directly, bypassing the proxy.
By implementing this configuration, all traffic to baolei.xxxx.com will bypass the proxy and connect directly. It&amp;rsquo;s useful when you want certain domains to have a direct connection, perhaps due to performance reasons or to bypass potential issues with proxying.&lt;/p&gt;
&lt;h1 id=&#34;对于-direct-规则即使域名解析使用了-8888实际的数据流还是直连的&#34;&gt;对于 DIRECT 规则，即使域名解析使用了 8.8.8.8，实际的数据流还是直连的&lt;/h1&gt;
</content>
    </item>
    
    <item>
      <title>Resolving the Issue of Centos 7 Vm Unable to Ping Its Host Machine</title>
      <link>https://ltan.me/post/2023/10/resolving-the-issue-of-centos-7-vm-unable-to-ping-its-host-machine/</link>
      <pubDate>Sun, 08 Oct 2023 19:16:07 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/10/resolving-the-issue-of-centos-7-vm-unable-to-ping-its-host-machine/</guid>
      <description>解决因docker网络导致的网络问题，无法ping通局域网ip 背景 在我的办公室网络环境中，我有一个 Windows 10 宿主机，上面安装了 VMware，并在 VMware 中运行了一个 CentOS 7 虚拟机。虽然宿主机和 CentOS 7 虚拟机都可以正常上网</description>
      <content>&lt;h1 id=&#34;解决因docker网络导致的网络问题无法ping通局域网ip&#34;&gt;解决因docker网络导致的网络问题，无法ping通局域网ip&lt;/h1&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;在我的办公室网络环境中，我有一个 Windows 10 宿主机，上面安装了 VMware，并在 VMware 中运行了一个 CentOS 7 虚拟机。虽然宿主机和 CentOS 7 虚拟机都可以正常上网并 ping 通外部地址，但 CentOS 7 无法 ping 通宿主机。这让我非常困惑，并最初怀疑可能是公司的网管对我的 MAC 地址进行了某种限制。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# route -n&lt;/span&gt;
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         172.22.128.1    0.0.0.0         UG    &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ens33
172.17.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; docker0
172.18.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-6b8659f8f886
172.19.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-89bc77a42b8a
172.20.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-b4e656893ece
172.22.128.0    0.0.0.0         255.255.240.0   U     &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ens33
172.26.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-5b7ab2df8a43
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟机上有多个 Docker 网络，其中一个网络（br-b4e656893ece）与宿主机的网络冲突。&lt;br&gt;
这意味着， 尝试 ping 宿主机时，数据包可能被发送到了 Docker 网络，而不是真正的物理网络。&lt;br&gt;
这是最关键的问题所在&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;问现现像&#34;&gt;问现现像&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我的一个局域网ip ping不通&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ping 172.20.151.90&lt;/span&gt;
PING 172.20.151.90 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;172.20.151.90&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 56&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;84&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; bytes of data.
From 172.20.0.1 icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; Destination Host Unreachable
From 172.20.0.1 icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; Destination Host Unreachable
From 172.20.0.1 icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; Destination Host Unreachable
From 172.20.0.1 icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; Destination Host Unreachable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;诊断过程&#34;&gt;诊断过程&lt;/h2&gt;
&lt;p&gt;经过一系列的诊断步骤，包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查 VMware 的网络模式设置。&lt;/li&gt;
&lt;li&gt;检查 Windows 和 CentOS 的防火墙设置。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;traceroute&lt;/code&gt;命令跟踪网络路径 或者查看系统路由表 &lt;code&gt;route -n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检查 CentOS 的路由表。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我发现了一个关键的线索：CentOS 虚拟机上的 Docker 网络与宿主机的网络地址冲突。&lt;/p&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;解决方法&lt;/h2&gt;
&lt;p&gt;最终确定是 Docker 网络与宿主机网络冲突导致的问题。为了解决这个问题，我采取了以下步骤：&lt;/p&gt;
&lt;p&gt;第一步, 停止 Docker 服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo systemctl stop docker.service
sudo systemctl stop docker.socket

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二步, 手动删除冲突的 Docker 网络或修改其 IP 地址。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#我选择删除&lt;/span&gt;
sudo route del -net 172.20.0.0 netmask 255.255.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第三步, 重启 Docker 服务和 CentOS 虚拟机。&lt;/p&gt;
&lt;p&gt;经过上述步骤，CentOS 7 虚拟机成功 ping 通了宿主机。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# check test,it worked!&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ping 172.20.151.90&lt;/span&gt;
PING 172.20.151.90 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;172.20.151.90&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 56&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;84&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; bytes of data.
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; bytes from 172.20.151.90: icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ttl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.422 ms
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; bytes from 172.20.151.90: icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; ttl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.362 ms
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; bytes from 172.20.151.90: icmp_seq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; ttl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.555 ms
^C
--- 172.20.151.90 ping statistics ---
&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; packets transmitted, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; received, 0% packet loss, time 2000ms
rtt min/avg/max/mdev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0.362/0.446/0.555/0.082 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;主要原因是我上周折腾开环境时，在centos7 使用docker-compose搭建了kafka，使用如下的一个&lt;code&gt;docker-compose.yml&lt;/code&gt;文件
从以下docker-compose文件看，并没有设置网络相关的东西，所以导致使用了默认的docker网络容器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;

services:
  zookeeper:
    image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bitnami/zookeeper:latest&amp;#39;&lt;/span&gt;
    ports:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2181:2181&amp;#39;&lt;/span&gt;
    environment:
      - ALLOW_ANONYMOUS_LOGIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes

  kafka:
    image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bitnami/kafka:latest&amp;#39;&lt;/span&gt;
    ports:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;9092:9092&amp;#39;&lt;/span&gt;
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
      - KAFKA_CFG_ADVERTISED_LISTENERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了不会使每天开机启动系统，自动创建了172.20.0.0这一条路由记录，我决定对docker-compose.yml进行修改网络
指定子网段ip   该ip由docker自动创建的br-b4e656893ece 网卡id号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost kafka&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# route -n&lt;/span&gt;
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         172.17.64.1     0.0.0.0         UG    &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ens33
172.17.64.0     0.0.0.0         255.255.240.0   U     &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ens33
172.18.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-6b8659f8f886
172.19.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-89bc77a42b8a
172.20.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-b4e656893ece
172.26.0.0      0.0.0.0         255.255.0.0     U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; br-5b7ab2df8a43
192.168.89.0    0.0.0.0         255.255.255.0   U     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; docker0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过&lt;code&gt;docker network ls&lt;/code&gt; 命令发现&lt;code&gt;b4e656893ece&lt;/code&gt; 为 kafka-default所创建的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# docker network ls&lt;/span&gt;
NETWORK ID     NAME                        DRIVER    SCOPE
6b8659f8f886   bigdata_default             bridge    local
1bbd6235ef1e   bridge                      bridge    local
5b7ab2df8a43   docker-compose_default      bridge    local
89bc77a42b8a   docker-compose_my_network   bridge    local
330d08b4c24b   host                        host      local
b4e656893ece   kafka_default               bridge    local
5501efb5d97b   none                        null      local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终修改为docker-compose.yml 如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;

services:
  zookeeper:
    image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bitnami/zookeeper:latest&amp;#39;&lt;/span&gt;
    ports:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2181:2181&amp;#39;&lt;/span&gt;
    environment:
      - ALLOW_ANONYMOUS_LOGIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
    networks:
      - custom_network

  kafka:
    image: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bitnami/kafka:latest&amp;#39;&lt;/span&gt;
    ports:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;9092:9092&amp;#39;&lt;/span&gt;
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
      - KAFKA_CFG_ADVERTISED_LISTENERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - custom_network

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不修改docker-compose.yml文件重新执行的话，下面解决方法也可以&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#need to delete kafka_deafalut&lt;/span&gt;
docker network rm kafka_default
&lt;span style=&#34;color:#75715e&#34;&gt;#re create network, then vaild subnet,it worked!&lt;/span&gt;
docker network create --subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;172.30.0.0/16 kafka_default 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这次的经验教训是，当遇到网络通信问题时，不仅要检查常见的网络配置和防火墙设置，&lt;br&gt;
还要考虑到其他可能影响网络的因素，例如 Docker 或其他虚拟化技术。而最重要的是，&lt;br&gt;
不要过早地得出结论或怀疑其他人，因为问题的根源可能出乎意料。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Managing Multiple Git Accounts on Windows 10</title>
      <link>https://ltan.me/post/2023/09/managing-multiple-git-accounts-on-windows-10/</link>
      <pubDate>Tue, 19 Sep 2023 19:19:09 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/09/managing-multiple-git-accounts-on-windows-10/</guid>
      <description>在 Windows 10 下管理多个 Git 账号 问题背景描述 在开发过程中，开发者经常需要在多个代码托管平台（例如 GitHub、GitLab 或公司私有的代码托管平台）之间切换。这样做可能会引发一系列问题，尤其是当你需要使用不同的</description>
      <content>&lt;h1 id=&#34;在-windows-10-下管理多个-git-账号&#34;&gt;在 Windows 10 下管理多个 Git 账号&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;问题背景描述
在开发过程中，开发者经常需要在多个代码托管平台（例如 GitHub、GitLab 或公司私有的代码托管平台）之间切换。这样做可能会引发一系列问题，尤其是当你需要使用不同的 Git 账号进行代码提交时。
本文将指导你如何在 Windows 10 下管理多个 Git 账号，并确保你的用户名和电子邮件地址不被泄露。&lt;br&gt;
&lt;code&gt;为什么要采用ssh提交git代码,而不是用http协议提交代码&lt;/code&gt;&lt;br&gt;
&lt;code&gt;个人认为主要是ssh提供更好的安全，而用http提交的话，一但会话失效需要重登录，甚至还要用浏览器登录一下非常不便&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前提条件&#34;&gt;前提条件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;已安装 Git&lt;/li&gt;
&lt;li&gt;Windows 10 操作系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;步骤-1-生成-ssh-密钥&#34;&gt;步骤 1: 生成 SSH 密钥&lt;/h2&gt;
&lt;p&gt;首先，为每一个 Git 账号生成一个 SSH 密钥。
打开gitbash cmd 命令窗口,如果安装了git的话，在安装目录下找到bash窗口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成 SSH 密钥为 GitHub 账号&lt;/span&gt;
ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_email@example.com&amp;#34;&lt;/span&gt; -f /c/Users/admin/.ssh/id_rsa_mygithubusername

&lt;span style=&#34;color:#75715e&#34;&gt;# 生成 SSH 密钥为公司的 Git 账号&lt;/span&gt;
ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_work_email@example.com&amp;#34;&lt;/span&gt; -f /c/Users/admin/.ssh/id_rsa_mycompanyname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;步骤-2-创建-ssh-config-文件&#34;&gt;步骤 2: 创建 SSH Config 文件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在 C:\Users\admin.ssh 目录下创建一个 config 文件（&lt;code&gt;如果没有的话&lt;/code&gt;），并添加以下内容：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# GitHub a 账号&lt;/span&gt;
Host github.com
  HostName github.com
  User git
  IdentityFile C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;ssh&lt;span style=&#34;color:#ae81ff&#34;&gt;\i&lt;/span&gt;d_rsa_mygithubusername_a  &lt;span style=&#34;color:#75715e&#34;&gt;#这是存在在本地的私钥，pub文件公钥上传到github上&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# GitHub b 账号&lt;/span&gt;
Host github.com
  HostName github.com
  User git
  IdentityFile C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;ssh&lt;span style=&#34;color:#ae81ff&#34;&gt;\i&lt;/span&gt;d_rsa_mygithubusername_b  &lt;span style=&#34;color:#75715e&#34;&gt;#这是存在在本地的私钥，pub文件公钥上传到github上&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 公司 Git 账号&lt;/span&gt;
Host work.git
  HostName company.git
  User git
  IdentityFile C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;ssh&lt;span style=&#34;color:#ae81ff&#34;&gt;\i&lt;/span&gt;d_rsa_mycompanyname  &lt;span style=&#34;color:#75715e&#34;&gt;#这是存在本地的私钥，pub文件公钥上传到公司gitlib上&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;步骤-3-配置-git-用户信息&#34;&gt;步骤 3: 配置 Git 用户信息,&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;为了保证不泄露个人信息，你可以在每个项目目录下单独设置 Git 用户名和电子邮件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 在项目目录下运行，也就是为每个项目单独添加独立的name和email而不用公共的，默认的&lt;/span&gt;
    git config user.name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your Name&amp;#34;&lt;/span&gt;
    git config user.email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your_email@example.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果的你的项目已经存在，或者是通过http接口上传的gitlib的，可以找到项目根目录下有个.git隐藏目录 打开它
然后找到config文件，并打开它，显示如下内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;core&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	repositoryformatversion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	filemode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	bare &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	logallrefupdates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
	symlinks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	ignorecase &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;remote &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; http://gitlab.company.com/forest/holly.git
	fetch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	remote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origin
	merge &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; refs/heads/master
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	remote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origin
	merge &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; refs/heads/dev
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; your name   &lt;span style=&#34;color:#75715e&#34;&gt;# 切记这里一定要添加你的name,否则是用默认全局,泄露信息，可以匿名&lt;/span&gt;
	email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; your email &lt;span style=&#34;color:#75715e&#34;&gt;# 切记这里一定要添加你的eamil,否则是用默认全局 泄露信息 可以匿名	&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;只要将以上url 修改为git@gitlab.company.com:forest/holly.git 即可马上提交代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果遇到github.com 多个账号都要提交不同的代码怎么办？
分别给每个账号生成一对公私钥对，把公钥分别添加&lt;code&gt;SSH and GPG keys&lt;/code&gt; github上即可
然后在项目.git目录下找到config文件内容修改如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;core&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	repositoryformatversion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
	filemode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	bare &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	logallrefupdates &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
	symlinks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
	ignorecase &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;remote &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; git@github.com-&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;你的github账号&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;:用户名/项目名   &lt;span style=&#34;color:#75715e&#34;&gt;#主要是这里，在github.com后面添加-账号&lt;/span&gt;
	fetch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; +refs/heads/*:refs/remotes/origin/*
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	remote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origin
	merge &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; refs/heads/master
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	remote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; origin
	merge &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; refs/heads/dev
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
	name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; your name   &lt;span style=&#34;color:#75715e&#34;&gt;# 切记这里一定要添加你的name,否则是用默认全局,泄露信息，可以匿名&lt;/span&gt;
	email &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; your email &lt;span style=&#34;color:#75715e&#34;&gt;# 切记这里一定要添加你的eamil,否则是用默认全局 泄露信息 可以匿名&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>OpenResty Lua Lapis and Redis Cluster Setup Guide</title>
      <link>https://ltan.me/post/2023/07/openresty-lua-lapis-and-redis-cluster-setup-guide/</link>
      <pubDate>Wed, 05 Jul 2023 16:21:20 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/07/openresty-lua-lapis-and-redis-cluster-setup-guide/</guid>
      <description>安装模块 下载并安装lua-resty-redis-cluster模块 lua-resty-redis-cluster模块的GitHub地址：https://github.com/iresty/lua-r</description>
      <content>&lt;h1 id=&#34;安装模块&#34;&gt;安装模块&lt;/h1&gt;
&lt;h2 id=&#34;下载并安装lua-resty-redis-cluster模块&#34;&gt;下载并安装lua-resty-redis-cluster模块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;lua-resty-redis-cluster模块的GitHub地址：&lt;a href=&#34;https://github.com/iresty/lua-resty-redis-cluster&#34;&gt;https://github.com/iresty/lua-resty-redis-cluster&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个模块可以用来连接redis集群。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请将这个模块下载到任意的目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载完成后，你只需要在包中找到&lt;code&gt;rediscluster.lua&lt;/code&gt;和&lt;code&gt;redis_slot.c&lt;/code&gt;两个文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;code&gt;.c&lt;/code&gt;文件无法直接在nginx配置文件中引入，所以我们需要将它编译成&lt;code&gt;.so&lt;/code&gt;文件。以下是编译命令：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;gcc SOURCE_FILES -fPIC -shared -o TARGET 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用上面的命令，你可以得到&lt;code&gt;librestyredisslot.so&lt;/code&gt;文件。也可以生成redis_slot.so具体命令如下：&lt;/p&gt;
&lt;p&gt;gcc redis_slot.c  -fPIC -shared -o librestyredisslot.so&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件放置&#34;&gt;文件放置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将编译得到的&lt;code&gt;librestyredisslot.so&lt;/code&gt;文件复制到&lt;code&gt;/data/webserver/openresty/lualib/&lt;/code&gt;目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将&lt;code&gt;rediscluster.lua&lt;/code&gt;文件放到&lt;code&gt;/data/webserver/openresty/lualib/&lt;/code&gt;目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;openresty-lua-lapis-and-redis-cluster-setup-guide&#34;&gt;OpenResty, Lua, Lapis, and Redis Cluster Setup Guide&lt;/h1&gt;
&lt;h2 id=&#34;download-and-install-the-lua-resty-redis-cluster-module&#34;&gt;Download and Install the lua-resty-redis-cluster Module&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The GitHub link for the lua-resty-redis-cluster module is &lt;a href=&#34;https://github.com/iresty/lua-resty-redis-cluster&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This module can be used to connect to a Redis cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please download the module into any directory of your choice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After downloading, you will need the &lt;code&gt;rediscluster.lua&lt;/code&gt; and &lt;code&gt;redis_slot.c&lt;/code&gt; files from the package.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The &lt;code&gt;.c&lt;/code&gt; file can&amp;rsquo;t be directly imported into the Nginx configuration file, so it needs to be compiled into a &lt;code&gt;.so&lt;/code&gt; file. The compilation command is:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;gcc SOURCE_FILES -fPIC -shared -o TARGET 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using the above command, you can obtain the librestyredisslot.so file. You can also generate redis_slot.so with the following specific command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The specific command is as follows:&lt;/p&gt;
&lt;p&gt;gcc redis_slot.c  -fPIC -shared -o librestyredisslot.so&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;file-placement&#34;&gt;File Placement&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy the compiled &lt;code&gt;librestyredisslot.so&lt;/code&gt; file into the &lt;code&gt;/data/webserver/openresty/lualib/&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Place the &lt;code&gt;rediscluster.lua&lt;/code&gt; file into the &lt;code&gt;/data/webserver/openresty/lualib/&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Hybrid Encryption With AES 128 Bit and RSA Using Java and Ngx_lua</title>
      <link>https://ltan.me/post/2023/06/hybrid-encryption-with-aes-128-bit-and-rsa-using-java-and-ngx_lua/</link>
      <pubDate>Thu, 08 Jun 2023 14:40:51 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/06/hybrid-encryption-with-aes-128-bit-and-rsa-using-java-and-ngx_lua/</guid>
      <description>一种 AES（128位）+RSA混合加密，iv为前16个0字符，使用java和ngx.lua编写的加解密方法 使用 openresty 和 ngx_lua 编写的服务端 HTTP 接口，旨在提供给 Android 设备提交加密数据上报、日志采集等功能。 主要流流程如下</description>
      <content>&lt;h2 id=&#34;一种-aes128位rsa混合加密iv为前16个0字符使用java和ngxlua编写的加解密方法&#34;&gt;一种 AES（128位）+RSA混合加密，iv为前16个0字符，使用java和ngx.lua编写的加解密方法&lt;/h2&gt;
&lt;p&gt;使用 openresty 和 ngx_lua 编写的服务端 HTTP 接口，旨在提供给 Android 设备提交加密数据上报、日志采集等功能。&lt;br&gt;
主要流流程如下
&lt;img src=&#34;./swim-road-flow.PNG&#34; alt=&#34;aes+rsa混合常见流程&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;local enable_padding = true&lt;/code&gt;：定义一个布尔变量&lt;code&gt; enable_padding&lt;/code&gt; 并赋值为 &lt;code&gt;true&lt;/code&gt;，用于启用填充功能。
&lt;code&gt;local aes_128_cbc_with_padding = aes:new(key, nil, aes.cipher(128,&amp;quot;cbc&amp;quot;), {iv = string.rep(&#39;\0&#39;, 16)}, nil, nil, enable_padding)&lt;/code&gt;：
&lt;code&gt;aes:new()&lt;/code&gt; 是创建 &lt;code&gt;AES&lt;/code&gt; 加密算法实例的函数。&lt;br&gt;
&lt;code&gt;key&lt;/code&gt; 是用于加密和解密的密钥。&lt;br&gt;
&lt;code&gt;nil&lt;/code&gt; 表示没有额外的选项参数。&lt;br&gt;
&lt;code&gt;aes.cipher(128, &amp;quot;cbc&amp;quot;)&lt;/code&gt; 指定使用&lt;code&gt;AES-128&lt;/code&gt; 位密钥和 &lt;code&gt;CBC (Cipher Block Chaining)&lt;/code&gt; 模式进行加密。&lt;br&gt;
&lt;code&gt;{iv = string.rep(&#39;\0&#39;, 16)}&lt;/code&gt; 是初始化向量 &lt;code&gt;(IV)&lt;/code&gt;，其中 &lt;code&gt;string.rep(&#39;\0&#39;, 16)&lt;/code&gt; 创建了一个由 &lt;code&gt;16&lt;/code&gt; 个空字符组成的字符串作为 &lt;code&gt;IV&lt;/code&gt;。&lt;br&gt;
最后一个参数 &lt;code&gt;enable_padding&lt;/code&gt; 是用于启用填充功能的布尔变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是lua加密流程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; rsa_priv_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------BEGIN PRIVATE KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;your rsa private key code here 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------END PRIVATE KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;

 
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; rsa_pub_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------BEGIN PUBLIC KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;your rsa public key code here 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------END PUBLIC KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_rsa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.rsa&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_aes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.aes&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_rand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.random&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.string&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Base64 encode with URL safe and no padding&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encode_base64url&lt;/span&gt;(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.encode_base64(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; url_encoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.gsub(encoded, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)
    url_encoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.gsub(url_encoded, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;)
    url_encoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.gsub(url_encoded, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; url_encoded
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- RSA encryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rsa_encrypted&lt;/span&gt;(aes_key)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; pub, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resty_rsa:new({ public_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa_pub_key })
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; pub &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new rsa err: &amp;#34;&lt;/span&gt;, err)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encrypted &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pub:encrypt(aes_key)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; encrypted
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- AES encryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aes_encrypted&lt;/span&gt;(aes_key, content)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; aes_128_cbc_with_padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resty_aes:new(
            aes_key, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;, resty_aes.cipher(&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cbc&amp;#34;&lt;/span&gt;), {iv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.rep(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;)}, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;,
            &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; aes_128_cbc_with_padding &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Failed to create aes_128_cbc_with_padding&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encrypted &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; aes_128_cbc_with_padding:encrypt(content)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; encrypted
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Main encryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encrypt&lt;/span&gt;(content)
    &lt;span style=&#34;color:#75715e&#34;&gt;-- 1. Generate random AES key&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; aes_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resty_rand.bytes(&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;)

    &lt;span style=&#34;color:#75715e&#34;&gt;-- 2. Use RSA algorithm + RSA public key to encrypt the AES key&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encrypted_aes_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa_encrypted(aes_key)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; encrypted_aes_key &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to encrypt AES key&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;-- 3. Use AES to encrypt the content&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encrypted_content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; aes_encrypted(aes_key, content)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; encrypted_content &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to encrypt content&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;-- Return the base64url encoded encrypted AES key and content&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; encode_base64url(encrypted_aes_key), encode_base64url(encrypted_content)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Your content to encrypt&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your content here&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Call the encrypt function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encryptedAesKey, encryptedContent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; encrypt(content)

&lt;span style=&#34;color:#75715e&#34;&gt;-- Print the base64url encoded encrypted AES key and content&lt;/span&gt;
ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Encrypted AES Key: &amp;#34;&lt;/span&gt;, encryptedAesKey)
ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Encrypted Content: &amp;#34;&lt;/span&gt;, encryptedContent) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;以下是解密流程代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; rsa_priv_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------BEGIN PRIVATE KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;your rsa private key code here 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------END PRIVATE KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; rsa_pub_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[[
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------BEGIN PUBLIC KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;your rsa public key code here 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-------END PUBLIC KEY-----
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.string&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stringToHex&lt;/span&gt;(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resty_str.to_hex(input)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Base64 decode with URL safe and no padding&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decode_base64url&lt;/span&gt;(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; remainder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;input &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; remainder &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.rep(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; remainder)
        input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt; padding
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; url_decoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.gsub(input, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;)
    url_decoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.gsub(url_decoded, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.decode_base64(url_decoded)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; decoded
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Base64 decode with no padding&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decode_base64nopad&lt;/span&gt;(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; remainder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;input &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; remainder &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.rep(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; remainder)
        input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt; padding
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decoded &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.decode_base64(input)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; decoded
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- RSA decryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rsa_decrypted&lt;/span&gt;(base64url_str)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; resty_rsa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.rsa&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; base64url_str &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decoded_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; decode_base64url(base64url_str)

   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; decoded_str &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to decode base64url string: &amp;#34;&lt;/span&gt;, base64url_str)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; priv, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resty_rsa:new({ private_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa_priv_key })
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; priv &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
       ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new rsa err: &amp;#34;&lt;/span&gt;, err)
       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decrypted &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; priv:decrypt(decoded_str)

   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;  decrypted
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- AES decryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aes_decrypted&lt;/span&gt;(key, str)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; str &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key or str is nil&amp;#39;&lt;/span&gt;)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decode_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; decode_base64url(str)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; aes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.aes&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; enable_padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; aes_128_cbc_with_padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; aes:new(
       key, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;, aes.cipher(&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cbc&amp;#34;&lt;/span&gt;), {iv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.rep(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;)}, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;,
       &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;, enable_padding)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; aes_128_cbc_with_padding &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Failed to create aes_256_cbc_with_padding&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decrypted &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; aes_128_cbc_with_padding:decrypt(decode_str)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; decrypted
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;-- Main decryption function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decrypt&lt;/span&gt;(content, encryptAesKey)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decoded_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa_decrypted(encryptAesKey)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; decoded_key &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to decrypt AES key&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decrypted_content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; aes_decrypted(decoded_key, content)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; decrypted_content
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- Your encrypted content and key&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your encrypt content&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; encryptAesKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your aes key code here by java&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- Call the decrypt function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; decryptedContent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; decrypt(content,encryptAesKey)
&lt;span style=&#34;color:#75715e&#34;&gt;-- Print the decrypted content&lt;/span&gt;
ngx.say(decryptedContent)


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>How to Install Apache Spark on Windows Setup PySpark</title>
      <link>https://ltan.me/post/2023/05/how-to-install-apache-spark-on-windows-setup-pyspark/</link>
      <pubDate>Thu, 11 May 2023 15:25:41 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/05/how-to-install-apache-spark-on-windows-setup-pyspark/</guid>
      <description>为什么要在Windows 10上运行Scala Spark程序 开发环境设置简单： 对于许多开发者来说，Windows是他们最熟悉的操作系统， 因此在Windows上进行开发可以节省大量的环境设置和配置时间。 此</description>
      <content>&lt;h2 id=&#34;为什么要在windows-10上运行scala-spark程序&#34;&gt;为什么要在Windows 10上运行Scala Spark程序&lt;/h2&gt;
&lt;h3 id=&#34;开发环境设置简单&#34;&gt;开发环境设置简单：&lt;/h3&gt;
&lt;p&gt;对于许多开发者来说，Windows是他们最熟悉的操作系统，
因此在Windows上进行开发可以节省大量的环境设置和配置时间。
此外，Windows上有IntelliJ IDEA可以方便Scala和Spark的开发。&lt;/p&gt;
&lt;h3 id=&#34;本地测试方便&#34;&gt;本地测试方便：&lt;/h3&gt;
&lt;p&gt;在本地Windows环境中进行开发，
可以方便快速的进行代码的单元测试和调试。
虽然Spark在集群中运行时的行为可能与在单个机器上有所不同，
但对于许多常见的任务，
本地测试通常可以提供足够的保证。&lt;/p&gt;
&lt;h2 id=&#34;如何做&#34;&gt;如何做&lt;/h2&gt;
&lt;h3 id=&#34;步骤1下载spark并安装&#34;&gt;步骤1，下载spark并安装&lt;/h3&gt;
&lt;p&gt;根据自己的环境版本，在官网下载&lt;code&gt;spark-3.2.4-bin-hadoop2.7&lt;/code&gt;包
下载链接地址为&lt;code&gt;https://spark.apache.org/downloads.html&lt;/code&gt;
解压.tgz文件放到你本地目录夹,如&lt;code&gt;d:\spark-2.4.4-bin-hadoop2.7&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;步骤2-下载winutils并安装&#34;&gt;步骤2 下载winutils并安装&lt;/h3&gt;
&lt;p&gt;下载winutils.exe(解释windows hadoop通信问题)
下载链接地址&lt;code&gt;https://github.com/steveloughran/winutils/blob/master/hadoop-2.7.1/bin/winutils.exe&lt;/code&gt;
存放到&lt;code&gt;d:\spark-2.4.4-bin-hadoop2.7\bin\winutils.exe&lt;/code&gt; 该目录下&lt;/p&gt;
&lt;h3 id=&#34;步骤3设置环境变量&#34;&gt;步骤3，设置环境变量&lt;/h3&gt;
&lt;p&gt;设置windows环境变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Environment variable: &lt;/span&gt;
SPARK_HOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d:&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;park-2.4.4-bin-hadoop2.7
HADOOP_HOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d:&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;park-2.4.4-bin-hadoop2.7
&lt;span style=&#34;color:#75715e&#34;&gt;# PATH variable:&lt;/span&gt;
 d:&lt;span style=&#34;color:#ae81ff&#34;&gt;\s&lt;/span&gt;park-2.4.4-bin-hadoop2.7&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;in
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;步骤4-验证测试scala-spark--pyspark&#34;&gt;步骤4 验证测试scala spark 、 pyspark&lt;/h3&gt;
&lt;p&gt;测试 pyspark&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#75715e&#34;&gt;# 这里不需要用pip install pyspark 会容易报错，根本不好安装的，不好使还不如这样引用&lt;/span&gt;
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D:\spark-3.2.4-bin-hadoop2.7\python&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pyspark.sql &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SparkSession

&lt;span style=&#34;color:#75715e&#34;&gt;# 创建 SparkSession&lt;/span&gt;
spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;builder
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;appName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HDFS Read Example&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spark.master&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOrCreate()

&lt;span style=&#34;color:#75715e&#34;&gt;# 读取 CSV 文件&lt;/span&gt;
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hdfs://sybigdata/user/example/part-00000-d3d3436e-f258-43b8-bfec-e45eb966edc7-c000.csv&amp;#34;&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 显示前 10 行&lt;/span&gt;
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看显示结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Using Spark&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s default log4j profile: org/apache/spark/log4j-defaults.properties
Setting default log level to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WARN&amp;#34;&lt;/span&gt;.
To adjust logging level use sc.setLogLevel&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;newLevel&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. For SparkR, use setLogLevel&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;newLevel&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
23/05/11 15:19:23 WARN NativeCodeLoader: Unable to load native-hadoop library &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your platform... using builtin-java classes where applicable
+------+--------+--------------+--------------+-----------+----------+
|vvbbcc|hhmm_int|abc_name_index|abc_page_index|bbbbb_index|dddd_index|
+------+--------+--------------+--------------+-----------+----------+
|    31|     943|           2.0|           2.0|        0.0|       0.0|
|    18|     395|           6.0|           6.0|        0.0|      31.0|
|     9|    1175|           2.0|           2.0|        0.0|      20.0|
|    15|    1250|           5.0|           5.0|        0.0|      34.0|
|    16|     266|           7.0|           7.0|        0.0|       1.0|
|     6|     131|           5.0|           5.0|        0.0|       8.0|
|     8|     136|           4.0|           3.0|        0.0|       0.0|
|     7|    1229|           1.0|           1.0|        0.0|       5.0|
|    10|      79|           4.0|           3.0|        0.0|       4.0|
|    19|    1156|           6.0|           6.0|        0.0|       3.0|
+------+--------+--------------+--------------+-----------+----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;only showing top 10 rows&lt;/p&gt;
&lt;h3 id=&#34;验证scala-spark&#34;&gt;验证scala spark&lt;/h3&gt;
&lt;p&gt;读取csv文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;    val spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession.builder&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
      .appName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ShowLocal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      .config&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spark.master&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      .enableHiveSupport&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
      .getOrCreate&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    val path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hdfs://sybigdata/user/example/part-00000-d3d3436e-f258-43b8-bfec-e45eb966edc7-c000.csv&amp;#34;&lt;/span&gt;
    // 从HDFS中读取所有CSV文件
    val df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark.read.format&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.option&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.load&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    // 打印数据
    df.show&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请注意，要以windows 跑成功spark程序，以下配置是必须的
windows 作为单机跑起来，在本地运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 在windows 本地以下为 本地运行spark, 以下代码是必须的&lt;/span&gt;
    System.setProperty&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hadoop.home.dir&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\winutils\\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    val spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession.builder&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
      .appName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;helloSpsark&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      .config&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spark.master&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      .enableHiveSupport&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
      .getOrCreate&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;写入csv文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;    System.setProperty&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hadoop.home.dir&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\winutils\\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    val user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
    val ugi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; UserGroupInformation.createRemoteUser&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    ugi.doAs&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;new PrivilegedExceptionAction&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Unit&lt;span style=&#34;color:#f92672&#34;&gt;]()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      override def run: Unit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        val spark &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SparkSession.builder&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
          .appName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;helloSpsark&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          .config&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spark.master&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          .enableHiveSupport&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
          .getOrCreate&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
        val tuples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Seq&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spark&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Big Data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
        val df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spark.createDataFrame&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tuples&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.toDF&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
        df.show&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#这里会把csv文件保存在e:\abcd目录下&lt;/span&gt;
        df.write.mode&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SaveMode.Overwrite&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.format&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file:///e:/abcd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        spark.stop&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下是保存的csv文件目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;bcd&amp;gt;dir 
2023/05/11  14:59    &amp;lt;DIR&amp;gt;          .
2023/05/11  14:59    &amp;lt;DIR&amp;gt;          ..
2023/05/11  14:59                &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; .part-00000-8430568a-02c2-4db8-ad6c-16a2aed410df-c000.csv.crc
2023/05/11  14:59                 &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; ._SUCCESS.crc
2023/05/11  14:59                &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; part-00000-8430568a-02c2-4db8-ad6c-16a2aed410df-c000.csv
2023/05/11  14:59                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; _SUCCESS
               &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 个文件             &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; 字节
               &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 个目录 211,274,485,760 可用字节
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;csv 文件内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;bcd&amp;gt;type part-00000-8430568a-02c2-4db8-ad6c-16a2aed410df-c000.csv
1,spark
2,Big Data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在windows10-用intellj-idea-创建spark程序步骤&#34;&gt;在windows10 用intellj idea 创建spark程序步骤&lt;/h2&gt;
&lt;p&gt;使用 &amp;ldquo;net.alchim31.maven:scala-archetype-simple&amp;rdquo;。这个 archetype 为您提供了一个基本的 Scala 项目结构，您可以在此基础上添加 Spark 依赖。&lt;/p&gt;
&lt;p&gt;按照以下步骤在 IntelliJ IDEA 中创建一个基于 Scala + Spark 的 Maven 项目：&lt;/p&gt;
&lt;p&gt;打开 IntelliJ IDEA，点击 &amp;ldquo;Create New Project&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;在左侧导航栏中选择 &amp;ldquo;Maven&amp;rdquo;，然后勾选 &amp;ldquo;Create from archetype&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;如果 &amp;ldquo;net.alchim31.maven:scala-archetype-simple&amp;rdquo; 不在列表中，点击 &amp;ldquo;Add Archetype&amp;rdquo; 按钮。&lt;/p&gt;
&lt;p&gt;在 &amp;ldquo;Add Archetype&amp;rdquo; 对话框中输入以下信息：&lt;/p&gt;
&lt;p&gt;GroupId: &lt;code&gt;net.alchim31.maven&lt;/code&gt;&lt;br&gt;
ArtifactId: &lt;code&gt;scala-archetype-simple&lt;/code&gt;&lt;br&gt;
Version: &lt;code&gt;1.7&lt;/code&gt;（或您想使用的其他版本）&lt;br&gt;
点击 &amp;ldquo;OK&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;在列表中选择 &amp;ldquo;net.alchim31.maven:scala-archetype-simple&amp;rdquo;，然后点击 &amp;ldquo;Next&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;输入 &amp;ldquo;GroupId&amp;rdquo; 和 &amp;ldquo;ArtifactId&amp;rdquo;（例如，com.example 和 voicepredictionmodel）。点击 &amp;ldquo;Next&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;选择项目的存储位置，然后点击 &amp;ldquo;Finish&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;现在，您已经创建了一个基于 Scala 的 Maven 项目。接下来，需要为项目添加 Spark 依赖。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.spark&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spark-core_2.12&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.apache.spark&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spark-sql_2.12&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Armbian Boots to Display Chinese Character Stroke Order Learning</title>
      <link>https://ltan.me/post/2023/02/armbian-boots-to-display-chinese-character-stroke-order-learning/</link>
      <pubDate>Sat, 18 Feb 2023 20:04:12 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/02/armbian-boots-to-display-chinese-character-stroke-order-learning/</guid>
      <description>家庭数字显示屏自动化&amp;ndash;小学汉字笔画，拼音展示 一直想折腾一个家庭数字内容显示屏，想了很久，之前做的都是打开一个播放器播放视频，内容比较单一 今天有时间用golang语言基于goframe框架做</description>
      <content>&lt;h1 id=&#34;家庭数字显示屏自动化--小学汉字笔画拼音展示&#34;&gt;家庭数字显示屏自动化&amp;ndash;小学汉字笔画，拼音展示&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一直想折腾一个家庭数字内容显示屏，想了很久，之前做的都是打开一个播放器播放视频，内容比较单一
今天有时间用golang语言基于goframe框架做一个汉字笔顺，笔画展示，包括拼音显示，然后通过电视屏
和arm开发板小盒子（n1）自动化运行。运行程序系统环境 Debian Buster with Armbian Linux 5.1.15-aml-s905
目前自动开机用到的主要硬件设备小米开关，小米电视，小米智能音箱等设备&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;内容管理系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;n1开机自动运行程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;.desktop 程序是用来控制开机自启桌面程序&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;     admin@amlbian:~$ cat ~/.config/autostart/ad.desktop 
     &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Desktop Entry&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
     Encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;UTF-8
     Version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.9.4
     Type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Application
     Name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ad
     Comment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ad
     &lt;span style=&#34;color:#75715e&#34;&gt;#Exec=nohup mpv --playlist=/mnt/nfs/my_list.txt --loop-playlist=inf --fullscreen=yes &amp;amp;&lt;/span&gt;
     Exec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;chromium  --noerrdialogs --disable-session-crashed-bubble --disable-infobars  --kiosk http://localhost:81/characters/show
     StartupNotify&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
     Terminal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
     Hidden&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;内容控制程序
采用supervisor做开机自启go语言编写的内容控制程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;#/usr/bin/python /usr/local/bin/supervisord -c /etc/supervisord.conf&lt;/span&gt;
     
     &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;program:char&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
     command&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/root/character -c /root/config.yaml
     priority&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-1
     autorestart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Calculations Are Automatically Generated</title>
      <link>https://ltan.me/post/2023/02/calculations-are-automatically-generated/</link>
      <pubDate>Fri, 03 Feb 2023 15:18:02 +0800</pubDate>
      
      <guid>https://ltan.me/post/2023/02/calculations-are-automatically-generated/</guid>
      <description>自动生成小学生算式题代码 自动生成100以内的2个操作数的加减运算算式，要求运算结果也在100以内 规避结果为负数，题目数量可定制，生成到excel，可以直接打印，样式如下图 感谢xkm提供代码 代码如下，运</description>
      <content>&lt;h1 id=&#34;自动生成小学生算式题代码&#34;&gt;自动生成小学生算式题代码&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;自动生成100以内的2个操作数的加减运算算式，要求运算结果也在100以内
规避结果为负数，题目数量可定制，生成到excel，可以直接打印，样式如下图
感谢xkm提供代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./calculations.jpg&#34; alt=&#34;自动生成小学算式题&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码如下，运行环境python3.x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#author:xkm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#createdate:2023/2/3&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#encoding=utf-8&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; math
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xlwt
style &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xlwt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;XFStyle()&lt;span style=&#34;color:#75715e&#34;&gt;#格式信息&lt;/span&gt;
font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xlwt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Font()&lt;span style=&#34;color:#75715e&#34;&gt;#字体基本设置&lt;/span&gt;
font&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;宋体&amp;#39;&lt;/span&gt;
font&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;
font&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#字体大小，220就是11号字体，大概就是11*20得来的吧&lt;/span&gt;
style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; font
wb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xlwt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Workbook()
ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_sheet(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;习题集&amp;#34;&lt;/span&gt;,cell_overwrite_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)

data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
cell &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#生成excel 列数&lt;/span&gt;
total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#生成题数&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;subbb&lt;/span&gt;():
    a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;)
    b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    ab&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b
    a1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,a)
    b1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, a1)
    ab1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b1
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ab&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;ab1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;str(ab)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(ab1)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=(    )&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;res&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;   &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(a)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(b)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;res&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(a1)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(b1)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;res&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;------------&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(res)
        print(res)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addbb&lt;/span&gt;():
    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)
    b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    ab &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b
    a1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; a)
    b1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b)
    ab1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b1
    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(ab) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(ab1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=(    )&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; res &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;   &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(a) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(b) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; res &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; + &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(a1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(b1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; res &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;------------&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(res)
    print(res)


&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
        addbb()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        subbb()

index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(int(total &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; cell)):
    ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;row(j)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height_mismatch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
    ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;row(j)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(cell):
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;col(k)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; total&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;index:
           &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
           ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(j, k, data[index],style)
           index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H%M%S&amp;#39;&lt;/span&gt;)



wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;竖式题目生成-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xlsx&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (cell,len(data),version))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Localdatetime to Date Format Java</title>
      <link>https://ltan.me/post/2022/11/localdatetime-to-date-format-java/</link>
      <pubDate>Mon, 28 Nov 2022 16:05:03 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/11/localdatetime-to-date-format-java/</guid>
      <description>Localdatetime to Date Format Java 在使用java时间的api个人感觉非常不方便，很多时候存在格式转换，类型转换 比如date 转localDate localDateTime转换为 Date 等这种操作，二者的相互转换并不是一步到位哪么简单</description>
      <content>&lt;h1 id=&#34;localdatetime-to-date-format-java&#34;&gt;Localdatetime to Date Format Java&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在使用&lt;code&gt;java&lt;/code&gt;时间的&lt;code&gt;api&lt;/code&gt;个人感觉非常不方便，很多时候存在格式转换，类型转换 比如&lt;code&gt;date&lt;/code&gt; 转&lt;code&gt;localDate&lt;/code&gt;
&lt;code&gt;localDateTime&lt;/code&gt;转换为 &lt;code&gt;Date&lt;/code&gt; 等这种操作，二者的相互转换并不是一步到位哪么简单的，所以，还是在
这里记录一下转换的&lt;code&gt;api&lt;/code&gt;备忘一下, &lt;code&gt;localDate&lt;/code&gt;只处理&lt;code&gt;yyyyMMdd&lt;/code&gt;格式，&lt;code&gt;localTime&lt;/code&gt;只处理&lt;code&gt;HHmmss&lt;/code&gt;格式,而
&lt;code&gt;localDateTime&lt;/code&gt; 可以处理 &lt;code&gt;yyyy-MM-dd HH:mm:ss&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;date-to-localdatetime&#34;&gt;Date to LocalDateTime&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    Date date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; 
    LocalDateTime ldt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toInstant&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;atZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ZoneId&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toLocalDateTime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;localdatetime-to-date&#34;&gt;LocalDateTime to Date&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;   LocalDateTime date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; 
   Date date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; localDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;atZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; ZoneId&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toInstant&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;生成时间序列&#34;&gt;生成时间序列&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDayList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String startDate&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; gap&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      String pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      DateTimeFormatter dateFormat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DateTimeFormatter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ofPattern&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pattern&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; 
      &lt;span style=&#34;color:#75715e&#34;&gt;// 生成年月日的日期序列
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt; 
      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; gap&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
         LocalDateTime newDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;startDate&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; dateFormat&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plusDays&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
         Date date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;newDate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;atZone&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ZoneId&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toInstant&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
         res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;//调用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      String startDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2022-11-01 01:01:11&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; gap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 30&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Date&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; dayList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getDayList&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;startDate&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; gap&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      SimpleDateFormat sdf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SimpleDateFormat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy-MM-dd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      
      dayList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
         String luanar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; testLuanars&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;//输出农历
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;         String format &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
         System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;format &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=======&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; luanar&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>How to Download Videos From WeChat</title>
      <link>https://ltan.me/post/2022/11/how-to-download-videos-from-wechat-video-account/</link>
      <pubDate>Mon, 07 Nov 2022 11:04:57 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/11/how-to-download-videos-from-wechat-video-account/</guid>
      <description>how to downlaod videos from wechat (如何下载微信里的视频)堂姐发来微信消息，需要帮她把过去上传到微信的视频号某视频下载下来急用 开始以为可以用浏览器打开F12下载抓包，原来还是too young，不得不又从网上捣鼓一下 偶然发现</description>
      <content>&lt;h1 id=&#34;how-to-downlaod-videos-from-wechat&#34;&gt;how to downlaod videos from wechat&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;(如何下载微信里的视频)&lt;/code&gt;堂姐发来微信消息，需要帮她把过去上传到微信的视频号某视频下载下来急用
开始以为可以用浏览器打开&lt;code&gt;F12&lt;/code&gt;下载抓包，原来还是&lt;code&gt;too young&lt;/code&gt;，不得不又从网上捣鼓一下
偶然发现&lt;code&gt;Charles&lt;/code&gt;这个抓包工具，中文名&lt;code&gt;花瓶&lt;/code&gt;，于是有了以下步骤，特记录一下&lt;code&gt;step&lt;/code&gt;
普通的下载本来可以通过浏览器打开然后我们可以对其右键另存为的
总的是来说，下载视频，无非分为&lt;code&gt;两步&lt;/code&gt;，&lt;code&gt;第一步&lt;/code&gt;，找真实下载链接，&lt;code&gt;第二步&lt;/code&gt;用下载工具下载&lt;br&gt;
不过有个终极方法就是手机录屏可以搞定视频复制下载，但是效果极差不推荐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第一步，通过 &lt;code&gt;Charles&lt;/code&gt; 对微信抓包获取所有&lt;code&gt;http/https&lt;/code&gt;请求链接地址
安装&lt;code&gt;charles&lt;/code&gt;最新版,&lt;code&gt;charles&lt;/code&gt;默认代理端口为&lt;code&gt;8888&lt;/code&gt;
&lt;img src=&#34;charles-set.png&#34; alt=&#34;charles&#34;&gt;      &lt;br&gt;
设置微信代理登录，这一步是告诉微信需要需要通过代理端口&lt;code&gt;8888&lt;/code&gt;才能连接微信服务器&lt;br&gt;
&lt;img src=&#34;wx-set-proxxy.png&#34; alt=&#34;charles&#34;&gt;       &lt;br&gt;
打开微信聊天,图片省略，打开微信视频号播放，观察&lt;code&gt;charles&lt;/code&gt;变化，找到真实视频播放地址 &lt;br&gt;
&lt;img src=&#34;wxh_dl_video.png&#34; alt=&#34;charles&#34;&gt;&lt;br&gt;
比较幸运的是微信视频号并没有加密，哈哈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第二步，通过浏览器打开播放视频并右键另存为&lt;br&gt;
直接找到复现连接地址用浏览器打开播放，然后在浏览端右键另存为视频
下载视频己完成，如果碰到加密视频请往下看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;视频解密下载&#34;&gt;视频解密下载&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;理论上只要是能支持微信传播的视频连接地址，都应该可以下载的，也就是说只要能在微信打开播放的视频都可以下载的
除非载了不能解密导致无法播放等，视频加密有好几种，这里我只介绍一种&lt;code&gt;aes&lt;/code&gt;是对称还是非对称加密算法
首先视频被下载到浏览器端需要对其视频流文件解码后进行解析播放等几个步骤，通过aes非对稳加密，哪浏览器端解码需要从服务端获取key
知道这个原理后，再来分析抓包链接，以一个付费视频为准，通过都是经过加密解密后进行播放的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第一步，还是与上面一样，通过 &lt;code&gt;Charles&lt;/code&gt; 对微信抓包获取所有&lt;code&gt;http/https&lt;/code&gt;请求链接地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第二步，找出真实视频链接以及解码序列(token)文件请求，将链接地址导入到idm进行批量下载
&lt;img src=&#34;dl.txt.png&#34; alt=&#34;charles&#34;&gt; &lt;br&gt;
&lt;img src=&#34;find-dl-list.png&#34; alt=&#34;charles&#34;&gt;&lt;br&gt;
&lt;img src=&#34;import_dl_list.png&#34; alt=&#34;charles&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第三步，准备合并前视频解码配置文件及文件合并解密&lt;code&gt;key&lt;/code&gt;
将以下文件
&lt;img src=&#34;ts-token-list.png&#34; alt=&#34;charles&#34;&gt;
编辑成如下文件，需要和视频文件目录保持一致，否则无法解码
&lt;img src=&#34;megre_video.png&#34; alt=&#34;charles&#34;&gt;
&lt;img src=&#34;video_file_rename.png&#34; alt=&#34;charles&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;第四步， 合并视频文件
执行命令如下,如果没有&lt;code&gt;ffmpeg&lt;/code&gt;需要安装,合并视频很关键&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;     ffmpeg -allowed_extensions ALL -i .v.f240.m3u8 -vcodec copy -acodec copy XXX.mp4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行命令运行结果如下显示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;      E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ata&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;ideo&amp;gt;
E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ata&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;ideo&amp;gt;ffmpeg -allowed_extensions ALL -i .v.f240.m3u8 -vcodec copy -acodec copy XXX.mp4
ffmpeg version n4.4-79-gde1132a891-20210806 Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 2000-2021 the FFmpeg developers
  built with gcc 10-win32 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;GCC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20210408&lt;/span&gt;
  configuration: --prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/ffbuild/prefix --pkg-config-flags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;--static --pkg-config&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pkg-config --cross-prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64-w64-mingw32- --arch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64 --target-os&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mingw32 --enable-gpl --enable-version3 --disable-debug --disable-w32threads --enable-pthreads --enable-iconv --enable-libxml2 --enable-zlib --enable-libfreetype --enable-libfribidi --enable-gmp --enable-lzma --enable-fontconfig --enable-libvorbis --enable-opencl --enable-libvmaf --enable-vulkan --disable-libxcb --disable-xlib --enable-amf --enable-libaom --enable-avisynth --enable-libdav1d --enable-libdavs2 --disable-libfdk-aac --enable-ffnvcodec --enable-cuda-llvm --enable-libglslang --enable-libgme --enable-libass --enable-libbluray --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvpx --enable-libwebp --enable-lv2 --enable-libmfx --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librav1e --enable-librubberband --enable-schannel --enable-sdl2 --enable-libsoxr --enable-libsrt --enable-libsvtav1 --enable-libtwolame --enable-libuavs3d --disable-libdrm --disable-vaapi --enable-libvidstab --enable-libx264 --enable-libx265 --enable-libxavs2 --enable-libxvid --enable-libzimg --extra-cflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-DLIBTWOLAME_STATIC --extra-cxxflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; --extra-ldflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-pthread --extra-ldexeflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; --extra-libs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-lgomp --extra-version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20210806&lt;/span&gt;
  libavutil      56. 70.100 / 56. 70.100
  libavcodec     58.134.100 / 58.134.100
  libavformat    58. 76.100 / 58. 76.100
  libavdevice    58. 13.100 / 58. 13.100
  libavfilter     7.110.100 /  7.110.100
  libswscale      5.  9.100 /  5.  9.100
  libswresample   3.  9.100 /  3.  9.100
  libpostproc    55.  9.100 / 55.  9.100
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000253d89e5e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Skip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#EXT-X-VERSION:3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000253d89e5e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://app.keepyoga.com/api/v1/auth/getkeyUrl?edk=CiCI5QNgqqiMSqVR5r%2BVFkWoIxj7JoWMXbHpfCbrwZkDehCO08TAChiaoOvUBCokNTcxYTU2Y2MtYzQ0OC00MmVlLTgwZGMtNDI4MTFjOGQ2ODE3&amp;amp;fileId=387702297598352502&amp;amp;keySource=VodBuildInKMS&amp;amp;token=heBU6MidgGHZ7-WUMP25AJrUE_68dPv40moYZY3XWSw04ubWJ4U-7JcubiYzkqZ853Djsk8Co6huXYBLdUoIRm32maoqpFSMFPQnP19IzYs%3D&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;https @ 00000253d8a01940&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Protocol &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https&amp;#39;&lt;/span&gt; not on whitelist &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file,crypto,data&amp;#39;&lt;/span&gt;!
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000253d89e5e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Unable to open key file https://app.keepyoga.com/api/v1/auth/getkeyUrl?edk&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CiCI5QNgqqiMSqVR5r%2BVFkWoIxj7JoWMXbHpfCbrwZkDehCO08TAChiaoOvUBCokNTcxYTU2Y2MtYzQ0OC00MmVlLTgwZGMtNDI4MTFjOGQ2ODE3&amp;amp;fileId&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;387702297598352502&amp;amp;keySource&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;VodBuildInKMS&amp;amp;token&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;heBU6MidgGHZ7-WUMP25AJrUE_68dPv40moYZY3XWSw04ubWJ4U-7JcubiYzkqZ853Djsk8Co6huXYBLdUoIRm32maoqpFSMFPQnP19IzYs%3D
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000253d89e5e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000253d89e5e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Error when loading first segment &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v.f240.ts&amp;#39;&lt;/span&gt;
.v.f240.m3u8: Invalid data found when processing input

E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ata&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;ideo&amp;gt;ffmpeg -allowed_extensions ALL -i .v.f240.m3u8 -vcodec copy -acodec copy XXX.mp4
ffmpeg version n4.4-79-gde1132a891-20210806 Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 2000-2021 the FFmpeg developers
  built with gcc 10-win32 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;GCC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20210408&lt;/span&gt;
  configuration: --prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/ffbuild/prefix --pkg-config-flags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;--static --pkg-config&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pkg-config --cross-prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64-w64-mingw32- --arch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64 --target-os&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mingw32 --enable-gpl --enable-version3 --disable-debug --disable-w32threads --enable-pthreads --enable-iconv --enable-libxml2 --enable-zlib --enable-libfreetype --enable-libfribidi --enable-gmp --enable-lzma --enable-fontconfig --enable-libvorbis --enable-opencl --enable-libvmaf --enable-vulkan --disable-libxcb --disable-xlib --enable-amf --enable-libaom --enable-avisynth --enable-libdav1d --enable-libdavs2 --disable-libfdk-aac --enable-ffnvcodec --enable-cuda-llvm --enable-libglslang --enable-libgme --enable-libass --enable-libbluray --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvpx --enable-libwebp --enable-lv2 --enable-libmfx --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librav1e --enable-librubberband --enable-schannel --enable-sdl2 --enable-libsoxr --enable-libsrt --enable-libsvtav1 --enable-libtwolame --enable-libuavs3d --disable-libdrm --disable-vaapi --enable-libvidstab --enable-libx264 --enable-libx265 --enable-libxavs2 --enable-libxvid --enable-libzimg --extra-cflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-DLIBTWOLAME_STATIC --extra-cxxflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; --extra-ldflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-pthread --extra-ldexeflags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; --extra-libs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-lgomp --extra-version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20210806&lt;/span&gt;
  libavutil      56. 70.100 / 56. 70.100
  libavcodec     58.134.100 / 58.134.100
  libavformat    58. 76.100 / 58. 76.100
  libavdevice    58. 13.100 / 58. 13.100
  libavfilter     7.110.100 /  7.110.100
  libswscale      5.  9.100 /  5.  9.100
  libswresample   3.  9.100 /  3.  9.100
  libpostproc    55.  9.100 / 55.  9.100
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Skip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#EXT-X-VERSION:3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
Input &lt;span style=&#34;color:#75715e&#34;&gt;#0, hls, from &amp;#39;.v.f240.m3u8&amp;#39;:&lt;/span&gt;
  Duration: 00:02:06.08, start: 1.436889, bitrate: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; kb/s
  Program &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    Metadata:
      variant_bitrate : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:0: Video: h264 (High) ([27][0][0][0] / 0x001B), yuv420p(tv), 1920x1080 [SAR 1:1 DAR 16:9], 24 fps, 24 tbr, 90k tbn, 48 tbc&lt;/span&gt;
    Metadata:
      variant_bitrate : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:1: Audio: aac (LC) ([15][0][0][0] / 0x000F), 44100 Hz, stereo, fltp&lt;/span&gt;
    Metadata:
      variant_bitrate : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
Output &lt;span style=&#34;color:#75715e&#34;&gt;#0, mp4, to &amp;#39;XXX.mp4&amp;#39;:&lt;/span&gt;
  Metadata:
    encoder         : Lavf58.76.100
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:0: Video: h264 (High) (avc1 / 0x31637661), yuv420p(tv), 1920x1080 [SAR 1:1 DAR 16:9], q=2-31, 24 fps, 24 tbr, 90k tbn, 90k tbc&lt;/span&gt;
    Metadata:
      variant_bitrate : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:1: Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, stereo, fltp&lt;/span&gt;
    Metadata:
      variant_bitrate : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
Stream mapping:
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:0 -&amp;gt; #0:0 (copy)&lt;/span&gt;
  Stream &lt;span style=&#34;color:#75715e&#34;&gt;#0:1 -&amp;gt; #0:1 (copy)&lt;/span&gt;
Press &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;q&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; to stop, &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;?&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_2.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; readingte&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;N/A speed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;   0x
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_3.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1382250&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 632968, current: 631736; changing to 632969. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 632969, current: 632760; changing to 632970. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_4.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3399750&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 1093167, current: 1092135; changing to 1093168. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 1093168, current: 1093159; changing to 1093169. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_5.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 7719750&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_6.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_7.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 2290257, current: 2289161; changing to 2290258. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 2290258, current: 2290185; changing to 2290259. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_8.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_9.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 8657250&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_10.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 11469750&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_11.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 4128509, current: 4126661; changing to 4128510. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mp4 @ 00000186a08a0e80&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Non-monotonous DTS in output stream 0:1; previous: 4128510, current: 4127685; changing to 4128511. This may result in incorrect timestamps in the output file.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_12.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 5019750&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_13.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 10532250&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;hls @ 00000186a0885e00&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Opening &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crypto:v.f240_14.ts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; reading
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mpegts @ 00000186a0889180&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Packet corrupt &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0, dts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 2462250&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
frame&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3026&lt;/span&gt; fps&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.0 q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-1.0 Lsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;   39051kB time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;00:02:06.04 bitrate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2538.1kbits/s speed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 320x
video:38238kB audio:743kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.178609%

E:&lt;span style=&#34;color:#ae81ff&#34;&gt;\d&lt;/span&gt;ata&lt;span style=&#34;color:#ae81ff&#34;&gt;\v&lt;/span&gt;ideo&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述运行命令后不报错，就表示将&lt;code&gt;ts&lt;/code&gt;文件合并视频成功，到此下载视频解密成功&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Get Started With Developing Kodi Plugins</title>
      <link>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</link>
      <pubDate>Thu, 16 Jun 2022 20:56:27 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/06/how-to-get-started-with-developing-kodi-plugins/</guid>
      <description>how to get started with developing kodi plugins 开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务 主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力 学习kodi插</description>
      <content>&lt;h1 id=&#34;how-to-get-started-with-developing-kodi-plugins&#34;&gt;how to get started with developing kodi plugins&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;开发kodi插件如何入门，通过学习kodi插件开发，你可以实现自己的想要自动化播放音影服务
主要是实现基于kodi实现开机自动播放影片或者音乐或者iptv等，记忆播放等能力
学习kodi插件开发除了需要一些编程经验外，还需要了解kodi系统插件运行环境，开发环境等
今天特记录一下如何搭建kodi开发环境，
搭建开发环境需要准备以下步骤，以windows 10+ python2.7+ vmware 操作环境为例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1 利用vmware安装libreELEC 系统，libreELEC 就是一个阉割版本的Linux+kodi整合而成
安装libreELEC，首先是去官网下载libreELEC OVA文件&lt;br&gt;
官网：https://libreelec.tv/downloads/generic/&lt;br&gt;
&lt;img src=&#34;libreELEC-OVA.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2 用vmware打开下载好的libreELEC OVA 文件即可运行&lt;br&gt;
&lt;img src=&#34;vmware-open-libreelec-ova.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
启动后，启用ssh 设置ssh密码，启用smb服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3 设置windows10 与 libreELEC 网络互通，并且还要让libreelec 访问外网，vmware需要设置桥接模式 或者 nat网络模式，让libreelec 可以访问网外网，
我这边设置NAT模式，需要知道vmware nat 的ip 范围，一般nat模式，vmware会自动分配一个ip给libreelec的，我这里设置静态，不然ip会变动
影响后面开发&lt;br&gt;
&lt;img src=&#34;kodi-set-static-ip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
4 配置libreELEC 系统文件共享给windows 10访问，ip为libreELEC系统的刚设置的ip&lt;br&gt;
只要下图片窗口能正常打开，即网络能访问通&lt;br&gt;
&lt;img src=&#34;map-drive-ip-sharefile.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
映射windows盘符,这步很重要，不然会影响后面代码开发&lt;br&gt;
&lt;img src=&#34;map-drive-x.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
5 进入libreELEC系统，安装hellworld模块&lt;br&gt;
下载hellworld模块，下载地址如下&lt;br&gt;
&lt;a href=&#34;https://github.com/zag2me/script.hello.world/archive/master.zip&#34;&gt;https://github.com/zag2me/script.hello.world/archive/master.zip&lt;/a&gt;&lt;br&gt;
选择安装从zip 文件 安装插件，安装前提是需要设置安装来源允许 未知来源&lt;code&gt;unkown&lt;/code&gt;安装&lt;br&gt;
&lt;img src=&#34;kodi-install-from-zip.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
6 用命令行工具登录libreELEC系统并进入到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt; 创建&lt;code&gt;project&lt;/code&gt;，移动&lt;code&gt;script.hello.world&lt;/code&gt;插件目录到&lt;code&gt;/storage/.kodi/userdata/&lt;/code&gt;共享目录下
并做好script.hello.world软链接，这一步需要把插件目录移动共享目录让windows10可见能访问，原来的libreELEC插件目录做好软链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;      cd /storage/.kodi/userdata/   
       
      mkdir project 
        
      mv /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project   
      
      ln -sf /storage/.kodi/addons/script.hello.world  /storage/.kodi/userdata/project/script.hello.world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;7 上一步成功后，应该可以用pycharm 打开&lt;code&gt;script.hello.world&lt;/code&gt; 项目了&lt;br&gt;
windows 10 打开可以看到如下结果&lt;br&gt;
&lt;img src=&#34;script.hello.world-project-dir.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;pycharm-open-helloworld.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
8 安装pycharm 插件，该插件用于pycharm python 代码自动提示&lt;br&gt;
&lt;img src=&#34;kodi-pugin-install-pycharm.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
9 修改kodi helloworld插件代码并运行&lt;br&gt;
addon.py为主要执行文件，插件入口文件，&lt;br&gt;
&lt;img src=&#34;helloworld-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-code.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code1.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
再次修改代码，再次运行
&lt;img src=&#34;kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
&lt;img src=&#34;run-kodi-code2.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
日志查看&lt;br&gt;
tail -f  /storage/.kodi/temp/kodi.log &lt;br&gt;
&lt;img src=&#34;tail--f-log.png&#34; alt=&#34;libreELEC&#34;&gt;&lt;br&gt;
xbmc打开窗口，并显示音乐播放列表&lt;br&gt;
xbmc.executebuiltin(&amp;ldquo;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;quot;)&lt;br&gt;
xbmc打印日志&lt;br&gt;
xbmc.log(&amp;ldquo;message&amp;rdquo;,level=xbmc.LOGNOTICE)&lt;br&gt;
参考文档官网&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&#34;&gt;https://kodi.wiki/view/HOW-TO:HelloWorld_addon&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://kodi.wiki/view/Add-on_development&#34;&gt;https://kodi.wiki/view/Add-on_development&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>How to Disk Partition Formatted in Openwrt System</title>
      <link>https://ltan.me/post/2022/03/how-to-disk-partition-formatted-in-openwrt-system/</link>
      <pubDate>Mon, 11 Apr 2022 19:50:44 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/03/how-to-disk-partition-formatted-in-openwrt-system/</guid>
      <description>How to Disk Partition Formatted in Openwrt System and Improve network performance 如何在openwrt系统下给磁盘分区，并且是给固态硬盘分区nvme标识 最近在在淘宝买回一台小主机2.5g 4个网口的 cpu N5105 intel 赛扬,主要帮提升一下网络性能 升级wifi6，升级家庭网络</description>
      <content>&lt;h1 id=&#34;how-to-disk-partition-formatted-in-openwrt-system-and-improve-network-performance&#34;&gt;How to Disk Partition Formatted in Openwrt System and Improve network performance&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;如何在openwrt系统下给磁盘分区，并且是给固态硬盘分区&lt;code&gt;nvme标识&lt;/code&gt;
最近在在淘宝买回一台小主机2.5g 4个网口的 cpu N5105 intel 赛扬,主要帮提升一下网络性能
升级wifi6，升级家庭网络结构，提升局域网络复制文件速度，同时解决了4k视频播放本地播放传输慢卡顿问题
店主省事帮我安装一openwrt x86系统，（不是arm，不是/dev/sda磁盘标识），没有把128G固态磁盘剩余的空间分区并格式化
导致我收到主机后，登录openwrt系统查看不到剩余空间，开始怀疑是否发错错了，不是128G的，还是64G的？？？
询问店主后得知没有分区剩下的磁盘空间，所以需要买家自己行解决，如果不是it出生的用户怎么办，想想也是，不是it人员不用这部分空间也
也无所谓&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;解决分区问题分三步&#34;&gt;解决分区问题，分三步&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1， 检查相关命令，是否有分区命令，没有需要安装，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    opkg install fdisk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果安装好后，使用fdisk -l 命令查看硬盘使用情况，分区情况，以及分区编号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2, 格式化未使用的空间,nvme0n1p1,nvme0n1p2己使用了，创建新分区nvme0n1p3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;   mkfs.ext3 /dev/nvme0n1p3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;3, 挂载分区，使用命令临时挂载，一次性的，需要开机则挂机，则需要添加init.d命令，这里推荐用图形界面挂载比
比较简单,选择UUID,挂载点后点击保存即可
&lt;img src=&#34;openwrt-mount.png&#34; alt=&#34;openwrt mount disk&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是用命令操作分区格式化的过程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@OpenWrt:~# mount /dev/nvme0n1p3 /data/
mount: mounting /dev/nvme0n1p3 on /data/ failed: Invalid argument
root@OpenWrt:~# mount /dev/nvme0n1p3 /data
mount: mounting /dev/nvme0n1p3 on /data failed: Invalid argument
root@OpenWrt:~# mkf
mkfifo     mkfs.ext2  mkfs.ext3  mkfs.ext4  mkfs.f2fs
root@OpenWrt:~# mkf
mkfifo     mkfs.ext2  mkfs.ext3  mkfs.ext4  mkfs.f2fs
root@OpenWrt:~# mkfs.ext
-ash: mkfs.ext: not found
root@OpenWrt:~# mkfs.ext3
Usage: mkfs.ext3 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-c|-l filename&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-b block-size&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-C cluster-size&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-i bytes-per-inode&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-I inode-size&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-J journal-options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-G flex-group-size&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-N number-of-inodes&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-d root-directory&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-m reserved-blocks-percentage&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-o creator-os&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-g blocks-per-group&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-L volume-label&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-M last-mounted-directory&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-O feature&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,...&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-r fs-revision&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-E extended-option&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,...&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t fs-type&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-T usage-type &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-U UUID&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-e errors_behavior&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;-z undo_file&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-jnqvDFSV&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; device &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;blocks-count&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
root@OpenWrt:~# mkfs.ext3 /dev/n
net/         nvme0        nvme0n1p1    nvme0n1p2    nvram
null         nvme0n1      nvme0n1p128  nvme0n1p3
root@OpenWrt:~# mkfs.ext3 /dev/n
net/         nvme0        nvme0n1p1    nvme0n1p2    nvram
null         nvme0n1      nvme0n1p128  nvme0n1p3
root@OpenWrt:~# mkfs.ext3 /dev/nvme0103
mke2fs 1.45.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20-Mar-2020&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
The file /dev/nvme0103 does not exist and no size was specified.
root@OpenWrt:~# mkfs.ext3 /dev/nvme01p3
mke2fs 1.45.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20-Mar-2020&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
The file /dev/nvme01p3 does not exist and no size was specified.
root@OpenWrt:~# fdisk  -l
Disk /dev/loop0: 83.56 MiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;87621632&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;171136&lt;/span&gt; sectors
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes


Disk /dev/nvme0n1: 119.24 GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;128035676160&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;250069680&lt;/span&gt; sectors
Disk model: SK 128GB
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Disklabel type: gpt
Disk identifier: 45D81ACA-A5B5-7CD0-2928-787DCE37BA00

Device            Start       End   Sectors   Size Type
/dev/nvme0n1p1      &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;33279&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;32768&lt;/span&gt;    16M Linux filesystem
/dev/nvme0n1p2    &lt;span style=&#34;color:#ae81ff&#34;&gt;33280&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;360959&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;327680&lt;/span&gt;   160M Linux filesystem
/dev/nvme0n1p3   &lt;span style=&#34;color:#ae81ff&#34;&gt;362496&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;250069646&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;249707151&lt;/span&gt; 119.1G Linux filesystem
/dev/nvme0n1p128     &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;511&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;478&lt;/span&gt;   239K BIOS boot

Partition table entries are not in disk order.
root@OpenWrt:~# mount -l
mount: unrecognized option: l
BusyBox v1.33.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2022-01-04 15:52:49 UTC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; multi-call binary.

Usage: mount &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-o OPT&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; DEVICE NODE

Mount a filesystem. Filesystem autodetection requires /proc.

        -a              Mount all filesystems in fstab
        -i              Don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t run mount helper
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -r              Read-only mount
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -t FSTYPE[,...] Filesystem type(s)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        -O OPT          Mount only filesystems with option OPT (-a only)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-o OPT:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        loop            Ignored (loop devices are autodetected)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [a]sync         Writes are [a]synchronous
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]atime       Disable/enable updates to inode access times
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]diratime    Disable/enable atime updates to directories
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]relatime    Disable/enable atime updates relative to modification time
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]dev         (Dis)allow use of special device files
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]exec        (Dis)allow use of executable files
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [no]suid        (Dis)allow set-user-id-root programs
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [r]shared       Convert [recursively] to a shared subtree
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [r]slave        Convert [recursively] to a slave subtree
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [r]private      Convert [recursively] to a private subtree
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [un]bindable    Make mount point [un]able to be bind mounted
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        [r]bind         Bind a file or directory [recursively] to another location
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        move            Relocate an existing mount point
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        remount         Remount a mounted filesystem, changing flags
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ro              Same as -r
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;There are filesystem-specific -o flags.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~# mount
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/root on /rom type squashfs (ro,relatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;cgroup2 on /sys/fs/cgroup type cgroup2 (rw,nosuid,nodev,noexec,relatime,nsdelegate)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/loop0 on /overlay type ext4 (rw,noatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;overlayfs:/overlay on / type overlay (rw,noatime,lowerdir=/,upperdir=/overlay/upper,workdir=/overlay/work)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1 on /boot type vfat (rw,noatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1 on /boot type vfat (rw,noatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs on /dev type tmpfs (rw,nosuid,relatime,size=512k,mode=755)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,mode=600,ptmxmode=000)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;debugfs on /sys/kernel/debug type debugfs (rw,noatime)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;none on /sys/fs/bpf type bpf (rw,nosuid,nodev,noexec,noatime,mode=700)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~# df -h
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem                Size      Used Available Use% Mounted on
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/root                77.0M     77.0M         0 100% /rom
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                     3.8G      6.8M      3.8G   0% /tmp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/loop0               76.9M      3.1M     68.0M   4% /overlay
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;overlayfs:/overlay       76.9M      3.1M     68.0M   4% /
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1           16.0M      5.7M     10.2M  36% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1           16.0M      5.7M     10.2M  36% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                   512.0K         0    512.0K   0% /dev
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~# mkfs.ext3 /dev/nvme0n1p3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;mke2fs 1.45.6 (20-Mar-2020)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Discarding device blocks: done
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Creating filesystem with 31213393 4k blocks and 7806976 inodes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem UUID: ffebbab2-ad4b-48f9-9551-fef3b35abbdf
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Superblock backups stored on blocks:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        4096000, 7962624, 11239424, 20480000, 23887872
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Allocating group tables: done
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Writing inode tables: done
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Creating journal (131072 blocks):
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;done
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Writing superblocks and filesystem accounting information: done
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~#
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~# mount /dev/nvme0n1p3 /data
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;root@OpenWrt:~# df -h
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem                Size      Used Available Use% Mounted on
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/root                77.0M     77.0M         0 100% /rom
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                     3.8G      7.0M      3.8G   0% /tmp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/loop0               76.9M      3.1M     68.0M   4% /overlay
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;overlayfs:/overlay       76.9M      3.1M     68.0M   4% /
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1           16.0M      5.7M     10.2M  36% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p1           16.0M      5.7M     10.2M  36% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                   512.0K         0    512.0K   0% /dev
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/nvme0n1p3          116.7G     60.1M    110.7G   0% /data
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#====================================================================
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:29:18]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:29:18]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ fdisk -l
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Disk /dev/loop0: 749.88 MiB, 786300928 bytes, 1535744 sectors
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Units: sectors of 1 * 512 = 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Sector size (logical/physical): 512 bytes / 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GPT PMBR size mismatch (2236959 != 180355071) will be corrected by write.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The backup GPT table is corrupt, but the primary appears OK, so that will be used.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The backup GPT table is not on the end of the device.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Disk /dev/sda: 86 GiB, 92341796864 bytes, 180355072 sectors
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Disk model: Virtual Disk
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Units: sectors of 1 * 512 = 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Sector size (logical/physical): 512 bytes / 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Disklabel type: gpt
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Disk identifier: 9EF097BB-CC70-D6F6-8AC0-303F2DC1E300
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Device       Start     End Sectors  Size Type
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/sda1      512  131583  131072   64M Linux filesystem
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/sda2   131584 2236927 2105344    1G Linux filesystem
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/sda128     34     511     478  239K BIOS boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Partition table entries are not in disk order.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:29:24]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ df -h
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Filesystem                Size      Used Available Use% Mounted on
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/root               279.0M    279.0M         0 100% /rom
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                     1.9G     13.7M      1.9G   1% /tmp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/sda1                63.9M      5.7M     58.2M   9% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/dev/sda1                63.9M      5.7M     58.2M   9% /boot
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tmpfs                   512.0K         0    512.0K   0% /dev
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;cgroup                    1.9G         0      1.9G   0% /sys/fs/cgroup
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:29:59]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ fd
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;zsh: command not found: fd
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:30:49] C:127
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  1 EFI System                     C12A7328-F81F-11D2-BA4B-00A0C93EC93B
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  2 MBR partition scheme           024DEE41-33E7-11D3-9D69-0008C781F39F
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  3 Intel Fast Flash               D3BFE2DE-3DAF-11DF-BA40-E3A556D89593
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  4 BIOS boot                      21686148-6449-6E6F-744E-656564454649
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  5 Sony boot partition            F4019732-066E-4E12-8273-346C5641494F
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  6 Lenovo boot partition          BFBFAFE7-A34F-448A-9A5B-6213EB736C22
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  7 PowerPC PReP boot              9E1A2D38-C612-4316-AA26-8B49521E5A8B
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  8 ONIE boot                      7412F7D5-A156-4B13-81DC-867174929325
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  9 ONIE config                    D4E6E2CD-4469-46F3-B5CB-1BFF57AFC149
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 10 Microsoft reserved             E3C9E316-0B5C-4DB8-817D-F92DF00215AE
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 11 Microsoft basic data           EBD0A0A2-B9E5-4433-87C0-68B6B72699C7
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 12 Microsoft LDM metadata         5808C8AA-7E8F-42E0-85D2-E1E90434CFB3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 13 Microsoft LDM data             AF9B60A0-1431-4F62-BC68-3311714A69AD
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 14 Windows recovery environment   DE94BBA4-06D1-4D40-A16A-BFD50179D6AC
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 15 IBM General Parallel Fs        37AFFC90-EF7D-4E96-91C3-2D7AE055B174
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 16 Microsoft Storage Spaces       E75CAF8F-F680-4CEE-AFA3-B001E56EFC2D
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 17 HP-UX data                     75894C1E-3AEB-11D3-B7C1-7B03A0000000
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 18 HP-UX service                  E2A1E728-32E3-11D6-A682-7B03A0000000
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 19 Linux swap                     0657FD6D-A4AB-43C4-84E5-0933C84B4F4F
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 20 Linux filesystem               0FC63DAF-8483-4772-8E79-3D69D8477DE4
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 21 Linux server data              3B8F8425-20E0-4F3B-907F-1A25A76F98E8
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 22 Linux root (x86)               44479540-F297-41B2-9AF7-D131D5F0458A
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 23 Linux root (x86-64)            4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 24 Linux root (ARM)               69DAD710-2CE4-4E3C-B16C-21A1D49ABED3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 25 Linux root (ARM-64)            B921B045-1DF0-41C3-AF44-4C6F280D3FAE
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 26 Linux root (IA-64)             993D8D3D-F80E-4225-855A-9DAF8ED7EA97
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 27 Linux reserved                 8DA63339-0007-60C0-C436-083AC8230908
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Command (m for help): m
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Help:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  GPT
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   M   enter protective/hybrid MBR
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Generic
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   d   delete a partition
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   F   list free unpartitioned space
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   l   list known partition types
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   n   add a new partition
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   p   print the partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   t   change a partition type
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   v   verify the partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   i   print information about a partition
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Misc
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   m   print this menu
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   x   extra functionality (experts only)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Script
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   I   load disk layout from sfdisk script file
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   O   dump disk layout to sfdisk script file
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Save &amp;amp; Exit
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   w   write table to disk and exit
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   q   quit without saving changes
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Create a new label
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   g   create a new empty GPT partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   G   create a new empty SGI (IRIX) partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   o   create a new empty DOS partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   s   create a new empty Sun partition table
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Command (m for help): c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;c: unknown command
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Command (m for help): g
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Created a new GPT disklabel (GUID: A5806F78-F456-C34C-B92D-AE3357E8FC1B).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Command (m for help):
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Command (m for help): q
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# root @ FusionWrt in ~ [21:34:57]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$ fdisk /dev/sda
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Welcome to fdisk (util-linux 2.37.3).
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Changes will remain in memory only, until you decide to write them.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Be careful before using the write command.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GPT PMBR size mismatch (2236959 != 180355071) will be corrected by write.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The backup GPT table is corrupt, but the primary appears OK, so that will be used.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The backup GPT table is not on the end of the device. This problem will be corrected by write.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;This disk is currently in use - repartitioning is probably a bad idea.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;It&amp;#39;&lt;/span&gt;s recommended to umount all file systems, and swapoff all swap
partitions on this disk.


Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: c
c: unknown command

Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: m

Help:

  GPT
   M   enter protective/hybrid MBR

  Generic
   d   delete a partition
   F   list free unpartitioned space
   l   list known partition types
   n   add a new partition
   p   print the partition table
   t   change a partition type
   v   verify the partition table
   i   print information about a partition

  Misc
   m   print this menu
   x   extra functionality &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;experts only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

  Script
   I   load disk layout from sfdisk script file
   O   dump disk layout to sfdisk script file

  Save &amp;amp; Exit
   w   write table to disk and exit
   q   quit without saving changes

  Create a new label
   g   create a new empty GPT partition table
   G   create a new empty SGI &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IRIX&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; partition table
   o   create a new empty DOS partition table
   s   create a new empty Sun partition table


Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: p

Disk /dev/sda: &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt; GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;92341796864&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;180355072&lt;/span&gt; sectors
Disk model: Virtual Disk
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Disklabel type: gpt
Disk identifier: 9EF097BB-CC70-D6F6-8AC0-303F2DC1E300

Device       Start     End Sectors  Size Type
/dev/sda1      &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;131583&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;131072&lt;/span&gt;   64M Linux filesystem
/dev/sda2   &lt;span style=&#34;color:#ae81ff&#34;&gt;131584&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2236927&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2105344&lt;/span&gt;    1G Linux filesystem
/dev/sda128     &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;511&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;478&lt;/span&gt;  239K BIOS boot

Partition table entries are not in disk order.

Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: m

Help:

  GPT
   M   enter protective/hybrid MBR

  Generic
   d   delete a partition
   F   list free unpartitioned space
   l   list known partition types
   n   add a new partition
   p   print the partition table
   t   change a partition type
   v   verify the partition table
   i   print information about a partition

  Misc
   m   print this menu
   x   extra functionality &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;experts only&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

  Script
   I   load disk layout from sfdisk script file
   O   dump disk layout to sfdisk script file

  Save &amp;amp; Exit
   w   write table to disk and exit
   q   quit without saving changes

  Create a new label
   g   create a new empty GPT partition table
   G   create a new empty SGI &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IRIX&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; partition table
   o   create a new empty DOS partition table
   s   create a new empty Sun partition table


Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: f
f: unknown command

Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: F

Unpartitioned space /dev/sda: 84.93 GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;91195686400&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;178116575&lt;/span&gt; sectors
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes

  Start       End   Sectors  Size
&lt;span style=&#34;color:#ae81ff&#34;&gt;2238464&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180355038&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;178116575&lt;/span&gt; 84.9G

Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: n
Partition number &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3-127, default 3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
First sector &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2236928-180355038, default 2238464&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
Last sector, +/-sectors or +/-size&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;K,M,G,T,P&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2238464-180355038, default 180355038&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:

Created a new partition &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; of type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Linux filesystem&amp;#39;&lt;/span&gt; and of size 84.9 GiB.

Command &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: w
The partition table has been altered.
Syncing disks.


&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:36:40]&lt;/span&gt;
$ fdisk -l
Disk /dev/loop0: 749.88 MiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;786300928&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;1535744&lt;/span&gt; sectors
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes


Disk /dev/sda: &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt; GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;92341796864&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;180355072&lt;/span&gt; sectors
Disk model: Virtual Disk
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Disklabel type: gpt
Disk identifier: 9EF097BB-CC70-D6F6-8AC0-303F2DC1E300

Device        Start       End   Sectors  Size Type
/dev/sda1       &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131583&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131072&lt;/span&gt;   64M Linux filesystem
/dev/sda2    &lt;span style=&#34;color:#ae81ff&#34;&gt;131584&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2236927&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2105344&lt;/span&gt;    1G Linux filesystem
/dev/sda3   &lt;span style=&#34;color:#ae81ff&#34;&gt;2238464&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180355038&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;178116575&lt;/span&gt; 84.9G Linux filesystem
/dev/sda128      &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;511&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;478&lt;/span&gt;  239K BIOS boot

Partition table entries are not in disk order.

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:36:45]&lt;/span&gt;
$ mkfs.ext3 /dev/sda3
mke2fs 1.46.5 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;30-Dec-2021&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Discarding device blocks: &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
Creating filesystem with &lt;span style=&#34;color:#ae81ff&#34;&gt;22264571&lt;/span&gt; 4k blocks and &lt;span style=&#34;color:#ae81ff&#34;&gt;5570560&lt;/span&gt; inodes
Filesystem UUID: d12bdb7a-f91f-4cdd-aab3-f6391845ca0b
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000, 7962624, 11239424, &lt;span style=&#34;color:#ae81ff&#34;&gt;20480000&lt;/span&gt;

Allocating group tables: &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
Writing inode tables: &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
Creating journal &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;131072&lt;/span&gt; blocks&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
Writing superblocks and filesystem accounting information:
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:37:06]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:37:06]&lt;/span&gt;
$ df -h
Filesystem                Size      Used Available Use% Mounted on
/dev/root               279.0M    279.0M         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 100% /rom
tmpfs                     1.9G     13.7M      1.9G   1% /tmp
/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
tmpfs                   512.0K         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    512.0K   0% /dev
cgroup                    1.9G         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      1.9G   0% /sys/fs/cgroup
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:37:09]&lt;/span&gt;
$ df -h
Filesystem                Size      Used Available Use% Mounted on
/dev/root               279.0M    279.0M         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 100% /rom
tmpfs                     1.9G     13.7M      1.9G   1% /tmp
/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
tmpfs                   512.0K         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    512.0K   0% /dev
cgroup                    1.9G         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      1.9G   0% /sys/fs/cgroup
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:37:18]&lt;/span&gt;
$ fdisk -l
Disk /dev/loop0: 749.88 MiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;786300928&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;1535744&lt;/span&gt; sectors
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes


Disk /dev/sda: &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt; GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;92341796864&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;180355072&lt;/span&gt; sectors
Disk model: Virtual Disk
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Disklabel type: gpt
Disk identifier: 9EF097BB-CC70-D6F6-8AC0-303F2DC1E300

Device        Start       End   Sectors  Size Type
/dev/sda1       &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131583&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131072&lt;/span&gt;   64M Linux filesystem
/dev/sda2    &lt;span style=&#34;color:#ae81ff&#34;&gt;131584&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2236927&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2105344&lt;/span&gt;    1G Linux filesystem
/dev/sda3   &lt;span style=&#34;color:#ae81ff&#34;&gt;2238464&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180355038&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;178116575&lt;/span&gt; 84.9G Linux filesystem
/dev/sda128      &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;511&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;478&lt;/span&gt;  239K BIOS boot

Partition table entries are not in disk order.

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:37:21]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:38:44]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:38:44]&lt;/span&gt;
$ cd /data
cd: no such file or directory: /data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:38:48] C:1&lt;/span&gt;
$ pwd
/root

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:38:50]&lt;/span&gt;
$ ls -/ /data
ls: unrecognized option: /
BusyBox v1.35.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2022-02-27 05:31:25 UTC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; multi-call binary.

Usage: ls &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1AaCxdLHRFplinshrSXvctu&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-w WIDTH&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FILE&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;...

List directory contents

        -1      One column output
        -a      Include names starting with .
        -A      Like -a, but exclude . and ..
        -x      List by lines
        -d      List directory names, not contents
        -L      Follow symlinks
        -H      Follow symlinks on command line
        -R      Recurse
        -p      Append / to directory names
        -F      Append indicator &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;one of */&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;@|&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; to names
        -l      Long format
        -i      List inode numbers
        -n      List numeric UIDs and GIDs instead of names
        -s      List allocated blocks
        -lc     List ctime
        -lu     List atime
        --full-time     List full date/time
        -h      Human readable sizes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1K 243M 2G&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        --group-directories-first
        -S      Sort by size
        -X      Sort by extension
        -v      Sort by version
        -t      Sort by mtime
        -tc     Sort by ctime
        -tu     Sort by atime
        -r      Reverse sort order
        -w N    Format N columns wide
        --color&lt;span style=&#34;color:#f92672&#34;&gt;[={&lt;/span&gt;always,never,auto&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:38:54] C:1&lt;/span&gt;
$ mkdir /data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in ~ [21:39:02]&lt;/span&gt;
$ cd /

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:39:06]&lt;/span&gt;
$ du -h -d &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
1.6M    ./bin
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       ./dev
16.3M   ./etc
49.4M   ./lib
10.5K   ./mnt
330.5K  ./opt
2.9M    ./overlay
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       ./proc
885.0M  ./rom
6.4M    ./root
1.4M    ./sbin
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;       ./sys
13.7M   ./tmp
737.2M  ./usr
72.0M   ./www
5.1M    ./boot
7.0K    ./home
18.5K   ./run
3.5K    ./data
1.7G    .

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:39:11]&lt;/span&gt;
$ df -h
Filesystem                Size      Used Available Use% Mounted on
/dev/root               279.0M    279.0M         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 100% /rom
tmpfs                     1.9G     13.7M      1.9G   1% /tmp
/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
tmpfs                   512.0K         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    512.0K   0% /dev
cgroup                    1.9G         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      1.9G   0% /sys/fs/cgroup
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:39:15]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:41:20]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:41:20]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in / [21:41:20]&lt;/span&gt;
$ cd /data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:23]&lt;/span&gt;
$ ls

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:24]&lt;/span&gt;
$ pwd
/data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:27]&lt;/span&gt;
$ du -h -d 1-h
du: invalid number &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1-h&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:31] C:1&lt;/span&gt;
$ du -h
3.5K    .

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:33]&lt;/span&gt;
$ df -h
Filesystem                Size      Used Available Use% Mounted on
/dev/root               279.0M    279.0M         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 100% /rom
tmpfs                     1.9G     13.7M      1.9G   1% /tmp
/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
tmpfs                   512.0K         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    512.0K   0% /dev
cgroup                    1.9G         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      1.9G   0% /sys/fs/cgroup
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:39]&lt;/span&gt;
$ fdisk -l
Disk /dev/loop0: 749.88 MiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;786300928&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;1535744&lt;/span&gt; sectors
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes


Disk /dev/sda: &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt; GiB, &lt;span style=&#34;color:#ae81ff&#34;&gt;92341796864&lt;/span&gt; bytes, &lt;span style=&#34;color:#ae81ff&#34;&gt;180355072&lt;/span&gt; sectors
Disk model: Virtual Disk
Units: sectors of &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; * 512 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Sector size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;logical/physical&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
I/O size &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minimum/optimal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes / &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt; bytes
Disklabel type: gpt
Disk identifier: 9EF097BB-CC70-D6F6-8AC0-303F2DC1E300

Device        Start       End   Sectors  Size Type
/dev/sda1       &lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131583&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;131072&lt;/span&gt;   64M Linux filesystem
/dev/sda2    &lt;span style=&#34;color:#ae81ff&#34;&gt;131584&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2236927&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2105344&lt;/span&gt;    1G Linux filesystem
/dev/sda3   &lt;span style=&#34;color:#ae81ff&#34;&gt;2238464&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180355038&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;178116575&lt;/span&gt; 84.9G Linux filesystem
/dev/sda128      &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;511&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;478&lt;/span&gt;  239K BIOS boot

Partition table entries are not in disk order.

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:41:54]&lt;/span&gt;
$ mount /dev/sda3 /data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:42:12]&lt;/span&gt;
$

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:42:15]&lt;/span&gt;
$ df -h
Filesystem                Size      Used Available Use% Mounted on
/dev/root               279.0M    279.0M         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 100% /rom
tmpfs                     1.9G     13.7M      1.9G   1% /tmp
/dev/loop0              747.9M    135.6M    612.3M  18% /overlay
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
/dev/sda1                63.9M      5.7M     58.2M   9% /boot
tmpfs                   512.0K         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    512.0K   0% /dev
cgroup                    1.9G         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      1.9G   0% /sys/fs/cgroup
overlayfs:/overlay      747.9M    135.6M    612.3M  18% /opt/docker
/dev/sda3                83.0G    540.0K     78.8G   0% /data

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:42:19]&lt;/span&gt;
$ cat /etc/fstab
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# root @ FusionWrt in /data [21:42:47]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;升级网线买的号称万兆网线有点小贵看材质就不一样&#34;&gt;升级网线，买的号称万兆网线，有点小贵，看材质就不一样&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;netline.png&#34; alt=&#34;netline&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;浏览器pc有线测速家里宽带安装的移动300mbs&#34;&gt;浏览器pc有线测速，家里宽带安装的移动300Mbs&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;spedtestbrower.png&#34; alt=&#34;netline&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;手机wifi测速&#34;&gt;手机wifi测速&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;speedtestcn.jpg&#34; alt=&#34;netline&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;主路由器主要提供拨号各种插件安装&#34;&gt;主路由器，主要提供拨号，各种插件安装&lt;/h1&gt;
&lt;p&gt;N5105 4个网口 2.5g&lt;/p&gt;
&lt;h1 id=&#34;wifi-ap路由器主要提供wifi移动设备连接&#34;&gt;wifi ap路由器，主要提供wifi移动设备连接&lt;/h1&gt;
&lt;p&gt;AX6000 wifi6&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Phpmyadmin Docker Install</title>
      <link>https://ltan.me/post/2022/03/phpmyadmin-docker-install/</link>
      <pubDate>Mon, 28 Mar 2022 18:14:36 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/03/phpmyadmin-docker-install/</guid>
      <description>phpmyadmin runs in the docker environment 快速部署phpmyadmin mysql客户端管理工具，用于开发环境调用，测试用途，开源助免费 如果只是简单查询修改数据，推荐此工具 phpmyadmin mysql web管理工具 安装docker 环境后，直接运行以下命令，</description>
      <content>&lt;h1 id=&#34;phpmyadmin-runs-in-the-docker-environment&#34;&gt;phpmyadmin runs in the docker environment&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;快速部署phpmyadmin mysql客户端管理工具，用于开发环境调用，测试用途，开源助免费&lt;br&gt;
如果只是简单查询修改数据，推荐此工具 phpmyadmin mysql web管理工具&lt;br&gt;
安装docker 环境后，直接运行以下命令，高级功能请查询官方文档&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;命令&#34;&gt;命令&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-jshelllanguage&#34; data-lang=&#34;jshelllanguage&#34;&gt;#下载容器
docker pull phpmyadmin/phpmyadmin
#运行容器，PMA_ARBITRARY=1表示可以连接任意mysql数据库服务器
docker run --name myadmin -d -e PMA_ARBITRARY=1   -p 8081:80  phpmyadmin/phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;##运行结果如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果遇到登录不上的，请检查你的mysql端口和用户名，密码&lt;br&gt;
需要填写mysql username or password&lt;br&gt;
&lt;img src=&#34;phpmyadmin-docker-use-login.png&#34; alt=&#34;phpmyadmin-use&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Classpath Resource Not Found When Running as Jar</title>
      <link>https://ltan.me/post/2022/03/classpath-resource-not-found-when-running-as-jar/</link>
      <pubDate>Tue, 08 Mar 2022 09:45:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/03/classpath-resource-not-found-when-running-as-jar/</guid>
      <description>读取jar包resources目录下的groovy脚本并调用 工作需要，需要采集不同的日志项，每个日志项的参数不一样，判断验证需要根据业务需求判断 所以采用生成groovy脚本形式来解决动态校验以及入库规</description>
      <content>&lt;h1 id=&#34;读取jar包resources目录下的groovy脚本并调用&#34;&gt;读取jar包resources目录下的groovy脚本并调用&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;工作需要，需要采集不同的日志项，每个日志项的参数不一样，判断验证需要根据业务需求判断
所以采用生成groovy脚本形式来解决动态校验以及入库规则
项目初期设计不复杂，功能简单，直接按日志项名称编写groovy脚本规则,比如wifi日志，则规则文件名为wifi.groovy
当日志的http接口请求到wifi名称，则加载wifi.groovy规则文件并解析判断，包括入库，kafka队列等
groovy文件放在resources/logTemplate文件夹下，遇到在jar包模式运行不能读到文件的问题
而在idea能直接运行
java -jar xxx.jar 运行报错如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; Caused by&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; java&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; URI is not hierarchical
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;解决方法通过jar包运行时不能以文件形式读取jar包里的内容参考google方法整理有如下几种方法解决&#34;&gt;解决方法，通过jar包运行时，不能以文件形式读取jar包里的内容，参考google方法整理有如下几种方法解决&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;第一种方法 Using IOUtils.toString (Apache Utils)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;String result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IOUtils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; StandardCharsets&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第二种方法 Using CharStreams (Guava)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; String result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CharStreams&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
       inputStream&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Charsets&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第三种方法 Using Scanner (JDK)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; Scanner s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Scanner&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;useDelimiter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 String result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasNext&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第四种方法 Using Stream API (Java 8). Warning: This solution converts different line breaks (like \r\n) to \n.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; String result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lines&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;collect&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Collectors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;joining&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第五种方法 Using parallel Stream API (Java 8). Warning: This solution converts different line breaks (like \r\n) to \n.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; String result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lines&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;parallel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;collect&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Collectors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;joining&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第六种方法 Using InputStreamReader and StringBuilder (JDK)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; bufferSize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1024&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; buffer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;bufferSize&lt;span style=&#34;color:#f92672&#34;&gt;];&lt;/span&gt;
 StringBuilder out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; StringBuilder&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
 Reader in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stream&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; StandardCharsets&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;UTF_8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; numRead&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;numRead &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; in&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; buffer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
     out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; numRead&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第七种方法 Using StringWriter and IOUtils.copy (Apache Commons)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; StringWriter writer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; StringWriter&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
 IOUtils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;copy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; writer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; writer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第八种方法 Using ByteArrayOutputStream and inputStream.read (JDK)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; ByteArrayOutputStream result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ByteArrayOutputStream&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; buffer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1024&lt;span style=&#34;color:#f92672&#34;&gt;];&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; length&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;length &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inputStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
     result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;buffer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; length&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
 &lt;span style=&#34;color:#75715e&#34;&gt;// StandardCharsets.UTF_8.name() &amp;gt; JDK 7
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第九种方法 Using ByteArrayOutputStream and inputStream.read (JDK)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt; String newLine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;line.separator&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 BufferedReader reader &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
         &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InputStreamReader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
 StringBuilder result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; StringBuilder&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String line&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readLine&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
         result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;newLine&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
     &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
     result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;line&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
 &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第十种方法 Using BufferedInputStream and ByteArrayOutputStream (JDK)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;BufferedInputStream bis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; BufferedInputStream&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;inputStream&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
ByteArrayOutputStream buf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ByteArrayOutputStream&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    buf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// StandardCharsets.UTF_8.name() &amp;gt; JDK 7
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; buf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;第十一种方法 Using inputStream.read() and StringBuilder (JDK). Warning: This solution has problems with Unicode, for example with Russian text (works correctly only with non-Unicode text)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;StringBuilder sb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; StringBuilder&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ch&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inputStream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    sb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ch&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; sb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;根据场景需求我最终选择第四种方法来解决读取jar包里的文件内容
本文来自：https://stackoverflow.com/questions/309424/how-do-i-read-convert-an-inputstream-into-a-string-in-java&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Pycharm Terminal Virtualenv Setting</title>
      <link>https://ltan.me/post/2022/02/pycharm-terminal-virtualenv-setting/</link>
      <pubDate>Thu, 17 Feb 2022 20:25:31 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/02/pycharm-terminal-virtualenv-setting/</guid>
      <description>windows 环境pycharm python 多环境开发设置 在python项目开发中，很多情况每个项目采用不同的python 环境，一般常见的系统默认python 版本为 python 2.7但如果又不想破坏系统原来的python 环境，则可以</description>
      <content>&lt;h1 id=&#34;windows-环境pycharm-python-多环境开发设置&#34;&gt;windows 环境pycharm python 多环境开发设置&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在python项目开发中，很多情况每个项目采用不同的python 环境，一般常见的系统默认python 版本为
python 2.7但如果又不想破坏系统原来的python 环境，则可以安装virualenv 依赖解决多版本的问题
virtualen 采用pip install 安装，不管是采用python3版本的pip,还是 python2版本的pip都可以安
装这个依赖，pycharm 具体设置如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The preferences in Settings (Preferences) | Tools | Terminal are global.
If you use a venv for each project, remember to use current path variable and a default venv name:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创建activate.bat文件复制如下代码,并修改自己创建的虚拟环境目录，这里我创建的虚拟环境目录为&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cmd.exe&amp;#34;&lt;/span&gt; /k &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; D:\python-env\python3\envname\Scripts\activate&amp;#34;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;/k 的含义是自动执行后面的命令,并且执行完毕后保留窗口&lt;br&gt;
For Windows users: when using PyCharm with a virtual environment, you can use the /K parameter to cmd.exe to set the virtual environment automatically.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyCharm 3 or 4: Settings, Terminal, Default shell and add /K &amp;lt;path-to-your-activate.bat&amp;gt;.&lt;/p&gt;
&lt;p&gt;PyCharm 5: Settings, Tools, Terminal, and add /K &amp;lt;path-to-your-activate.bat&amp;gt; to Shell path.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开pychrm，依次点击file菜单，settings&amp;ndash;&amp;gt;tools&amp;mdash;&amp;gt;terminal&amp;ndash;&amp;gt;shell path&lt;br&gt;
PyCharm 2016.1,2018.x&amp;hellip;: Settings, Tools, Terminal, and add &amp;ldquo;&amp;quot;/K &amp;lt;path-to-your-activate.bat&amp;gt;&amp;rdquo;&amp;quot; to Shell path and add (mind the quotes). Also add quotes around cmd.exe, resulting in:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;pycharm-env.jpg&#34; alt=&#34;pycharm-env&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设置pycharm Terminal窗口启动时进入Anaconda3环境&lt;br&gt;
在&amp;quot;设置&amp;quot;&amp;gt;&amp;ldquo;终端工具&amp;rdquo;&amp;gt;，更改如下内容：Shell path&lt;br&gt;
C:\Users\me\Miniconda3\Scripts\activate.bat 为安装C:\Users\me\Miniconda3的目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-$xslt&#34; data-lang=&#34;$xslt&#34;&gt;cmd.exe  &amp;quot;/K&amp;quot;  &amp;quot;C:\Users\me\Miniconda3\Scripts\activate.bat&amp;quot;  &amp;quot;C:\Users\me\Miniconda3&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;遇到pip install 模块 下载不了的情况，请设置国产镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-$xslt&#34; data-lang=&#34;$xslt&#34;&gt;https://pypi.douban.com/simple
https://mirrors.aliyun.com/pypi/simple
https://pypi.mirrors.ustc.edu.cn/simple
https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>A True SSLContext Object Is Not Available</title>
      <link>https://ltan.me/post/2022/02/a-true-sslcontext-object-is-not-available/</link>
      <pubDate>Thu, 17 Feb 2022 19:46:19 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/02/a-true-sslcontext-object-is-not-available/</guid>
      <description>windows 下pyhon2.7环境pip install 模块报错A true SSLContext object is not available 因为python版本2.7太低，涉及ssl不兼容，需要升级到最新版本的python2.7 具体错误代码如下： SNIMissingWarning d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre vents urllib3 from configuring SSL appropriately and may</description>
      <content>&lt;h1 id=&#34;windows-下pyhon27环境pip-install-模块报错a-true-sslcontext-object-is-not-available&#34;&gt;windows 下pyhon2.7环境pip install 模块报错A true SSLContext object is not available&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;因为python版本2.7太低，涉及ssl不兼容，需要升级到最新版本的python2.7&lt;br&gt;
具体错误代码如下：&lt;br&gt;
SNIMissingWarning
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ReadTimeoutError(&amp;ldquo;HTTPSConnectionPo
ol(host=&amp;lsquo;pypi.org&amp;rsquo;, port=443): Read timed out. (read timeout=15)&amp;rdquo;,)&#39;: /simple/ndg-httpsclient/
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ReadTimeoutError(&amp;ldquo;HTTPSConnectionPo
ol(host=&amp;lsquo;pypi.org&amp;rsquo;, port=443): Read timed out. (read timeout=15)&amp;rdquo;,)&#39;: /simple/ndg-httpsclient/
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ReadTimeoutError(&amp;ldquo;HTTPSConnectionPo
ol(host=&amp;lsquo;pypi.org&amp;rsquo;, port=443): Read timed out. (read timeout=15)&amp;rdquo;,)&#39;: /simple/ndg-httpsclient/
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ReadTimeoutError(&amp;ldquo;HTTPSConnectionPo
ol(host=&amp;lsquo;pypi.org&amp;rsquo;, port=443): Read timed out. (read timeout=15)&amp;rdquo;,)&#39;: /simple/ndg-httpsclient/
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ReadTimeoutError(&amp;ldquo;HTTPSConnectionPo
ol(host=&amp;lsquo;pypi.org&amp;rsquo;, port=443): Read timed out. (read timeout=15)&amp;rdquo;,)&#39;: /simple/ndg-httpsclient/
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning
Could not find a version that satisfies the requirement ndg-httpsclient (from versions: )
No matching distribution found for ndg-httpsclient
d:\python27\lib\site-packages\pip_vendor\urllib3\util\ssl_.py:160: InsecurePlatformWarning: A true SSLContext object is not available. This pre
vents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to
solve this. For more information, see &lt;a href=&#34;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&#34;&gt;https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings&lt;/a&gt;
InsecurePlatformWarning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;解决方法如下，升级python2.7最新版本，在官网找到
&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;https://www.python.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Mybatis Failed to Save Data</title>
      <link>https://ltan.me/post/2022/02/mybatis-failed-to-save-data/</link>
      <pubDate>Fri, 11 Feb 2022 12:12:06 +0800</pubDate>
      
      <guid>https://ltan.me/post/2022/02/mybatis-failed-to-save-data/</guid>
      <description>记一次遇到mybaits写入数据不成功问题 工作中在作日志采集接口时，遇到写入mysql数据不成功时，当时sql是正常的，采用sp6y sql显示粘贴复制到 mysql client 执行sql执行并没有问题，但是调用接口时，写</description>
      <content>&lt;h1 id=&#34;记一次遇到mybaits写入数据不成功问题&#34;&gt;记一次遇到mybaits写入数据不成功问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;工作中在作日志采集接口时，遇到写入mysql数据不成功时，当时sql是正常的，采用sp6y sql显示粘贴复制到
mysql client 执行sql执行并没有问题，但是调用接口时，写入mysql不成功，也不报错，遇到这种问题特别
困惑，特记录一下，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;找了一下午才发现问题，最怕就是程序不报错，语句执行成功，但数据库没有数据这样的问题呢
主要问题是接口请求实体类有几个版本字段是用的Long 类型的，而mysql表对应的字段是int类型的
在用mybatis-generate 插件生成表的 mapper.xml、dao、model时，mysql字段为int类型的生成对应的integer类型
但是代码定义的dto 接口请求实体类，字段是long类型，入库时，存在long 转 integer 的行为，行为非法，但执行时sql不报错
由于时间关系没有进一步查为什么不报错提示，xml生成的字段类型都是 java.lang.Integer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;解决方法 统一 字段类型即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在mysql数据库里，int类型占4个字节对应java的Integer类型，
而mysql中的bigint 类型占用8个字节对应java的Long类型, 在mybaits xml 文件没有Long类型，只有BIGINT&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Front End Learning Vue Typescript 1</title>
      <link>https://ltan.me/post/2021/12/front-end-learning-vue-typescript-1/</link>
      <pubDate>Tue, 21 Dec 2021 21:53:30 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/12/front-end-learning-vue-typescript-1/</guid>
      <description>前端学习【vue-typescript-1】 基于模板代码学习编写最前沿技术框架vue-typescript-admin-template , 这里直接省略环境搭建npm node vue 请自行安装, vue 以最新版本为准 vue3.x 首</description>
      <content>&lt;h1 id=&#34;前端学习vue-typescript-1&#34;&gt;前端学习【vue-typescript-1】&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;基于模板代码学习编写最前沿技术框架&lt;code&gt;vue-typescript-admin-template&lt;/code&gt; , 这里直接省略环境搭建npm node vue 请自行安装, vue 以最新版本为准 vue3.x
首先确定一个本次学习目标需求，通过web前端页面把后台的一个接口内容显示输出在页面上即可，实现点击按钮弹窗的效果&lt;/p&gt;
&lt;p&gt;我的后台接口地址是http://www.hell.com/iplocation/ipuu/getInfo?ip=111.44.1.3&lt;/p&gt;
&lt;p&gt;我浏览器访问地址是&lt;code&gt;[hello-world](http://localhost:8080/hell)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;构建初始化项目&#34;&gt;构建初始化项目&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vue create hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;构建路由创建一个新的页面&#34;&gt;构建路由创建一个新的页面&lt;/h3&gt;
&lt;h5 id=&#34;1-在-appvue-文件加入-一个-超链接标签-router-link--可实现html-a标签-href跳转功能&#34;&gt;1. 在 App.vue 文件加入 一个 超链接标签 &lt;code&gt;router-link&lt;/code&gt;  可实现html a标签 href跳转功能&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;router-link to=&amp;quot;/hell&amp;quot;&amp;gt;hell&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;2-在router目录下indexts文件里增加如下代码处理hell-路由的指向文件&#34;&gt;2. 在router目录下index.ts文件里增加如下代码，处理/hell 路由的指向文件&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;routes&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;RouteConfig&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
    &lt;span style=&#34;color:#75715e&#34;&gt;//原有的路由保持不动，增加以下/hell路由指向处理
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; { 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/hell&amp;#39;&lt;/span&gt;, 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hell&amp;#39;&lt;/span&gt;, 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;component&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../views/hell.vue&amp;#39;&lt;/span&gt;) 
 } 
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;3-在utils目录下新增requestts文件&#34;&gt;3. 在utils目录下新增&lt;code&gt;request.ts&lt;/code&gt;文件&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;chai&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;baseURL&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;5000&lt;/span&gt;
})

&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;interceptors&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
  },
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;Promise&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;)
  }
)
 
&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;interceptors&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;
  },
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
     &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11111111&lt;/span&gt;)
  }
)

&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;4-在src目录下创建api目录用于专门api函数与后台交互的api接口处理&#34;&gt;4. 在src目录下创建api目录，用于专门api函数，与后台交互的api接口处理&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@/utils/request&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getIpInfo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; 
&lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iplocation/ipuu/getInfo?ip=111.44.1.3&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;get&amp;#39;&lt;/span&gt;
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;5-在maints文件加入核心依赖库需要用到el-标签icon库el样式都需要导入以下maints原文件加入注释的都新增代码&#34;&gt;5. 在main.ts文件加入核心依赖库，需要用到el 标签，icon库，el样式都需要导入，以下main.ts原文件加入注释的都新增代码&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;//新加入的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./App.vue&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ElementUI&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;element-ui&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;//新加入的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SvgIcon&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-svgicon&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;//新加入的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;element-ui/lib/theme-chalk/index.css&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;//新加入的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./registerServiceWorker&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./router&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;store&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./store&amp;#39;&lt;/span&gt;


&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ElementUI&lt;/span&gt;, {}) &lt;span style=&#34;color:#75715e&#34;&gt;//新加入的，需要注册到vue,否则控制台报错，不存在该标签
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;productionTip&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;store&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;)
}).&lt;span style=&#34;color:#a6e22e&#34;&gt;$mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;6-在views-目录下创建hellvue-文件&#34;&gt;6. 在views 目录下创建hell.vue 文件&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt; 
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt; this is hell page..........&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--这个aa来自类属性变量--&amp;gt;&lt;/span&gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;{{aa}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt; 
          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;el-button&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cancel-btn&amp;#34;&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;small&amp;#34;&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;icon&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;el-icon-refresh&amp;#34;&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;warning&amp;#34;&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aabbba&amp;#34;&lt;/span&gt;
              &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clickfunc(111)&amp;#34;&lt;/span&gt;
            &amp;gt;
                  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;按钮点击&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;el-button&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ts&amp;#39;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;color:#75715e&#34;&gt;//导入依赖vue
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;Component&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue-property-decorator&amp;#39;&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;//导入ip接口文件库
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;getIpInfo&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@/api/ip&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;//必须增加@commponet注解，否则无效created无效
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Component&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vue&lt;/span&gt; { 
  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aa&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;//继承了vue特性 created 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;created&lt;/span&gt;(){
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getIpInfo&lt;/span&gt;()
  }
  &lt;span style=&#34;color:#75715e&#34;&gt;//当点击时会调用这个函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clickfunc&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;) {
       &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aa&lt;/span&gt;)
  }
  &lt;span style=&#34;color:#75715e&#34;&gt;//异步调用getipinfo接口
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getIpInfo&lt;/span&gt;(){
       &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getIpInfo&lt;/span&gt;()
       &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aa&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;
   }
}
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;7-设置项目接口访问解决访问接口在开发环境跨域的问题在vueconfigjs&#34;&gt;7. 设置项目接口访问，解决访问接口在开发环境跨域的问题，在vue.config.js&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;module.exports = {
  devServer: {
    headers: {
      &#39;Access-Control-Allow-Origin&#39;: &#39;*&#39;
    },
    proxy: {
      &#39;/api&#39;: {
        ws: true,  //是否启用websockets
        changeOrigin: true,  //开启代理： 在本地会创建一个虚拟服务端，然后发送请求数据，并且同时接收请求数据，这样客户端和服务端进行数据的交互就不会有跨域问题
        target: &#39;http://www.hell.com&#39;,  // 要访问的跨域的域名
        pathRewrite: {
          [&#39;^/api&#39;]: &#39;&#39;
        }
      }
    }
  },
}
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;8-安装依赖依次执行&#34;&gt;8. 安装依赖，依次执行&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;npm install element-ui --save  
npm install axios --save
npm install element-ui --save
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;9-运行&#34;&gt;9. 运行&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;# npm run serve

You may use special comments to disable some warnings.    
Use // eslint-disable-next-line to ignore the next line.  
Use /* eslint-disable */ to ignore all warnings in a file.
No type errors found
Version: typescript 4.1.6
Time: 2614ms

  App running at:
  - Local:   http://localhost:8080/
  - Network: http://172.20.148.107:8080/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终效果:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20211221223034552.png&#34; alt=&#34;image-20211221223034552&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to solve SpringBoot Mysql CLIENT_PLUGIN_AUTH Is Required error</title>
      <link>https://ltan.me/post/2021/12/springboot-mysql-client_plugin_auth-is-required/</link>
      <pubDate>Tue, 07 Dec 2021 09:54:05 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/12/springboot-mysql-client_plugin_auth-is-required/</guid>
      <description>一次上线遇到的问mysql版本使用问题CLIENT_PLUGIN_AUTH 当在项目做好即将上线时，突然发现线上数据库版本太低而报如题错误，导致程序上线启动失败，现有数据库己被很多老的项目在使用着，不可</description>
      <content>&lt;h1 id=&#34;一次上线遇到的问mysql版本使用问题client_plugin_auth&#34;&gt;一次上线遇到的问mysql版本使用问题CLIENT_PLUGIN_AUTH&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;当在项目做好即将上线时，突然发现线上数据库版本太低而报如题错误，导致程序上线启动失败，现有数据库己被很多老的项目在使用着，不可能让dba去更新数据库版本，或另开服务器。&lt;/p&gt;
&lt;p&gt;找了一下原因，是因为使用spring boot 2.x版本，相对比较新，而默认使用的数据库版本为mysql-connect 库 8.x，而需要手动给mysql connect jar包库版本降级，从8.x降到5.1.48&lt;/p&gt;
&lt;p&gt;主要处理方法是&lt;/p&gt;
&lt;p&gt;第一、需要在 父pom.xml 文件里先指定&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mysql.version&amp;gt;&lt;/span&gt;5.1.48&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mysql.version&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二、修改jdbc使用驱动jar包类&lt;/p&gt;
&lt;p&gt;由&lt;code&gt;com.mysql.cj.jdbc.Driver&lt;/code&gt; 改为 &lt;code&gt;com.mysql.jdbc.Driver&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;链接url&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jdbc:mysql://172.20.1.2:3406/xxx?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=Asia/Shanghai&amp;amp;zeroDateTimeBehavior=CONVERT_TO_NULL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;改为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;jdbc:mysql://172.20.1.2:3406/xxx?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;useJDBCCompliantTimezoneShift=true&amp;amp;useLegacyDatetimeCode=false&amp;amp;serverTimezone=Asia/Shanghai&amp;amp;zeroDateTimeBehavior=convertToNull&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;CONVERT_TO_NULL  &lt;/code&gt;  to  &lt;code&gt;convertToNull&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大功告成，顺利上线&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Enumeration Class Used in Java</title>
      <link>https://ltan.me/post/2021/10/enumeration-class-used-in-java/</link>
      <pubDate>Thu, 14 Oct 2021 10:45:23 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/10/enumeration-class-used-in-java/</guid>
      <description>枚举类在java中使用方法之一 在后数据中台中，有些数据不需要放在数据库当中，只需要一个枚举类即可，比如web ui select 选择器下拉数据，男，女 这种，还比如省市 下拉数据，而这些数据可以不需要数据库来保存，也不需</description>
      <content>&lt;h1 id=&#34;枚举类在java中使用方法之一&#34;&gt;枚举类在java中使用方法之一&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在后数据中台中，有些数据不需要放在数据库当中，只需要一个枚举类即可，比如web ui select 选择器下拉数据，&lt;code&gt;男&lt;/code&gt;，&lt;code&gt;女&lt;/code&gt; 这种，还比如&lt;code&gt;省市&lt;/code&gt; 下拉数据，而这些数据可以不需要数据库来保存，也不需要用配置文件来保存，只需要一个枚举类即可，使用方法如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JAVA&#34; data-lang=&#34;JAVA&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;enum&lt;/span&gt; AppCmdEnum &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

   APP_INSTALL&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;安装命令&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt;
   APP_UNINSTALL&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;卸载命令&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt;
   APP_UPGRADE&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;升级命令&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

   Integer code&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   String name&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; KEYS_MAP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HashMap&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; KEYS_MAP_SS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HashMap&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

   &lt;span style=&#34;color:#75715e&#34;&gt;//初始化枚举类资源类型数据返回，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AppCmdEnum item &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; AppCmdEnum&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
         KEYS_MAP&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
         KEYS_MAP_SS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getKeysMap&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; KEYS_MAP&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getKeysMapSS&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; KEYS_MAP_SS&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

   &lt;span style=&#34;color:#75715e&#34;&gt;//增加一个构造函数，丰富描述该枚举类的作用，和功能，字段含义
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;//根据业务需求可以，可以增加很多的属性字段，扩展非常灵活
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   AppCmdEnum&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer code&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; code&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Integer &lt;span style=&#34;color:#a6e22e&#34;&gt;getCode&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在spring boot项目调用方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@GetMapping(&amp;quot;/api_conf&amp;quot;)
public Object apiConf() {
   Map&amp;lt;Integer, String&amp;gt; keysMap = AppCmdEnum.getKeysMap();
   return keysMap;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该接口返回内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
	&amp;quot;1&amp;quot;: &amp;quot;安装命令&amp;quot;,
	&amp;quot;2&amp;quot;: &amp;quot;卸载命令&amp;quot;,
	&amp;quot;3&amp;quot;: &amp;quot;升级命令&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用到web前端效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20211014110500057.png&#34; alt=&#34;image-20211014110500057&#34;&gt;&lt;/p&gt;
&lt;p&gt;在业务代码使用枚举类时，还有中文提示，这个比常量好使很多呢&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20211014110845695.png&#34; alt=&#34;image-20211014110845695&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Mybaits Plus Comes With Paging VS Com.github.pagehelper Paging Plug In</title>
      <link>https://ltan.me/post/2021/09/mybaits-plus-comes-with-paging-vs-com.github.pagehelper-paging-plug-in/</link>
      <pubDate>Mon, 27 Sep 2021 16:49:31 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/mybaits-plus-comes-with-paging-vs-com.github.pagehelper-paging-plug-in/</guid>
      <description>mybatis-plus 自带分页 和 com.github.pagehelper工具使用对比 对经常写中台列表数据管理接口的同学来说，需要经常使用到分页插件来提升自己的工作效率，通常我用过最多的两款插件如标题所示，这两款插件在写</description>
      <content>&lt;h1 id=&#34;mybatis-plus-自带分页-和-comgithubpagehelper工具使用对比&#34;&gt;mybatis-plus 自带分页 和 com.github.pagehelper工具使用对比&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;对经常写中台列表数据管理接口的同学来说，需要经常使用到分页插件来提升自己的工作效率，通常我用过最多的两款插件如标题所示，这两款插件在写文章之前，我一直搞不清，浮躁，混为一谈，需要总结整理&lt;/p&gt;
&lt;p&gt;今抽空花些时间来比较一下他们在返回&lt;code&gt;response body&lt;/code&gt; 时内容, 观察到&lt;code&gt;pagehelper&lt;/code&gt;不愧是术业有专攻啊，个人认为&lt;code&gt;pagehelper&lt;/code&gt; 作为专业分页插件不得不说，其功能特点比&lt;code&gt;mybatis-plus&lt;/code&gt; 完善多了，考虑到人性化，由期在前后端对接方面，大大提升了效率，少写很多代码，不过有时还是看需求场景，对于不需要web端展示的，我推荐&lt;code&gt;mybatis-plus 自带的page分页&lt;/code&gt; ,它相比&lt;code&gt;pagehelper&lt;/code&gt;插件提供的能力还是比较简单，比如没有提供&lt;code&gt;页码位置&lt;/code&gt;，&lt;code&gt;前一页&lt;/code&gt;，&lt;code&gt;后一页&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;mybatis-plus-page&#34;&gt;mybatis-plus page&lt;/h2&gt;
&lt;p&gt;以下为mybatis-plus 分页插件在返回data数据 结构如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;records&amp;#34;&lt;/span&gt;: [
           &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.....&lt;/span&gt;		
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;current&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;orders&amp;#34;&lt;/span&gt;: [],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;searchCount&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;代码使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Object &lt;span style=&#34;color:#a6e22e&#34;&gt;pageList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RequestParam&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;defaultValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Integer pageNum&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
                          &lt;span style=&#34;color:#a6e22e&#34;&gt;@RequestParam&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;defaultValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Integer pageSize&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	  QueryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; queryWrapper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; QueryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
      Page&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Page&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;pageNum&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pageSize&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; 
      IPage&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;xxModel&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xxService&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;page&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;page&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; queryWrapper&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; list
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pagehelper&#34;&gt;pagehelper&lt;/h2&gt;
&lt;p&gt;以下为pagehelper 的返回data数据，结构如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;: [
            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.....&lt;/span&gt;
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pageNum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pageSize&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;startRow&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;endRow&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prePage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nextPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isFirstPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isLastPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hasPreviousPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hasNextPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigatePages&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigatepageNums&amp;#34;&lt;/span&gt;: [],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigateFirstPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;navigateLastPage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;web前端对接时看到有 prePage，nextPage 实现太香，不要不要的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210927173234110.png&#34; alt=&#34;image-20210927173234110&#34;&gt;&lt;/p&gt;
&lt;p&gt;代码使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; @GetMapping(&amp;quot;/list&amp;quot;)
   public Object pageList(@RequestParam(defaultValue = &amp;quot;1&amp;quot;) Integer pageNum,
                          @RequestParam(defaultValue = &amp;quot;10&amp;quot;) Integer pageSize) {
      QueryWrapper&amp;lt;xxModel&amp;gt; queryWrapper = new QueryWrapper&amp;lt;&amp;gt;();
      PageHelper.startPage(pageNum, pageSize); 
	  List&amp;lt;xxModel&amp;gt; list = xxService.list(queryWrapper);
      return new PageInfo&amp;lt;&amp;gt;(list)
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后总结：&lt;/p&gt;
&lt;p&gt;​     推荐大家按需求选自己最合适的分页插件，当然两者可以整合一起使用。有冲突的话则排除冲突，用 mybatis-plus 则重点在mybatis &lt;code&gt;dao&lt;/code&gt;,&lt;code&gt;service&lt;/code&gt;,&lt;code&gt;mapper&lt;/code&gt; ，常见sql可以不写xml,不写service，除非特别的连表查询sql语句，而&lt;code&gt;pagehelper&lt;/code&gt; 则重点在于分页，分页功能强大无敌，对于需要web前端分页的小伙伴，它可以帮你节省不少时间，另外对我当前使用的mybatis-plus 在默认的情况下，&lt;code&gt;mybatis-plus total 为0的问题&lt;/code&gt;， 为了解决total字段为0的问题，百度,google搜索一大把关于它的文章，解决方法。还有个坑就是&lt;code&gt;mybatis-plus的分页，单页查询默认为500条限制&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Date and LocalDatetime in Java 8</title>
      <link>https://ltan.me/post/2021/09/date-and-localdatetime-in-java-8/</link>
      <pubDate>Sun, 26 Sep 2021 21:08:19 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/date-and-localdatetime-in-java-8/</guid>
      <description>Java 8中的 Date和LocalDateTime类在工作中遇到的问题 java 8 中的 LocalDateTime 比 date 速度快很多，而且在处理时间方法比较灵活，在日期计算方面，日期比较简单易用，而Date 要繁琐很多 我在工作中遇到一个实体类创建</description>
      <content>&lt;h1 id=&#34;java-8中的-date和localdatetime类在工作中遇到的问题&#34;&gt;Java 8中的 Date和LocalDateTime类在工作中遇到的问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;java 8 中的 LocalDateTime  比 date 速度快很多，而且在处理时间方法比较灵活，在日期计算方面，日期比较简单易用，而Date 要繁琐很多&lt;/p&gt;
&lt;p&gt;我在工作中遇到一个实体类&lt;code&gt;创建时间&lt;/code&gt;字段原来为Date类型， 在ｍｙｂａｔｉｓ　时间创建数据库记录时，需要用到自动填充当前时间为创建时间，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@TableField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FieldFill&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;INSERT_UPDATE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Date lastUpdateTime&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现报错如下具体原因是因为&lt;code&gt;Date&lt;/code&gt;在转换 &lt;code&gt;LocalDateTime.now()&lt;/code&gt;出问题了，报错误不匹配&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2021-09-26T13:17:55.034+0000&amp;#34;&lt;/span&gt;,

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Server Error&amp;#34;&lt;/span&gt;,

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property &amp;#39;createTime&amp;#39; of &amp;#39;class com.company.device.control.api.model.Command&amp;#39; with value &amp;#39;2021-09-26T21:17:54.966&amp;#39; Cause: java.lang.IllegalArgumentException: argument type mismatch&amp;#34;&lt;/span&gt;,

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/comm/add&amp;#34;&lt;/span&gt;

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;是我用了mybatis自动填充, 也就是自动转换，但类型不一样，所以导致错误&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MybatisObjectHandler&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; MetaObjectHandler &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;insertFill&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MetaObject metaObject&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        setFieldValByName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;createTime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; metaObject&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
        setFieldValByName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updateTime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; metaObject&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateFill&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MetaObject metaObject&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;//更新时 需要填充字段
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        setFieldValByName&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;updateTime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; LocalDateTime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(),&lt;/span&gt; metaObject&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方法为，把原来自动用mybatis gen tool 生成的实体类类型字段，手动改成LocalDateTime 即可,如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@TableField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FieldFill&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;INSERT_UPDATE&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; LocalDateTime lastUpdateTime&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Multi Module Project Generation Mybatis Tool by Intellij IDEA</title>
      <link>https://ltan.me/post/2021/09/multi-module-project-generation-mybatis-tool-by-intellij-idea/</link>
      <pubDate>Sun, 26 Sep 2021 11:14:37 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/multi-module-project-generation-mybatis-tool-by-intellij-idea/</guid>
      <description>在intellij idea 中用mybatis generate tool 插件快速生成mybatis dao,model,mapper等文件 用idea 打开一个多模块的项目, 配置database mysql 设置并连接上 打开schemas 选择一个表</description>
      <content>&lt;h1 id=&#34;在intellij-idea-中用mybatis-generate-tool-插件快速生成mybatis-daomodelmapper等文件&#34;&gt;在intellij idea 中用mybatis generate tool 插件快速生成mybatis dao,model,mapper等文件&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;用idea 打开一个多模块的项目, 配置database mysql 设置并连接上&lt;/p&gt;
&lt;p&gt;打开schemas 选择一个表，右建选择mybatis-generator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210926112036871.png&#34; alt=&#34;image-20210926112036871&#34;&gt;&lt;/p&gt;
&lt;p&gt;在弹出窗口，注意选择,以下红框中请设置好。很重要，否则生成路径不对。免得移动文件，干脆一次到位生成到对应的目录下面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210926112146002.png&#34; alt=&#34;image-20210926112146002&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;插件名字如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210926112625009.png&#34; alt=&#34;image-20210926112625009&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Activemq Artemis Learning 3</title>
      <link>https://ltan.me/post/2021/09/activemq-artemis-learning-3/</link>
      <pubDate>Sat, 04 Sep 2021 17:16:44 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/activemq-artemis-learning-3/</guid>
      <description>验证activemq Artemis 源代码完整性 工作项目可能需要使用activemq artemis ，将使用在生产环境上部署，为了方便后面二次开发的需求可能，对其进行源代码完整性验证，主要工作是，把最新源代码下载到本地进行源码编</description>
      <content>&lt;h1 id=&#34;验证activemq-artemis-源代码完整性&#34;&gt;验证activemq Artemis 源代码完整性&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;工作项目可能需要使用activemq artemis ，将使用在生产环境上部署，为了方便后面二次开发的需求可能，对其进行源代码完整性验证，主要工作是，把最新源代码下载到本地进行源码编译，一开始使用的windows死活编译不成功，报com.sum.sw jar 包错误。&lt;/p&gt;
&lt;p&gt;然后还有一些jar 包无法下载，即使你换了国内的maven 阿里镜像也无法下载, 需要有一个彻底扶墙的网络环境才有可能全部编译通过。然后我在windows折腾几天没有成功，就是反复执行 mvn -Prealse install  命令，安装编译测试等环境，错误一大堆。项目复杂，庞大，不得不说apache 开源的项目，还是很强，功能很完善。这个项目目录结构也是十分复杂的。为了达 到目的，需要时间折腾的，后来我换了苹果电脑上面，也开起了扶墙网络模式。经过几次的人工重复执行  mvn -Prealse install  最终才编译成功的&lt;/p&gt;
&lt;p&gt;这里说一下为什么需要重复，反复执行mvn -Prealse install ,因为项目的依赖都来自不同的网络，其主要的需要从maven 全球中央仓库下载，有时会因为网络掉线，访问服务器节点超时引起的编译程序中断导致，所以重复执行mvn 打包命令。是可以理解的&lt;/p&gt;
&lt;p&gt;说到这里有人可能会问，为什么不用&lt;code&gt;github&lt;/code&gt; 自带的&lt;code&gt;workflow &lt;/code&gt;编译，因为那是国外环境，&lt;/p&gt;
&lt;p&gt;当然没有墙的问题，在本地编译主要目的还是为了检验源代码完整性以及 后面二次开发扩展打基础。&lt;/p&gt;
&lt;p&gt;以下是我编译的最后几部过程的全结果。  最后项目编译共花了&lt;code&gt;43分钟&lt;/code&gt; 包含测试用例，第一次成功编译后，后面编译就会有&lt;code&gt;cache&lt;/code&gt;, 顺利多了，编译后最终的程序打包是在 &lt;code&gt;artemis-distribution&lt;/code&gt; 模块下面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;mvn -Prelease install

[INFO] --------&amp;lt; org.apache.activemq.examples.stomp:stomp-websockets &amp;gt;---------

[INFO] Building ActiveMQ Artemis JMS StompWebSocketExample Example 2.18.0 [208/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ stomp-websockets ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ stomp-websockets ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ stomp-websockets ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ stomp-websockets ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ stomp-websockets ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ stomp-websockets ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ stomp-websockets ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ stomp-websockets ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 7 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 7 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ stomp-websockets ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ stomp-websockets ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ stomp-websockets ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ stomp-websockets ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/stomp-websockets-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ stomp-websockets ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ stomp-websockets ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/stomp-websockets-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ stomp-websockets ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ stomp-websockets ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ stomp-websockets ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ stomp-websockets ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ stomp-websockets ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ stomp-websockets ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/stomp-websockets-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-websockets/2.18.0/stomp-websockets-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-websockets/2.18.0/stomp-websockets-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-websockets/target/stomp-websockets-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-websockets/2.18.0/stomp-websockets-2.18.0-sources.jar

[INFO]

[INFO] ---&amp;lt; org.apache.activemq.examples.stomp:stomp-embedded-interceptor &amp;gt;----

[INFO] Building ActiveMQ Artemis JMS Stomp Embedded Interceptor Example 2.18.0 [209/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ stomp-embedded-interceptor ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ stomp-embedded-interceptor ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ stomp-embedded-interceptor ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ stomp-embedded-interceptor ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 3 source files to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ stomp-embedded-interceptor ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ stomp-embedded-interceptor ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 5 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 5 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ stomp-embedded-interceptor ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ stomp-embedded-interceptor ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ stomp-embedded-interceptor ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/stomp-embedded-interceptor-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ stomp-embedded-interceptor ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ stomp-embedded-interceptor ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/stomp-embedded-interceptor-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ stomp-embedded-interceptor ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ stomp-embedded-interceptor ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ stomp-embedded-interceptor ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/stomp-embedded-interceptor-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-embedded-interceptor/2.18.0/stomp-embedded-interceptor-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-embedded-interceptor/2.18.0/stomp-embedded-interceptor-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-embedded-interceptor/target/stomp-embedded-interceptor-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-embedded-interceptor/2.18.0/stomp-embedded-interceptor-2.18.0-sources.jar

[INFO]

[INFO] ------------&amp;lt; org.apache.activemq.examples.stomp:stomp1.1 &amp;gt;-------------

[INFO] Building ActiveMQ Artemis Stomp 1.1 Example 2.18.0       [210/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ stomp1.1 ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ stomp1.1 ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ stomp1.1 ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ stomp1.1 ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ stomp1.1 ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ stomp1.1 ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ stomp1.1 ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ stomp1.1 ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 3 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 3 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ stomp1.1 ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ stomp1.1 ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ stomp1.1 ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ stomp1.1 ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/stomp1.1-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ stomp1.1 ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ stomp1.1 ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/stomp1.1-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ stomp1.1 ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ stomp1.1 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ stomp1.1 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ stomp1.1 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ stomp1.1 ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ stomp1.1 ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/stomp1.1-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.1/2.18.0/stomp1.1-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.1/2.18.0/stomp1.1-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.1/target/stomp1.1-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.1/2.18.0/stomp1.1-2.18.0-sources.jar

[INFO]

[INFO] ------------&amp;lt; org.apache.activemq.examples.stomp:stomp1.2 &amp;gt;-------------

[INFO] Building ActiveMQ Artemis Stomp 1.2 Example 2.18.0       [211/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ stomp1.2 ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ stomp1.2 ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ stomp1.2 ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ stomp1.2 ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ stomp1.2 ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ stomp1.2 ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ stomp1.2 ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ stomp1.2 ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 3 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 3 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ stomp1.2 ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ stomp1.2 ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ stomp1.2 ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ stomp1.2 ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/stomp1.2-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ stomp1.2 ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ stomp1.2 ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/stomp1.2-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ stomp1.2 ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ stomp1.2 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ stomp1.2 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ stomp1.2 ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ stomp1.2 ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ stomp1.2 ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/stomp1.2-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.2/2.18.0/stomp1.2-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.2/2.18.0/stomp1.2-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp1.2/target/stomp1.2-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp1.2/2.18.0/stomp1.2-2.18.0-sources.jar

[INFO]

[INFO] ------------&amp;lt; org.apache.activemq.examples.stomp:stomp-jms &amp;gt;------------

[INFO] Building ActiveMQ Artemis Stomp JMS Example 2.18.0       [212/218]

[INFO] --------------------------------[ jar ]---------------------------------

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.pom

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.pom

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.pom (5.8 kB at 3.6 kB/s)

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/stompjms/stompjms-project/1.19/stompjms-project-1.19.pom

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-project/1.19/stompjms-project-1.19.pom

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-project/1.19/stompjms-project-1.19.pom (9.2 kB at 13 kB/s)

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.pom

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.pom

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.pom (2.8 kB at 4.4 kB/s)

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/hawtdispatch/hawtdispatch-project/1.20/hawtdispatch-project-1.20.pom

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-project/1.20/hawtdispatch-project-1.20.pom

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-project/1.20/hawtdispatch-project-1.20.pom (13 kB at 14 kB/s)

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.pom

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.pom

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.pom (3.0 kB at 4.2 kB/s)

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.jar

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.jar

Downloading from apache.snapshots: https://repository.apache.org/content/repositories/snapshots/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.jar

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.jar

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.jar

Downloading from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.jar

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch/1.20/hawtdispatch-1.20.jar (119 kB at 63 kB/s)

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/hawtdispatch/hawtdispatch-transport/1.20/hawtdispatch-transport-1.20.jar (128 kB at 61 kB/s)

Downloaded from central: https://repo.maven.apache.org/maven2/org/fusesource/stompjms/stompjms-client/1.19/stompjms-client-1.19.jar (213 kB at 55 kB/s)

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ stomp-jms ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ stomp-jms ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ stomp-jms ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ stomp-jms ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ stomp-jms ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ stomp-jms ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ stomp-jms ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ stomp-jms ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 3 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 3 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ stomp-jms ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ stomp-jms ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ stomp-jms ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ stomp-jms ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/stomp-jms-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ stomp-jms ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ stomp-jms ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/stomp-jms-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ stomp-jms ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ stomp-jms ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ stomp-jms ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ stomp-jms ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ stomp-jms ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ stomp-jms ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/stomp-jms-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-jms/2.18.0/stomp-jms-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-jms/2.18.0/stomp-jms-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/stomp/stomp-jms/target/stomp-jms-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/stomp/stomp-jms/2.18.0/stomp-jms-2.18.0-sources.jar

[INFO]

[INFO] ------&amp;lt; org.apache.activemq.examples.openwire:openwire-examples &amp;gt;-------

[INFO] Building ActiveMQ Artemis Openwire Examples 2.18.0       [213/218]

[INFO] --------------------------------[ pom ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ openwire-examples ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ openwire-examples ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ openwire-examples ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ openwire-examples ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ openwire-examples ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ openwire-examples ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 67 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 1 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 1 licenses.

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ openwire-examples ---

[INFO] No site descriptor found: nothing to attach.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ openwire-examples ---

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ openwire-examples ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ openwire-examples ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/openwire-examples/2.18.0/openwire-examples-2.18.0.pom

[INFO]

[INFO] ---------&amp;lt; org.apache.activemq.examples.openwire:chat-example &amp;gt;---------

[INFO] Building ActiveMQ Artemis Openwire chat Example 2.18.0     [214/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ chat-example ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ chat-example ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ chat-example ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ chat-example ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ chat-example ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 2 resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ chat-example ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 2 source files to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ chat-example ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ chat-example ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 5 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 5 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ chat-example ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ chat-example ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ chat-example ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ chat-example ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/chat-example-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ chat-example ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ chat-example ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/chat-example-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ chat-example ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ chat-example ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/chat-example-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/chat-example/2.18.0/chat-example-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/chat-example/2.18.0/chat-example-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/chat/target/chat-example-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/chat-example/2.18.0/chat-example-2.18.0-sources.jar

[INFO]

[INFO] --------&amp;lt; org.apache.activemq.examples.openwire:queue-openwire &amp;gt;--------

[INFO] Building ActiveMQ Artemis OpenWire JMS Queue Example 2.18.0  [215/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ queue-openwire ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ queue-openwire ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ queue-openwire ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ queue-openwire ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ queue-openwire ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/src/main/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ queue-openwire ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ queue-openwire ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ queue-openwire ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 2 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 2 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ queue-openwire ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ queue-openwire ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ queue-openwire ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ queue-openwire ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/queue-openwire-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ queue-openwire ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ queue-openwire ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/queue-openwire-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ queue-openwire ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ queue-openwire ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ queue-openwire ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ queue-openwire ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ queue-openwire ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ queue-openwire ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/queue-openwire-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/queue-openwire/2.18.0/queue-openwire-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/queue-openwire/2.18.0/queue-openwire-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/queue/target/queue-openwire-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/queue-openwire/2.18.0/queue-openwire-2.18.0-sources.jar

[INFO]

[INFO] -------&amp;lt; org.apache.activemq.examples.openwire:message-listener &amp;gt;-------

[INFO] Building ActiveMQ Artemis OpenWire JMS Message Listener Example 2.18.0 [216/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ message-listener ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ message-listener ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ message-listener ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ message-listener ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ message-listener ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/src/main/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ message-listener ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ message-listener ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ message-listener ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 2 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 2 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ message-listener ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ message-listener ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ message-listener ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ message-listener ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/message-listener-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ message-listener ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ message-listener ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/message-listener-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ message-listener ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ message-listener ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ message-listener ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ message-listener ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ message-listener ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ message-listener ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/message-listener-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-listener/2.18.0/message-listener-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-listener/2.18.0/message-listener-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-listener/target/message-listener-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-listener/2.18.0/message-listener-2.18.0-sources.jar

[INFO]

[INFO] -------&amp;lt; org.apache.activemq.examples.openwire:message-recovery &amp;gt;-------

[INFO] Building ActiveMQ Artemis OpenWire JMS Message Recovery Example 2.18.0 [217/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ message-recovery ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ message-recovery ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ message-recovery ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ message-recovery ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ message-recovery ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/src/main/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ message-recovery ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ message-recovery ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ message-recovery ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 2 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 2 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ message-recovery ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ message-recovery ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ message-recovery ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ message-recovery ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/message-recovery-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ message-recovery ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ message-recovery ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/message-recovery-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ message-recovery ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ message-recovery ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ message-recovery ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ message-recovery ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/message-recovery-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-recovery/2.18.0/message-recovery-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-recovery/2.18.0/message-recovery-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/message-recovery/target/message-recovery-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/message-recovery/2.18.0/message-recovery-2.18.0-sources.jar

[INFO]

[INFO] ----&amp;lt; org.apache.activemq.examples.openwire:virtual-topic-mapping &amp;gt;-----

[INFO] Building ActiveMQ Artemis OpenWire Virtual Topic Mapping Example 2.18.0 [218/218]

[INFO] --------------------------------[ jar ]---------------------------------

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-maven-version) @ virtual-topic-mapping ---

[INFO]

[INFO] --- maven-enforcer-plugin:3.0.0-M3:enforce (enforce-java-version) @ virtual-topic-mapping ---

[INFO]

[INFO] --- maven-dependency-plugin:3.1.1:unpack (copy) @ virtual-topic-mapping ---

[INFO] Configured Artifact: org.apache.activemq:activemq-artemis-native:1.0.2:jar

[INFO] Unpacking /Users/winfan/.m2/repository/org/apache/activemq/activemq-artemis-native/1.0.2/activemq-artemis-native-1.0.2.jar to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/bin with includes &amp;quot;**/*.so&amp;quot; and excludes &amp;quot;&amp;quot;

[INFO]

[INFO] --- maven-remote-resources-plugin:1.7.0:process (process-resource-bundles) @ virtual-topic-mapping ---

[INFO] Preparing remote bundle org.apache:apache-jar-resource-bundle:1.4

[INFO] Copying 3 resources from 1 bundle.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ virtual-topic-mapping ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] Copying 1 resource

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ virtual-topic-mapping ---

[INFO] Changes detected - recompiling the module!

[INFO] Compiling 1 source file to /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/classes

[INFO]

[INFO] --- maven-checkstyle-plugin:3.1.1:check (default) @ virtual-topic-mapping ---

[INFO] 开始检查……

检查完成。

[INFO] You have 0 Checkstyle violations.

[INFO]

[INFO] --- apache-rat-plugin:0.13:check (default) @ virtual-topic-mapping ---

[INFO] Enabled default license matchers.

[INFO] Will parse SCM ignores for exclusions...

[INFO] Finished adding exclusions from SCM ignore files.

[INFO] 62 implicit excludes (use -debug for more details).

[INFO] 53 explicit excludes (use -debug for more details).

[INFO] 3 resources included (use -debug for more details)

[INFO] Rat check: Summary over all files. Unapproved: 0, unknown: 0, generated: 0, approved: 3 licenses.

[INFO]

[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ virtual-topic-mapping ---

[INFO] Using &#39;UTF-8&#39; encoding to copy filtered resources.

[INFO] skip non existing resourceDirectory /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/src/test/resources

[INFO] Copying 3 resources

[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ virtual-topic-mapping ---

[INFO] No sources to compile

[INFO]

[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ virtual-topic-mapping ---

[INFO]

[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ virtual-topic-mapping ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/virtual-topic-mapping-2.18.0.jar

[INFO]

[INFO] --- maven-site-plugin:3.7.1:attach-descriptor (attach-descriptor) @ virtual-topic-mapping ---

[INFO] Skipping because packaging &#39;jar&#39; is not pom.

[INFO]

[INFO] --- maven-source-plugin:3.2.1:jar-no-fork (attach-sources) @ virtual-topic-mapping ---

[INFO] Building jar: /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/virtual-topic-mapping-2.18.0-sources.jar

[INFO]

[INFO] --- dependency-check-maven:6.1.0:check (default) @ virtual-topic-mapping ---

[INFO] Skipping dependency-check

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:create (create) @ virtual-topic-mapping ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (start) @ virtual-topic-mapping ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:runClient (runClient) @ virtual-topic-mapping ---

[INFO]

[INFO] --- artemis-maven-plugin:2.18.0:cli (stop) @ virtual-topic-mapping ---

[INFO]

[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ virtual-topic-mapping ---

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/virtual-topic-mapping-2.18.0.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/virtual-topic-mapping/2.18.0/virtual-topic-mapping-2.18.0.jar

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/pom.xml to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/virtual-topic-mapping/2.18.0/virtual-topic-mapping-2.18.0.pom

[INFO] Installing /Users/winfan/Downloads/activemq-artemis-2.18.0/examples/protocols/openwire/virtual-topic-mapping/target/virtual-topic-mapping-2.18.0-sources.jar to /Users/winfan/.m2/repository/org/apache/activemq/examples/openwire/virtual-topic-mapping/2.18.0/virtual-topic-mapping-2.18.0-sources.jar

[INFO] ------------------------------------------------------------------------

[INFO] Reactor Summary for ActiveMQ Artemis Parent 2.18.0:

[INFO]

[INFO] ActiveMQ Artemis Parent ............................ SUCCESS [ 8.980 s]

[INFO] ActiveMQ Artemis Commons ........................... SUCCESS [ 27.987 s]

[INFO] ActiveMQ Artemis Selector Implementation ........... SUCCESS [ 3.429 s]

[INFO] ActiveMQ Artemis Core Client ....................... SUCCESS [ 26.113 s]

[INFO] ActiveMQ Artemis Journal ........................... SUCCESS [ 3.254 s]

[INFO] ActiveMQ Artemis JDBC Store ........................ SUCCESS [ 7.538 s]

[INFO] ActiveMQ Artemis Quorum API ........................ SUCCESS [ 2.155 s]

[INFO] ActiveMQ Artemis Server ............................ SUCCESS [01:39 min]

[INFO] ActiveMQ Artemis Protocols ......................... SUCCESS [ 0.389 s]

[INFO] ActiveMQ Artemis AMQP Protocol ..................... SUCCESS [ 16.466 s]

[INFO] ActiveMQ Artemis STOMP Protocol .................... SUCCESS [ 1.649 s]

[INFO] ActiveMQ Artemis JMS Client ........................ SUCCESS [ 12.374 s]

[INFO] ActiveMQ Artemis OpenWire Protocol ................. SUCCESS [ 9.264 s]

[INFO] ActiveMQ Artemis HQClient Protocol ................. SUCCESS [ 0.929 s]

[INFO] ActiveMQ Artemis HornetQ Protocol .................. SUCCESS [ 3.132 s]

[INFO] ActiveMQ Artemis Service Extensions ................ SUCCESS [ 2.014 s]

[INFO] ActiveMQ Artemis JMS Server ........................ SUCCESS [ 5.347 s]

[INFO] ActiveMQ Artemis JUnit Rules ....................... SUCCESS [ 8.187 s]

[INFO] ActiveMQ Artemis MQTT Protocol ..................... SUCCESS [ 5.973 s]

[INFO] ActiveMQ Artemis DTO ............................... SUCCESS [ 2.958 s]

[INFO] ActiveMQ Artemis CDI Integration ................... SUCCESS [ 6.244 s]

[INFO] ActiveMQ Artemis Boot .............................. SUCCESS [ 0.373 s]

[INFO] ActiveMQ Artemis CLI ............................... SUCCESS [03:26 min]

[INFO] ActiveMQ Artemis Web ............................... SUCCESS [ 13.370 s]

[INFO] ActiveMQ Artemis Web ............................... SUCCESS [ 59.245 s]

[INFO] ActiveMQ Artemis Core Client All ................... SUCCESS [ 16.509 s]

[INFO] ActiveMQ Artemis Client OSGi ....................... SUCCESS [ 1.389 s]

[INFO] ActiveMQ Artemis JMS Client All .................... SUCCESS [ 10.803 s]

[INFO] ActiveMQ Artemis JMS Client OSGi ................... SUCCESS [ 1.246 s]

[INFO] ActiveMQ Artemis Jakarta Messaging Client .......... SUCCESS [ 1.204 s]

[INFO] ActiveMQ Artemis Jakarta Messaging Server .......... SUCCESS [ 0.473 s]

[INFO] ActiveMQ Artemis RAR POM ........................... SUCCESS [ 1.180 s]

[INFO] ActiveMQ Artemis Jakarta RAR ....................... SUCCESS [ 0.403 s]

[INFO] ActiveMQ Artemis REST Interface Implementation ..... SUCCESS [ 2.762 s]

[INFO] ActiveMQ Artemis Jakarta Service Extensions ........ SUCCESS [ 0.346 s]

[INFO] ActiveMQ Artemis Maven Plugin ...................... SUCCESS [ 3.549 s]

[INFO] ActiveMQ Artemis Server OSGi ....................... SUCCESS [ 3.825 s]

[INFO] ActiveMQ Artemis Cons .............................. SUCCESS [ 0.352 s]

[INFO] ActiveMQ Artemis HawtIO Branding ................... SUCCESS [ 4.740 s]

[INFO] ActiveMQ Artemis HawtIO Plugin ..................... SUCCESS [ 0.928 s]

[INFO] ActiveMQ Artemis Console ........................... SUCCESS [ 1.859 s]

[INFO] ActiveMQ Artemis Spring Integration ................ SUCCESS [ 0.671 s]

[INFO] ActiveMQ Artemis Quorum RI ......................... SUCCESS [02:53 min]

[INFO] Apache ActiveMQ Artemis Distribution ............... SUCCESS [ 29.024 s]

[INFO] ActiveMQ Artemis Tests POM ......................... SUCCESS [ 0.897 s]

[INFO] ActiveMQ Artemis Test Support ...................... SUCCESS [ 1.203 s]

[INFO] ActiveMQ Artemis Unit Tests ........................ SUCCESS [ 2.543 s]

[INFO] ActiveMQ Artemis Joram Tests ....................... SUCCESS [ 1.388 s]

[INFO] ActiveMQ Artemis timing Tests ...................... SUCCESS [ 0.903 s]

[INFO] ActiveMQ Artemis JMS Tests ......................... SUCCESS [ 1.897 s]

[INFO] ActiveMQ Artemis Features .......................... SUCCESS [ 25.476 s]

[INFO] ActiveMQ Artemis Integration Tests ................. SUCCESS [ 31.125 s]

[INFO] ActiveMQ Artemis Karaf Client Integration Tests .... SUCCESS [ 0.926 s]

[INFO] ActiveMQ Artemis Compatibility Tests ............... SUCCESS [ 7.362 s]

[INFO] ActiveMQ Artemis soak Tests ........................ SUCCESS [ 1.330 s]

[INFO] ActiveMQ Artemis stress Tests ...................... SUCCESS [ 1.033 s]

[INFO] ActiveMQ Artemis performance Tests ................. SUCCESS [ 0.802 s]

[INFO] Smoke Tests ........................................ SUCCESS [ 42.821 s]

[INFO] ActiveMQ5.x unit tests ............................. SUCCESS [09:29 min]

[INFO] ActiveMQ Artemis Examples .......................... SUCCESS [ 3.496 s]

[INFO] ActiveMQ Artemis Features Examples ................. SUCCESS [ 0.607 s]

[INFO] ActiveMQ Artemis Clustered Examples ................ SUCCESS [ 0.284 s]

[INFO] ActiveMQ Artemis JMS Client Side Load Balancing Example SUCCESS [ 1.918 s]

[INFO] ActiveMQ Artemis JMS Clustered Durable Subscription Example SUCCESS [ 0.849 s]

[INFO] ActiveMQ Artemis JMS Clustered Grouping Example .... SUCCESS [ 0.827 s]

[INFO] ActiveMQ Artemis JMS Clustered JGroups Example ..... SUCCESS [ 0.916 s]

[INFO] ActiveMQ Artemis JMS Clustered Queue Example ....... SUCCESS [ 0.805 s]

[INFO] ActiveMQ Artemis JMS Clustered Static One Way Example SUCCESS [ 1.507 s]

[INFO] ActiveMQ Artemis JMS Clustered Static Discovery Example SUCCESS [ 1.181 s]

[INFO] ActiveMQ Artemis JMS Clustered Static Discovery Example SUCCESS [ 1.079 s]

[INFO] ActiveMQ Artemis JMS Clustered Topic Example ....... SUCCESS [ 1.174 s]

[INFO] ActiveMQ Artemis JMS Clustered Topic URI Example ... SUCCESS [ 1.064 s]

[INFO] ActiveMQ Artemis JMS Queue Message Redistribution Example SUCCESS [ 0.851 s]

[INFO] ActiveMQ Artemis JMS Symmetric Cluster Example ..... SUCCESS [ 1.075 s]

[INFO] ActiveMQ Artemis JMS Client Side Failover Listener Example SUCCESS [ 1.112 s]

[INFO] ActiveMQ Artemis Broker Connection Examples ........ SUCCESS [ 0.230 s]

[INFO] amqp-sending-messages .............................. SUCCESS [ 0.817 s]

[INFO] amqp-receiving-messages ............................ SUCCESS [ 0.766 s]

[INFO] amqp-ssl-enabled ................................... SUCCESS [ 0.682 s]

[INFO] disaster-recovery .................................. SUCCESS [ 0.675 s]

[INFO] ActiveMQ Artemis Broker Balancer Examples .......... SUCCESS [ 0.266 s]

[INFO] evenly-redirect .................................... SUCCESS [ 0.708 s]

[INFO] symmetric-redirect ................................. SUCCESS [ 0.762 s]

[INFO] ActiveMQ Artemis Federation Examples ............... SUCCESS [ 0.286 s]

[INFO] ActiveMQ Artemis Federated Queue Example ........... SUCCESS [ 0.819 s]

[INFO] ActiveMQ Artemis Downstream Federated Queue Example SUCCESS [ 0.790 s]

[INFO] ActiveMQ Artemis Downstream/Upstream Federated Queue Example SUCCESS [ 0.747 s]

[INFO] ActiveMQ Artemis Federated Address Example ......... SUCCESS [ 1.016 s]

[INFO] ActiveMQ Artemis Downstream Federated Address Example SUCCESS [ 0.878 s]

[INFO] ActiveMQ Artemis Downstream/Upstream Federated Address Example SUCCESS [ 0.842 s]

[INFO] ActiveMQ Artemis Federated Address Divert Example .. SUCCESS [ 0.711 s]

[INFO] ActiveMQ Artemis Failover Examples ................. SUCCESS [ 0.239 s]

[INFO] ActiveMQ Artemis JMS Application Layer Failover Example SUCCESS [ 1.251 s]

[INFO] ActiveMQ Artemis JMS Client Side Failover Listener Example SUCCESS [ 1.326 s]

[INFO] ActiveMQ Artemis JMS Colocated Failover Example .... SUCCESS [ 1.355 s]

[INFO] ActiveMQ Artemis JMS Colocated Failover Recover Only Example SUCCESS [ 0.993 s]

[INFO] ActiveMQ Artemis JMS HA Policy Auto backup example . SUCCESS [ 0.944 s]

[INFO] ActiveMQ Artemis JMS Multiple Failover Example ..... SUCCESS [ 1.083 s]

[INFO] ActiveMQ Artemis JMS Multiple Failover Failback Example SUCCESS [ 0.925 s]

[INFO] ActiveMQ Artemis JMS Non Transaction Failover Example SUCCESS [ 0.796 s]

[INFO] ActiveMQ Artemis JMS Replicated Failback Example ... SUCCESS [ 0.990 s]

[INFO] ActiveMQ Artemis JMS Replicated Failback Static Example SUCCESS [ 0.996 s]

[INFO] ActiveMQ Artemis JMS Replicated Multiple Failover Example SUCCESS [ 1.006 s]

[INFO] ActiveMQ Artemis JMS Replicated Transaction Failover Example SUCCESS [ 0.824 s]

[INFO] ActiveMQ Artemis JMS Scale Down Example ............ SUCCESS [ 0.921 s]

[INFO] ActiveMQ Artemis JMS Stop Server Failover Example .. SUCCESS [ 0.708 s]

[INFO] ActiveMQ Artemis JMS Transaction Failover Example .. SUCCESS [ 1.003 s]

[INFO] ActiveMQ Artemis Zookeeper Single Pair Ordered Failback Example SUCCESS [ 0.888 s]

[INFO] ActiveMQ Artemis Standard Examples ................. SUCCESS [ 0.260 s]

[INFO] ActiveMQ Artemis JMS Auto Closable Example ......... SUCCESS [ 0.696 s]

[INFO] ActiveMQ Artemis JMS Browser Example ............... SUCCESS [ 0.663 s]

[INFO] ActiveMQ Artemis Broker Auth Plugin Example ........ SUCCESS [ 0.782 s]

[INFO] ActiveMQ Artemis Broker Plugin Example ............. SUCCESS [ 0.797 s]

[INFO] ActiveMQ Artemis Camel Example ..................... SUCCESS [ 0.209 s]

[INFO] ActiveMQ Artemis Camel WAR Application ............. SUCCESS [03:23 min]

[INFO] ActiveMQ Artemis Camel Broker ...................... SUCCESS [ 1.457 s]

[INFO] ActiveMQ Artemis CDI Example ....................... SUCCESS [ 29.178 s]

[INFO] ActiveMQ Artemis JMS Kick Off Example .............. SUCCESS [ 0.760 s]

[INFO] ActiveMQ Artemis JMS Completion Listener Example ... SUCCESS [ 0.713 s]

[INFO] ActiveMQ Artemis JMS Consumer Rate Limit Example ... SUCCESS [ 0.783 s]

[INFO] ActiveMQ Artemis JMS Context Example ............... SUCCESS [ 0.763 s]

[INFO] ActiveMQ Artemis Core Bridge Example ............... SUCCESS [ 0.971 s]

[INFO] ActiveMQ Artemis JMS Database Example .............. SUCCESS [ 0.792 s]

[INFO] ActiveMQ Artemis JMS Dead Letter Example ........... SUCCESS [ 0.751 s]

[INFO] ActiveMQ Artemis JMS Delayed Redelivery Example .... SUCCESS [ 0.714 s]

[INFO] ActiveMQ Artemis JMS Divert Example ................ SUCCESS [ 0.890 s]

[INFO] ActiveMQ Artemis JMS Durable Subscription Example .. SUCCESS [ 0.874 s]

[INFO] ActiveMQ Artemis JMS Embedded Example .............. SUCCESS [ 0.859 s]

[INFO] ActiveMQ Artemis JMS Simple Embedded Example ....... SUCCESS [ 0.783 s]

[INFO] ActiveMQ Artemis JMS Exclusive Queue Example ....... SUCCESS [ 0.828 s]

[INFO] ActiveMQ Artemis JMS Expiry Example ................ SUCCESS [ 0.733 s]

[INFO] ActiveMQ Artemis JMS Http Transport Example ........ SUCCESS [ 0.720 s]

[INFO] ActiveMQ Artemis JMS Interceptor Example ........... SUCCESS [ 0.788 s]

[INFO] ActiveMQ Artemis JMS Interceptor Client Example .... SUCCESS [ 0.755 s]

[INFO] ActiveMQ Artemis MQTT Interceptor Example .......... SUCCESS [ 1.400 s]

[INFO] ActiveMQ Artemis AMQP Interceptor Example .......... SUCCESS [ 1.061 s]

[INFO] ActiveMQ Artemis JMS Instantiate Connection Factory Example SUCCESS [ 0.936 s]

[INFO] ActiveMQ Artemis JMS Bridge Example ................ SUCCESS [ 1.110 s]

[INFO] ActiveMQ Artemis JMS &amp;quot;JMX&amp;quot; Example ................. SUCCESS [ 0.753 s]

[INFO] ActiveMQ Artemis JMS &amp;quot;JMX over SSL&amp;quot; Example ........ SUCCESS [ 0.705 s]

[INFO] ActiveMQ Artemis JMS Large Message Example ......... SUCCESS [ 1.019 s]

[INFO] ActiveMQ Artemis JMS Last Value Queue Example ...... SUCCESS [ 0.900 s]

[INFO] ActiveMQ Artemis JMS Management Example ............ SUCCESS [ 0.773 s]

[INFO] ActiveMQ Artemis JMS Management Notifications Example SUCCESS [ 0.744 s]

[INFO] ActiveMQ Artemis JMS Message Counter Example ....... SUCCESS [ 0.873 s]

[INFO] ActiveMQ Artemis JMS Message Group Example ......... SUCCESS [ 0.716 s]

[INFO] ActiveMQ Artemis JMS Message Group Example 2 ....... SUCCESS [ 0.827 s]

[INFO] ActiveMQ Artemis JMS MessagePriorityExample Example SUCCESS [ 0.825 s]

[INFO] ActiveMQ Artemis JMS Netty OpenSSL Example ......... SUCCESS [ 0.827 s]

[INFO] ActiveMQ Artemis JMS No Consumer Buffering Example . SUCCESS [ 0.665 s]

[INFO] ActiveMQ Artemis JMS Paging Example ................ SUCCESS [ 0.751 s]

[INFO] ActiveMQ Artemis JMS Pre Acknowledge Example ....... SUCCESS [ 0.723 s]

[INFO] ActiveMQ Artemis JMS Producer Rate Limit Example ... SUCCESS [ 0.820 s]

[INFO] ActiveMQ Artemis JMS Queue Example ................. SUCCESS [ 0.684 s]

[INFO] ActiveMQ Artemis JMS Queue Requestor Example ....... SUCCESS [ 0.722 s]

[INFO] ActiveMQ Artemis JMS Queue Selector Example ........ SUCCESS [ 0.794 s]

[INFO] ActiveMQ Artemis JMS Reattach Node Example ......... SUCCESS [ 0.684 s]

[INFO] ActiveMQ Artemis REST Examples ..................... SUCCESS [ 0.293 s]

[INFO] Browser Chat App ................................... SUCCESS [ 10.299 s]

[INFO] Mixed JMS and REST Producers/Consumers ............. SUCCESS [ 4.761 s]

[INFO] Push Subscriptions ................................. SUCCESS [ 4.727 s]

[INFO] Duplicate Send Example ............................. SUCCESS [ 4.538 s]

[INFO] ActiveMQ Artemis JMS Request Reply Example ......... SUCCESS [ 0.873 s]

[INFO] ActiveMQ Artemis JMS Scheduled Message Example ..... SUCCESS [ 0.707 s]

[INFO] ActiveMQ Artemis JMS Security Example .............. SUCCESS [ 0.730 s]

[INFO] ActiveMQ Artemis JMS Security Keycloak Example ..... SUCCESS [02:38 min]

[INFO] ActiveMQ Artemis JMS Security LDAP Example ......... SUCCESS [03:29 min]

[INFO] ActiveMQ Artemis JMS Security Manager Example ...... SUCCESS [ 1.208 s]

[INFO] ActiveMQ Artemis JMS Send Acknowledgements Example . SUCCESS [ 0.754 s]

[INFO] ActiveMQ Artemis JMS Shared Consumer Example ....... SUCCESS [ 0.703 s]

[INFO] ActiveMQ Artemis JMS Slow Consumer Example ......... SUCCESS [ 0.785 s]

[INFO] ActiveMQ Artemis JMS Spring Integration Example .... SUCCESS [ 0.837 s]

[INFO] ActiveMQ Artemis JMS Spring Boot Integration Example SUCCESS [01:59 min]

[INFO] ActiveMQ Artemis JMS SSL Enabled Example ........... SUCCESS [ 0.978 s]

[INFO] ActiveMQ Artemis Mqtt CRL Example .................. SUCCESS [ 1.029 s]

[INFO] ActiveMQ Artemis JMS SSL Enabled Dual Authentication Example SUCCESS [ 0.774 s]

[INFO] ActiveMQ Artemis Static Selector Example ........... SUCCESS [ 0.910 s]

[INFO] ActiveMQ Artemis JMS Temporary Queue Example ....... SUCCESS [ 0.796 s]

[INFO] ActiveMQ Artemis JMS Topic Example ................. SUCCESS [ 0.669 s]

[INFO] ActiveMQ Artemis JMS Topic Hierarchies Example ..... SUCCESS [ 0.681 s]

[INFO] ActiveMQ Artemis JMS Topic Selector Example 1 ...... SUCCESS [ 0.748 s]

[INFO] ActiveMQ Artemis JMS Topic Selector Example 2 ...... SUCCESS [ 0.840 s]

[INFO] ActiveMQ Artemis JMS Transactional Example ......... SUCCESS [ 0.790 s]

[INFO] ActiveMQ Artemis JMS XAHeuristicExample Example .... SUCCESS [ 0.917 s]

[INFO] ActiveMQ Artemis JMS XA Receive Example ............ SUCCESS [ 1.095 s]

[INFO] ActiveMQ Artemis JMS XA Send Example ............... SUCCESS [ 0.836 s]

[INFO] ActiveMQ Artemis Modules Examples .................. SUCCESS [ 0.509 s]

[INFO] ActiveMQ Artemis JMS RA ............................ SUCCESS [ 14.595 s]

[INFO] ActiveMQ Artemis Inter-broker Bridging Examples .... SUCCESS [ 0.193 s]

[INFO] Artemis JMS Bridge Example ......................... SUCCESS [ 32.611 s]

[INFO] Artemis Tomcat JNDI Resources Example .............. SUCCESS [01:51 min]

[INFO] ActiveMQ Artemis Performance Examples .............. SUCCESS [ 0.216 s]

[INFO] ActiveMQ Artemis JMS Perf example for openwire ..... SUCCESS [ 4.818 s]

[INFO] ActiveMQ Artemis Soak Normal Example ............... SUCCESS [ 0.846 s]

[INFO] ActiveMQ Artemis Protocols Root Example ............ SUCCESS [ 0.329 s]

[INFO] ActiveMQ Artemis amqp Examples ..................... SUCCESS [ 0.275 s]

[INFO] ActiveMQ Artemis AMQP CPP Example .................. SUCCESS [ 0.850 s]

[INFO] ActiveMQ Artemis AMQP CPP Example .................. SUCCESS [ 0.809 s]

[INFO] ActiveMQ Artemis Proton-J Example .................. SUCCESS [ 0.629 s]

[INFO] ActiveMQ Artemis Proton Ruby Example ............... SUCCESS [ 0.422 s]

[INFO] ActiveMQ Artemis SASL-SCRAM Example ................ SUCCESS [ 0.673 s]

[INFO] ActiveMQ Artemis MQTT Examples ..................... SUCCESS [ 0.385 s]

[INFO] ActiveMQ Artemis MQTT Clustered Queue Example ...... SUCCESS [ 0.723 s]

[INFO] ActiveMQ Artemis MQTT Publish/Subscribe Example .... SUCCESS [ 0.567 s]

[INFO] ActiveMQ Artemis stomp Examples .................... SUCCESS [ 0.258 s]

[INFO] ActiveMQ Artemis Stomp 1.0 Example ................. SUCCESS [ 1.103 s]

[INFO] ActiveMQ Artemis Stomp Dual Authentication Example . SUCCESS [ 1.376 s]

[INFO] ActiveMQ Artemis JMS StompWebSocketExample Example . SUCCESS [ 0.737 s]

[INFO] ActiveMQ Artemis JMS Stomp Embedded Interceptor Example SUCCESS [ 1.027 s]

[INFO] ActiveMQ Artemis Stomp 1.1 Example ................. SUCCESS [ 0.784 s]

[INFO] ActiveMQ Artemis Stomp 1.2 Example ................. SUCCESS [ 0.775 s]

[INFO] ActiveMQ Artemis Stomp JMS Example ................. SUCCESS [01:17 min]

[INFO] ActiveMQ Artemis Openwire Examples ................. SUCCESS [ 0.294 s]

[INFO] ActiveMQ Artemis Openwire chat Example ............. SUCCESS [ 1.063 s]

[INFO] ActiveMQ Artemis OpenWire JMS Queue Example ........ SUCCESS [ 0.674 s]

[INFO] ActiveMQ Artemis OpenWire JMS Message Listener Example SUCCESS [ 0.582 s]

[INFO] ActiveMQ Artemis OpenWire JMS Message Recovery Example SUCCESS [ 1.443 s]

[INFO] ActiveMQ Artemis OpenWire Virtual Topic Mapping Example SUCCESS [ 0.810 s]

[INFO] ------------------------------------------------------------------------

[INFO] BUILD SUCCESS

[INFO] ------------------------------------------------------------------------

[INFO] Total time: 43:08 min

[INFO] Finished at: 2021-09-02T14:35:12+08:00

[INFO] ------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Mount Network Share on LibrEelec or on CoreElec</title>
      <link>https://ltan.me/post/2021/09/mount-network-share-on-libreelec-or-on-coreelec/</link>
      <pubDate>Sat, 04 Sep 2021 17:16:13 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/mount-network-share-on-libreelec-or-on-coreelec/</guid>
      <description>如何在coreelec 系统挂在nas共享目录，支持自动开机播放，播放内容安排 背景需求是打造家庭定时定点播放内容，内容包含音视频，现有环境闲置的n1盒子一台，音响一套，小米智能插座一个，nas ds218</description>
      <content>&lt;h1 id=&#34;如何在coreelec-系统挂在nas共享目录支持自动开机播放播放内容安排&#34;&gt;如何在coreelec 系统挂在nas共享目录，支持自动开机播放，播放内容安排&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;背景需求是打造家庭定时定点播放内容，内容包含音视频，现有环境闲置的n1盒子一台，音响一套，小米智能插座一个，nas ds218群晖一台，设定每天定时，定点播放不同内容，内容来自群晖硬盘，或者网络离线内容。需要解决以下关键问题如下&lt;/p&gt;
&lt;p&gt;1，如何在coreelec mount 群晖共享目录&lt;/p&gt;
&lt;p&gt;2，如何让coreelec 开机或者重启就自动播放内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;如何在coreelecd--mount-共享目录&#34;&gt;如何在coreelecd  mount 共享目录&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是官网介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kodi can natively mount SMB, NFS, SFTP, WebDAV (and more) remote filesystems (shares) to read media for playback, but many applications that write content, e.g. TVHeadend storing TV recordings, must write to &amp;ldquo;local&amp;rdquo; storage. Remote SMB and NFS shares can be &amp;ldquo;mounted&amp;rdquo; to the local filesystem using kernel mounts configured through systemd .mount files.&lt;/p&gt;
&lt;p&gt;The following NAS configuration is used in the examples below:&lt;/p&gt;
&lt;p&gt;NAS IP: &lt;code&gt;192.168.50.22&lt;/code&gt;   群晖的ip&lt;/p&gt;
&lt;p&gt;Username: &lt;code&gt;nasuser1&lt;/code&gt;   群晖系统的账号&lt;/p&gt;
&lt;p&gt;Password: &lt;code&gt;123nas&lt;/code&gt; 群晖的系统密码&lt;/p&gt;
&lt;p&gt;Share name: &lt;code&gt;recordings&lt;/code&gt;    群晖的共享目录名称，我的自己的是volume1&lt;/p&gt;
&lt;p&gt;Full address to share: &lt;code&gt;\\192.168.50.22\volume1&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;smb-shares--smb-协议共享挂载&#34;&gt;SMB Shares  smb 协议共享挂载&lt;/h2&gt;
&lt;h3 id=&#34;1-create-the-folder-where-the-share-should-be-mounted&#34;&gt;1. Create the folder where the share should be mounted&lt;/h3&gt;
&lt;p&gt;Connect to your LibreELEC HTPC with SSH.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir /storage/recordings
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-create-the-systemd-mount-file&#34;&gt;2. Create the systemd .mount file&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The filename uses hyphens to separate elements of the fileystem path to the share mount-point, e.g. &lt;code&gt;/storage/recordings&lt;/code&gt; will be &lt;code&gt;storage-recordings.mount&lt;/code&gt; and sub folders, e.g. &lt;code&gt;/storage/recordings/tv&lt;/code&gt; would be &lt;code&gt;storage-recordings-tv.mount&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create the .mount file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano /storage/.config/system.d/storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Below is an example of the mount definition file for a Samba share:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Unit]
Description=cifs mount script
Requires=network-online.service
After=network-online.service
Before=kodi.service

[Mount]
What=//192.168.50.22/recordings
Where=/storage/recordings
Options=username=nasuser1,password=123nas,rw,vers=2.1
Type=cifs

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-things-to-edit&#34;&gt;3. Things to edit&lt;/h3&gt;
&lt;p&gt;Address of your share. Remember to always use / slashes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What=//192.168.1.222/recordings
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Path where the Share should be mounted:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Where=/storage/recordings
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Options:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Options=username=nasuser1,password=123nas,rw,vers=2.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;username=&lt;/code&gt; Username of your network share &lt;code&gt;password&lt;/code&gt; Password of your network share &lt;code&gt;rw&lt;/code&gt; Read/write access &lt;code&gt;vers=2.1&lt;/code&gt; Version of the Samba protocol, &lt;code&gt;2.1&lt;/code&gt; is supported since Windows 7 several &lt;a href=&#34;https://wiki.samba.org/index.php/Samba3/SMB2#Introduction&#34;&gt;other versions&lt;/a&gt; are supported too&lt;/p&gt;
&lt;h3 id=&#34;4-enable-the-mount&#34;&gt;4. Enable the mount&lt;/h3&gt;
&lt;p&gt;Finally we need to enable the mountpoint.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-reboot&#34;&gt;5. Reboot&lt;/h3&gt;
&lt;p&gt;Reboot your system to check if the mount works.&lt;/p&gt;
&lt;h3 id=&#34;6-helpful-command-for-troubleshooting&#34;&gt;6. Helpful command for troubleshooting&lt;/h3&gt;
&lt;p&gt;Get status and error messages from the mount point.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl status storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Remove mount point and disabling it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl disable storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;nfs-shares--我使用的nfs协议推荐使用nfs效率比smb快&#34;&gt;NFS Shares  我使用的nfs协议，推荐使用nfs,效率比smb快&lt;/h1&gt;
&lt;h3 id=&#34;1-create-the-folder-where-the-share-should-be-mounted-1&#34;&gt;1. Create the folder where the share should be mounted&lt;/h3&gt;
&lt;p&gt;Connect to your LibreELEC HTPC &lt;a href=&#34;https:///accessing_libreelec&#34;&gt;with SSH&lt;/a&gt;.     ssh登录系统，首先创建recordings目录,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir /storage/recordings
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-create-the-systemd-definition-file---定义mount文件&#34;&gt;2. Create the systemd definition file   定义mount文件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; you need to use the filename for the definition file according to the folder where you want to mount your share . In our case &lt;code&gt;storage-recordings.mount&lt;/code&gt; represent path -&amp;gt; &lt;code&gt;/storage/recordings&lt;/code&gt;. If you like an subfolder &lt;code&gt;storage-recordings-tv.mount&lt;/code&gt; represent path -&amp;gt; &lt;code&gt;/storage/recordings/tv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;定义mount文件需要一定的格式，如storage-recordings.mount 则 创建的目录是/storage/recordings&lt;/p&gt;
&lt;p&gt;注意storage-music.mount 是不能定义的，定义会有报错，报bad set 错误&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano /storage/.config/system.d/storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Content of the definition file for a NFS share.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Unit]
Description=nfs mount script
Requires=network-online.service
After=network-online.service
Before=kodi.service

[Mount]
What=192.168.50.22:/volume1/music
Where=/storage/recordings
Options=
Type=nfs

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-things-to-edit-1&#34;&gt;3. Things to edit&lt;/h3&gt;
&lt;p&gt;Address of your share;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;What=192.168.1.222:/usr/data2/video
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Path where the share should be mounted:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Where=/storage/recordings
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Options: At this section you are able to define specific NFS options, such as NFS version for example. In our example here, we don&amp;rsquo;t need it and we are assuming you are using a NFSv3 share.&lt;/p&gt;
&lt;p&gt;Type: &lt;code&gt;Type=nfs&lt;/code&gt;   type为指定类型&lt;/p&gt;
&lt;h3 id=&#34;4-start-it-for-a-test&#34;&gt;4. Start it for a test:&lt;/h3&gt;
&lt;p&gt;写好mount文件后，准备开启 ，输入如下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl start storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: That&amp;rsquo;s only a test and the mount won&amp;rsquo;t be available after a reboot. To make it available after boot you have to &amp;ldquo;enable&amp;rdquo; the service first.&lt;/p&gt;
&lt;h3 id=&#34;5-enable-the-mount&#34;&gt;5. Enable the mount&lt;/h3&gt;
&lt;p&gt;以下命令的作用可以，让coreelec 开机会就启动挂载共享目录&lt;/p&gt;
&lt;p&gt;If the previous test worked, then please enable the service via:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;6-reboot&#34;&gt;6. Reboot&lt;/h3&gt;
&lt;p&gt;Reboot your system to see if the mount is available after boot.&lt;/p&gt;
&lt;h3 id=&#34;7-helpful-command-for-troubleshooting&#34;&gt;7. Helpful command for troubleshooting&lt;/h3&gt;
&lt;p&gt;Get status and error messages from the mount point.&lt;/p&gt;
&lt;p&gt;查看挂载的目录状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl status storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Remove mount point and disabling it.&lt;/p&gt;
&lt;p&gt;如果需要禁用，则用disable 禁用挂载即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl disable storage-recordings.mount
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;apple-timecapsule&#34;&gt;&lt;strong&gt;Apple TimeCapsule&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;TimeCapsule devices share files using an Apple dialect of SMB that is not compatible with the Samba &lt;code&gt;smbclient&lt;/code&gt; Kodi uses to connect to SMB shares. To access media on a TimeCapsule you can follow the steps described above for connecting to Samba shares with a systemd storage mount, but with one difference: the &lt;code&gt;Options&lt;/code&gt; configuration must force SMB v1.0 and legacy NTLM authentication or the mount will fail. See below:&lt;/p&gt;
&lt;p&gt;如果是你是用smb协议共享的 话，如果有用户名和密码，则用以下格式填写在options处&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Options=username=MyUser,password=MyPass,sec=ntlm,vers=1.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SMB v1.0 is widely considered to be insecure, but TimeCapsules no longer receive software updates and there is no alternative; SMB v2/v3 are not supported.&lt;/p&gt;
&lt;p&gt;最后效果，以下三个目录是我挂载进来的，如果你挂music, videos目录不建议，会报错的，估计是系统不留吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210904174106369.png&#34; alt=&#34;image-20210904174106369&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 /storage/.config/system.d/目录下，默认系统提供了用例sample,模板，你可以直接更改为mount就可以用&lt;/p&gt;
&lt;p&gt;mount文件内容格式一定要按上面格式填写才能生效，否则报错bad set&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210904174307171.png&#34; alt=&#34;image-20210904174307171&#34;&gt;&lt;/p&gt;
&lt;p&gt;开机自启脚本如下：&lt;/p&gt;
&lt;p&gt;在/storage/.kodi/userdata/ 目录下 创建 autoexec.py 文件 ，输入代码如下&lt;/p&gt;
&lt;p&gt;python 脚本，这里借助xbmc 库，可以充分发挥你的想像力&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc

 xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/.kodi/userdata/playlists/video/1.mp4)&amp;#34;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实还有一个以命令形式来控制播放就是cli 模式&lt;/p&gt;
&lt;p&gt;kodi-send 命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;CoreELEC:~ &lt;span style=&#34;color:#75715e&#34;&gt;# kodi-send&lt;/span&gt;
Usage
        kodi-send &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ACTION
        kodi-send &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --button&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BUTTON
Example
        kodi-send --host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.0.1 --port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9777&lt;/span&gt; --action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quit&amp;#34;&lt;/span&gt;
Options
        -?, --help                      Will bring up this message
        --host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;HOST                     Choose what HOST to connect to &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;localhost&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        --port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PORT                     Choose what PORT to connect to &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9777&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        --keymap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;KEYMAP                 Choose which KEYMAP to use &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key presses &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;KB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        --button&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BUTTON                 Sends a key press event to Kodi, this option can be added multiple times to create a macro
        -a ACTION, --action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ACTION      Sends an action to XBMC, this option can be added multiple times to create a macro
        -d T, --delay&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;T                 Waits &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; T ms, this option can be added multiple times to create a macro
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Artemis Origin Null Is Not Allowed to Call This Agent</title>
      <link>https://ltan.me/post/2021/09/artemis-origin-null-is-not-allowed-to-call-this-agent/</link>
      <pubDate>Fri, 03 Sep 2021 11:14:53 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/09/artemis-origin-null-is-not-allowed-to-call-this-agent/</guid>
      <description>Artemis Origin Null Is Not Allowed to Call This Agent 解决不能访问jolokia http interface 接口的问题，访问报403 状态错误 工作项目中需要使用到mq的消息管理api,如需要查询在线连接数，需要查看某一个clientId是否在线，需要整合到自身</description>
      <content>&lt;h1 id=&#34;artemis-origin-null-is-not-allowed-to-call-this-agent&#34;&gt;Artemis Origin Null Is Not Allowed to Call This Agent&lt;/h1&gt;
&lt;h3 id=&#34;解决不能访问jolokia-http-interface-接口的问题访问报403-状态错误&#34;&gt;解决不能访问jolokia http interface 接口的问题，访问报403 状态错误&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;工作项目中需要使用到mq的消息管理api,如需要查询在线连接数，需要查看某一个clientId是否在线，需要整合到自身业务当中去，&lt;/p&gt;
&lt;p&gt;对于artemis 就是一个黑盒，虽然是开源的，而且是完全开放的源代码，没有必须去改里面源码达到需求，其实artemis 后台提供了&lt;/p&gt;
&lt;p&gt;丰富的http rest 接口。再比如根据某一个clientId 踢下线，超时设置，连接数查看，系统资源统计监控查询这些api 都是开放的&lt;/p&gt;
&lt;p&gt;但发现实际使用过程中，并不是很顺利，踩了一些坑，标题就是常见的问题之一&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如官方这篇文档有提到通过 jolokia 提供 接口对外暴露调用，以一下是连接地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://activemq.apache.org/components/artemis/documentation/latest/management.html#management-notifications&#34;&gt;Management · ActiveMQ Artemis Documentation (apache.org)&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Exposing JMX using Jolokia
The default Broker configuration ships with the Jolokia HTTP agent deployed as a web application. Jolokia is a remote JMX-over-HTTP bridge that exposes MBeans. For a full guide as to how to use it refer to Jolokia Documentation, however a simple example to query the broker&#39;s version would be to use a browser and go to the URL http://username:password@localhost:8161/console/jolokia/read/org.apache.activemq.artemis:broker=&amp;quot;0.0.0.0&amp;quot;/Version.

This would give you back something like the following:
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;request&amp;#34;&lt;/span&gt;:{&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mbean&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.apache.activemq.artemis:broker=\&amp;#34;0.0.0.0\&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;attribute&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Version&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read&amp;#34;&lt;/span&gt;},&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0.0-SNAPSHOT&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1487017918&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问格式如下，比如查询borker  版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://username:password@localhost:8161/console/jolokia/read/org.apache.activemq.artemis:broker=&amp;quot;0.0.0.0&amp;quot;/Version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但实际过程就是报错如下 ，常见403错误&lt;/p&gt;
&lt;p&gt;原因是 origin 这个参数是null, 官方也没有说清 origin 这个参数是怎么传过去，虽然做为开发对http接口协议还是有一点了解，&lt;/p&gt;
&lt;p&gt;origin 这个参数就是需要指明访问目标。通常在http header头 加上即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{

  &amp;quot;error_type&amp;quot;: &amp;quot;java.lang.Exception&amp;quot;,

  &amp;quot;error&amp;quot;: &amp;quot;java.lang.Exception : Origin null is not allowed to call this agent&amp;quot;,

  &amp;quot;status&amp;quot;: 403

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;image-20210903113004787.png&#34; alt=&#34;image-20210903113004787&#34;&gt;&lt;/p&gt;
&lt;p&gt;加上后果然访问正常了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210903113348373.png&#34; alt=&#34;image-20210903113348373&#34;&gt;&lt;/p&gt;
&lt;p&gt;但在实际springboot 项目中，我们用restTemplate 这个http client 客户端，发现不行，还是403&lt;/p&gt;
&lt;p&gt;postman 是可以的，我们在spring boot 项目中，用restTemplate 访问不行。为什么，后面我们没有绕过这个问题，没有换过库&lt;/p&gt;
&lt;p&gt;没有使用postman 推荐的code ,以下是postman 推荐的，但没有尝试，我们还是坚持采用 restTemplate  客户端&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;Unirest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeouts&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
HttpResponse&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Unirest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://admin:admin@172.20.151.90:8161/console/jolokia/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; http://172.20.151.90:8161&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;type\&amp;#34;:\&amp;#34;exec\&amp;#34;,\&amp;#34;mbean\&amp;#34;:\&amp;#34;org.apache.activemq.artemis:broker=\\\&amp;#34;d2403827fe6c\\\&amp;#34;\&amp;#34;,\&amp;#34;operation\&amp;#34;:\&amp;#34;listConsumers(java.lang.String, int, int)\&amp;#34;,\&amp;#34;arguments\&amp;#34;:[\&amp;#34;{\\\&amp;#34;field\\\&amp;#34;:\\\&amp;#34;CLIENT_ID\\\&amp;#34;,\\\&amp;#34;operation\\\&amp;#34;:\\\&amp;#34;EQUALS\\\&amp;#34;,\\\&amp;#34;value\\\&amp;#34;:\\\&amp;#34;86303335\\\&amp;#34;,\\\&amp;#34;sortOrder\\\&amp;#34;:\\\&amp;#34;asc\\\&amp;#34;,\\\&amp;#34;sortColumn\\\&amp;#34;:\\\&amp;#34;id\\\&amp;#34;}\&amp;#34;,1,10]}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;asString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;怀疑 restTemplate 并没有把orgin传过去,经过抓包 才发现&lt;/p&gt;
&lt;p&gt;于是我们用&lt;code&gt;wireshark&lt;/code&gt; 工具抓包发现restTemplate 没有把orgin 参数传给atemis-server&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;16306405458570.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在百度一下，发现以下csdn 博客解决了，增加一行配置即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;System.setProperty(&amp;quot;sun.net.http.allowRestrictedHeaders&amp;quot;,&amp;quot;true&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;@Component&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArtemisJmxHelper&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; RestTemplate restTemplate&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String username&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Map &lt;span style=&#34;color:#a6e22e&#34;&gt;getTopicCosumer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String topic&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;


&lt;span style=&#34;color:#75715e&#34;&gt;//这一行必须要加，才能让restTemplate 生效orgin参数 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sun.net.http.allowRestrictedHeaders&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;



&lt;span style=&#34;color:#75715e&#34;&gt;//    String url=&amp;#34;http://admin:admin@172.20.151.90:8161/console/jolokia&amp;#34;;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    String url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://172.20.151.90:8161/console/jolokia/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
    JolokiaReq jolokiaReq &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    jolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exec&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    jolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setOperation&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;listConsumers(java.lang.String, int, int)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    jolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setMbean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.apache.activemq.artemis:broker=\&amp;#34;d2403827fe6c\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    Map req &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HashMap&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    req&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CLIENT_ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    req&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;EQUALS&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    req&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deviceClient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    req&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sortOrder&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;asc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    req&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sortColumn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    Object&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; arguments&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Object&lt;span style=&#34;color:#f92672&#34;&gt;[]{&lt;/span&gt;JSON&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;10&lt;span style=&#34;color:#f92672&#34;&gt;};&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    jolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setArguments&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;arguments&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    HttpHeaders httpHeaders &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HttpHeaders&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    httpHeaders&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setContentType&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;MediaType&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;APPLICATION_JSON&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    httpHeaders&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://172.20.151.90:8161&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    String auth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; username &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; password&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; encodedAuth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;encodeBase64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;auth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Charset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;US-ASCII&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)));&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;​&lt;/span&gt;    httpHeaders&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Basic &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;encodedAuth&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;



    HttpEntity httpEntity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HttpEntity&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;jolokiaReq&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;httpHeaders&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    String str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toJSONString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;httpEntity&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    ResponseEntity&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; responseEntity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; restTemplate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;postForEntity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; str&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
    String body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; responseEntity&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBody&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加了后 &lt;code&gt;System.setProperty(&amp;quot;sun.net.http.allowRestrictedHeaders&amp;quot;,&amp;quot;true&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210903142612594.png&#34; alt=&#34;image-20210903142612594&#34;&gt;&lt;/p&gt;
&lt;p&gt;４０３问题 最后总结一下：&lt;/p&gt;
&lt;p&gt;有两点需要注意的，&lt;/p&gt;
&lt;p&gt;第一，请求时，需要加用户名和密码，在ｈｅａｄｅｒ头增加ｏｒｇｉｎ参数&lt;/p&gt;
&lt;p&gt;第二，需要在jolokia-access.xml设置给一下跨域访问为  cors &lt;code&gt;*//* &lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Enable Activemq Artemis Rest Api</title>
      <link>https://ltan.me/post/2021/08/how-to-enable-activemq-artemis-rest-api/</link>
      <pubDate>Tue, 31 Aug 2021 19:35:49 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/how-to-enable-activemq-artemis-rest-api/</guid>
      <description>如何启用activemq artemis rest api 特性 在一次项目中需要使用activemq artemis mqtt 协议通信特性，需要借助rest api 功能按clientId 查询是否在线，也就是如何通过client id 查询 设备是否在线需要借助res</description>
      <content>&lt;h1 id=&#34;如何启用activemq-artemis-rest-api-特性&#34;&gt;如何启用activemq artemis rest api 特性&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在一次项目中需要使用activemq artemis mqtt 协议通信特性，需要借助rest api 功能按clientId 查询是否在线，也就是如何通过client id 查询 设备是否在线需要借助rest api 特性，默认情况artemis 不提供rest api 特性，在网搜索了一了，再借助官网的文档，需要build 一个war包 放 到web目录下即可，然后 重启程序&lt;/p&gt;
&lt;p&gt;但 在build 过程不是顺利，记录一下报错处理方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;github 提供的源代码，需要&lt;code&gt;build&lt;/code&gt; ,即 &lt;code&gt;mvn package&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jirkadanek/artemis-rest&#34;&gt;jirkadanek/artemis-rest: Give your ActiveMQ Artemis Message Broker a REST interface (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官网提供的文档，如何开启rest api 特性&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://activemq.apache.org/components/artemis/documentation/latest/rest.html&#34;&gt;REST Interface · ActiveMQ Artemis Documentation (apache.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;stackoverflow  提供的类似的问答 参考  配置参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/59319707/artemis-rest-interface&#34;&gt;java - Artemis rest interface - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/63668418/rest-interface-on-activemq-artemis&#34;&gt;maven - REST interface on ActiveMQ Artemis - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在集群模式下，如何开集，&lt;code&gt;master/salver&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/59847221/how-to-enable-rest-in-an-activemq-artemis-cluster&#34;&gt;java - How to enable REST in an ActiveMQ Artemis cluster - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;build 报错如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Failed to execute goal on project artemis&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rest&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;embedded&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Could not resolve dependencies &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; project com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;github&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;jdanekrh&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;artemis&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rest&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;embedded&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;war&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Failure to find o
rg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;activemq&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;artemis&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rest&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;jar&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt; in http&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//maven.aliyun.com/nexus/content/repositories/central/ was cached in the local repository, resolution will not be reattempted unt
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;il the update interval of alimaven has elapsed or updates are forced &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Help 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ERROR&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;解决方法，根据上述报错，原因为找不到&lt;code&gt;artemis-rest:jar:2.18.0&lt;/code&gt;  其 版本为 2.18.0 但是pom.xml 里面写的RELEASE, why?&lt;/p&gt;
&lt;p&gt;这里我就把改成对应版本，版本从maven 中央仓库得到最新版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;再执行以下命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mvn install clean -U
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;然后再执行以下命令，就是打包了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mvn package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;image-20210831195034813.png&#34; alt=&#34;image-20210831195034813&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;将得到的war包放到web目录下,记得一定要重命名 &lt;code&gt;activemq-rest.war&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210831195919395.png&#34; alt=&#34;image-20210831195919395&#34;&gt;&lt;/p&gt;
&lt;p&gt;还有最关键一步如下，就是在etc目录下的bootstrap.xml 文件位置，添加 你需要启动的war包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- The web server is only bound to localhost by default --&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;web&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bind=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8161&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;web&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;app&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;activemq-branding&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;war=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;activemq-branding.war&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;app&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;artemis-plugin&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;war=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;artemis-plugin.war&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;app&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;console&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;war=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;console.war&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
	   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;app&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;console&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;war=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;activemq-rest.war&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--添加这一行即可--&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/web&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;重启activemq artemis&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Activemq Artemis Learning 2</title>
      <link>https://ltan.me/post/2021/08/activemq-artemis-learning-2/</link>
      <pubDate>Sat, 28 Aug 2021 23:21:14 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/activemq-artemis-learning-2/</guid>
      <description>activemq artmis 项目所依赖模块说明整理 artemis-boot ：项目主要的程序入口，man函数在此 artemis-cdi-client : cdi 集成 它既可以使用嵌入代理，也可以连接到远程代理。通过实现 artemis clientconfiguration 接口提供配置 artemis-cli: 提供命令工具使用，可以通过命令窗口运行东西，如创建用户，</description>
      <content>&lt;h1 id=&#34;activemq-artmis-项目所依赖模块说明整理&#34;&gt;activemq artmis 项目所依赖模块说明整理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-boot ：项目主要的程序入口，man函数在此&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-cdi-client : cdi 集成 它既可以使用嵌入代理，也可以连接到远程代理。通过实现 &lt;code&gt;artemis clientconfiguration&lt;/code&gt; 接口提供配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-cli: 提供命令工具使用，可以通过命令窗口运行东西，如创建用户，创建&lt;code&gt;address&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-commons: 为整个项目提供 api 的统一异常库，网络连接心跳逻辑，日志打印库，连接池，集合库，线程原子锁，uuid生成工具库，时间工具类库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-core-client:   客户端连接sdk包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-core-client-all: 全局的客户端sdk包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-core-client-osgi: 开放服务网关协议的客户端工具sdk包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-distribution:  打成wapper包 重要模块，决定你的项目打包后最终的结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-docker: docker build 镜像脚本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-dto: 数据层传输 对像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-features: 项目特性配置，初始化数据配置，端口，依赖版本等配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-hawtio:  基于hawtio  用于管理Java东西的模块化Web控制台。 简而言之，这是一个带有插件的网络控制台。 它有&lt;a href=&#34;http://hawt.io/plugins/index.html&#34;&gt;大量的插件&lt;/a&gt; ，可以自定义和扩展以满足您的需求，web修改，扩展都这里面改，关于web页面的增加，删除等功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;artemis-jakarta-client&lt;/code&gt;,&lt;code&gt;artemis-jakarta-ra&lt;/code&gt;,&lt;code&gt;artemis-jakarta-server&lt;/code&gt;,&lt;code&gt;artemis-jakarta-service-extensions&lt;/code&gt; : 	Jakarta是Apache组织下的一套Java解决方案的开源软件的名称&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-jdbc-store:  基于jdbc 数据存储类，如mysql,db2,postgres 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-jms-client:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-jms-client-all:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-jms-client-osgi:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-jms-server:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-journal:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-junit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-maven-plugin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-protocols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-quorum-api&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-quorum-ri&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-ra&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-rest&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-selector&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-server-osgi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-service-extensions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-web&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;artemis-website&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;examples&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;integration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;scripts&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    </item>
    
    <item>
      <title>Activemq Artemis Learning 1</title>
      <link>https://ltan.me/post/2021/08/activemq-artemis-learning-1/</link>
      <pubDate>Sat, 28 Aug 2021 10:22:19 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/activemq-artemis-learning-1/</guid>
      <description>Activemq Artemis learning 1 activemq 有两个版本，过去很多人使用的activemq 经典版。 对该版本性能上面评价不是很满意，但今天官方又提供基于netty版的 activemq artemis 这个消息中件间，将提供异步消息处理。在使用activemq好处是在于</description>
      <content>&lt;h1 id=&#34;activemq-artemis-learning-1&#34;&gt;Activemq Artemis learning 1&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;activemq 有两个版本，过去很多人使用的activemq 经典版。 对该版本性能上面评价不是很满意，但今天官方又提供基于netty版的&lt;/p&gt;
&lt;p&gt;activemq artemis 这个消息中件间，将提供异步消息处理。在使用activemq好处是在于，对大多数据中小企业来说没有经历去造轮子，那么完全可以采用开源方案来完成需求，采用activemq artemis 这个消息中间件，他不仅继承原来的多协议，还大大提升了性能，着实很香的，activemq 本来就和rabbitmq, kafka,rocketmq 等三大mq不一样，还是有区别，适用不同场景。比如过去们常常使用mq kafka, rabbitmq大多数是在云服务器内网通信使用的，做服务消息解耦使用，但它只是普通的tcp 传输协议，不支持webscket 直连，http, udp 直连等特点，而activemq artemis 相反，他可以支的寺ws直连，tcp,udp直连，加上公司团队java技术栈的优势，采用先使用，熟悉如何使用activemq artemis 然后对其二次开发，也不是不错技术选型路线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面就是官网提供activemq artemis 核心技术架构图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210828103628359.png&#34; alt=&#34;image-20210828103628359&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果中小企业需要对activemq artemis 商用的话，就不的不考虑安全问题&lt;/p&gt;
&lt;p&gt;比如android端 是如何链接actviemq artemis 逻辑的，在建立安全链接之前需要做一些鉴权处理&lt;/p&gt;
&lt;p&gt;需要在activemq前 增加一nginx网关作为代理&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Mathematical Generation for the Third Grade of Elementary School</title>
      <link>https://ltan.me/post/2021/08/mathematical-generation-for-the-third-grade-of-elementary-school/</link>
      <pubDate>Sat, 21 Aug 2021 22:12:49 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/mathematical-generation-for-the-third-grade-of-elementary-school/</guid>
      <description>生成小学三年级四笔算式题及答案代码 由于小学三年级，数学书本未有负数，小数点，难度还是相对初级，要求3位数*2位数，除式算题不能有小数点, 减法不能用负数 下面就简单写了一下，思路比较简单，还没有包括括号，</description>
      <content>&lt;h1 id=&#34;生成小学三年级四笔算式题及答案代码&#34;&gt;生成小学三年级四笔算式题及答案代码&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;由于小学三年级，数学书本未有负数，小数点，难度还是相对初级，要求3位数*2位数，除式算题不能有小数点, 减法不能用负数&lt;/p&gt;
&lt;p&gt;下面就简单写了一下，思路比较简单，还没有包括括号，没有复杂的计算顺序的问题，基本上是 &lt;code&gt;a*b + d/c&lt;/code&gt;  这种  &lt;code&gt;a*b - d/c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;生成有答案和无答案两种，方便后续家长或老师改题需要计算器，哈哈，打算后面有时间再搞智能点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding=utf-8 -*-&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; choice
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Workbook
wb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Workbook()
ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;active
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getNum&lt;/span&gt;(min,max):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(min, max)

&lt;span style=&#34;color:#75715e&#34;&gt;# 判断是否是小数点，90.0,56.0 这类不算&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_float&lt;/span&gt;(s):
    s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(s)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# 判断小数点个数&lt;/span&gt;
        sl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# 按照小数点进行分割&lt;/span&gt;
        left &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sl[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;# 小数点前面的&lt;/span&gt;
        right &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sl[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;# 小数点后面的&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; right &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; left&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; left&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; right&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdigit():
            lleft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; left&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;# 按照-分割，然后取负号后面的数字&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lleft&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdigit():
                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; left&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdigit() &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; right&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdigit():
            &lt;span style=&#34;color:#75715e&#34;&gt;# 判断是否为正小数&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;



chengfa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#75715e&#34;&gt;#乘法&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getNum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;)
    n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getNum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; n2
    c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(n1);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(n2);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(total)
    chengfa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(c)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(chengfa)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;


chufa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#75715e&#34;&gt;#除法&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getNum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;)
    n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getNum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;)
    total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n1 &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n2
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; is_float(total):
        c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(n1);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;÷&amp;#34;&lt;/span&gt;);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(n2);c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(int(total))
        chufa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(c)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(chufa)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;


&lt;span style=&#34;color:#75715e&#34;&gt;#乘除合并，加减&lt;/span&gt;
hasres &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
nores &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#75715e&#34;&gt;#计算符随机&lt;/span&gt;
c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;#打印多少题&lt;/span&gt;
t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
cell &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#生成excel 4列表格&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    chuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; choice(chufa)
    chenf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; choice(chengfa)
    f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; choice(c)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;:
            tt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            tt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
        &lt;span style=&#34;color:#75715e&#34;&gt;#有答案的&lt;/span&gt;
        hasres&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d%s%d%s%d%s%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],f,chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],tt))
        &lt;span style=&#34;color:#75715e&#34;&gt;#无答案的&lt;/span&gt;
        nores&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d%s%d%s%d%s%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=___&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],f,chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;:
            tt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            tt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
        &lt;span style=&#34;color:#75715e&#34;&gt;# 有答案的&lt;/span&gt;
        hasres&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d%s%d%s%d%s%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],f, chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],tt))
        &lt;span style=&#34;color:#75715e&#34;&gt;# 无答案的&lt;/span&gt;
        nores&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d%s%d%s%d%s%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=___&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], chenf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],f, chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], chuf[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(hasres)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;t:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;



rows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; nores:
    rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(item)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(rows)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;cell:
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(rows)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; rows[:]

ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([])

rows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; hasres:
    rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(item)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(rows)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;cell:
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(rows)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; rows[:]

version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H%M%S&amp;#39;&lt;/span&gt;)
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;小学三年级下册数学算式生成-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xlsx&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (cell,len(hasres),version))
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成效果如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210821222311793.png&#34; alt=&#34;image-20210821222311793&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210821222425698.png&#34; alt=&#34;image-20210821222425698&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Vscode Hot Key</title>
      <link>https://ltan.me/post/2021/08/vscode-hot-key/</link>
      <pubDate>Sun, 15 Aug 2021 15:40:16 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/vscode-hot-key/</guid>
      <description>我的vscode 使用快捷键 1、 输入一个! html输入模板</description>
      <content>&lt;h1 id=&#34;我的vscode-使用快捷键&#34;&gt;我的vscode 使用快捷键&lt;/h1&gt;
&lt;p&gt;1、 输入一个&lt;code&gt;!&lt;/code&gt;  html输入模板&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Main Route and Soft Route Use Configuration</title>
      <link>https://ltan.me/post/2021/08/main-route-and-soft-route-use-configuration/</link>
      <pubDate>Wed, 11 Aug 2021 15:58:44 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/08/main-route-and-soft-route-use-configuration/</guid>
      <description>软路由配置使用方法 为什么需要使用软路由，是为了不影响原来主路由上网配置，网络环境，增加一个软路由来专门来解析404网站，及特殊的网络连接 满足上网需求，下图就是今天要介绍软路由其中一种设置方法，不影响原</description>
      <content>&lt;h1 id=&#34;软路由配置使用方法&#34;&gt;软路由配置使用方法&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么需要使用软路由，是为了不影响原来主路由上网配置，网络环境，增加一个软路由来专门来解析404网站，及特殊的网络连接&lt;/p&gt;
&lt;p&gt;满足上网需求，下图就是今天要介绍软路由其中一种设置方法，不影响原来的网络环境下，给增加一台软路由方法，ip设置方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210811160444222.png&#34; alt=&#34;image-20210811160444222&#34;&gt;&lt;/p&gt;
&lt;p&gt;当电视或者手机需要打开404网站，则需要单独配置 dns 和网关ip,即可正常扶梯&lt;/p&gt;
&lt;p&gt;上图为作者家用宽带  移动运营商300M 速度，上行30M, 下行300M,实际用speedtest测速apk，测试速度上行为4m, 下行为50M/s&lt;/p&gt;
&lt;p&gt;主要设置注意点：&lt;/p&gt;
&lt;p&gt;1,k2p 做为软路由，需要连使用lan口 接入主路由，k2p 自身需要接入lan口 而不是wan 口，接入wan口的话，则会产生的ip和主路由ip不在同一个网段，这样以来你的局域网访问就麻烦，这样默认情况下如果链接的软路由wifi的的手访问不了 群晖，最终你家里如果有多个路由器且都不在同一个网段的话，结果设备访问会多一层nat转发&lt;/p&gt;
&lt;p&gt;2，关于测速，很多朋友对自己家里网速并不关心，不知道自己家里的路由器最大能不能跑满运营商给的网络环境。我经常会碰到运营商打电话给我推销网络提速套餐，然而自己家里路由是个十几年前的百兆路由器tplink的，如果提速成功了，往往网速还停留在原来的样子&lt;/p&gt;
&lt;p&gt;这样是不是很坑，花的网络费用价值缺没有最大化，这里给大家推荐 手机 安装一款speedtest apk ,以后你可以时不时的点击一下测试你自己家里网速情况。当我加装了软路由器后，我再用speedtest 测速，并没有达到理想的值，于是在找原因，也打过几次电话给运营商投诉，后面发现是路由器本身发热温度太高了，导致的网速变慢，于是需要买风扇了，降温效果很明显，再次测试网速，可以正常了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210811164100204.png&#34; alt=&#34;image-20210811164100204&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Tensorflow Dll Solutions for Missing Files</title>
      <link>https://ltan.me/post/2021/07/tensorflow-dll-solutions-for-missing-files/</link>
      <pubDate>Mon, 26 Jul 2021 10:29:15 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/tensorflow-dll-solutions-for-missing-files/</guid>
      <description>TensorFlow DLL Solutions for missing files：cudnn64_8.dll not found&amp;amp;cusolver64_10.dll not found 解决tensorflow在安装最新版本（2.5.0） 时，运行时报错找不到各种dll文件方法。网上有很多的原因，说有因版本太高了，不兼容 还给了什么</description>
      <content>&lt;h1 id=&#34;tensorflow-dll-solutions-for-missing-filescudnn64_8dll-not-foundcusolver64_10dll-not-found&#34;&gt;TensorFlow DLL Solutions for missing files：cudnn64_8.dll not found&amp;amp;cusolver64_10.dll not found&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;解决tensorflow在安装最新版本（2.5.0） 时，运行时报错找不到各种dll文件方法。网上有很多的原因，说有因版本太高了，不兼容&lt;/p&gt;
&lt;p&gt;还给了什么版本对应安装包，反正是折腾了很久，作为tensorflow使用新手，主要是想用用最新版本如何。正好换了台新的笔记本联想工作本本&lt;/p&gt;
&lt;p&gt;legion系统 r7000, 内存32G, CPU amd 4000 series ryzen，显卡nvidia  geforce gtx 1060。最初我按照网上的教程安装很多个版本都试了不行，一气之下，安装最新新版 pip install tensorflow 最新版本如何，什么需要设置pip镜像， 反正都是科学网络了，下载速度也快。&lt;/p&gt;
&lt;p&gt;当前配置的最新的显卡驱动，最新的tensorflow框架版本2.5.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726103856956.png&#34; alt=&#34;image-20210726103856956&#34;&gt;&lt;/p&gt;
&lt;p&gt;第一步，更新nvidia 驱动程序 ，去nvidia官网更新，能更新则更新最新版本显卡驱动程序，不能更新则卸载，然后重新安装显卡驱动程序&lt;/p&gt;
&lt;p&gt;​                 去nvidia官网下载一个GeForce_Experience 的软件，用来专门更新显卡驱动程&lt;/p&gt;
&lt;p&gt;第二步下载最新版本的cuda开发工具sdk, 最新版，去官网下载，不要点我这个链接下载，&lt;/p&gt;
&lt;p&gt;​      我最下载最新的是这个链接地址 &lt;a href=&#34;https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda_11.4.0_471.11_win10.exe&#34;&gt;https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda_11.4.0_471.11_win10.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​       再次提醒，你去官网下载，不要下载我上面连接。免的版本不兼容&lt;/p&gt;
&lt;p&gt;第三步， 安装最新版本的anaconda3 最版本的&lt;/p&gt;
&lt;p&gt;​      去掉官网下载 &lt;a href=&#34;https://repo.anaconda.com/archive/Anaconda3-2020.11-Windows-x86_64.exe&#34;&gt;https://repo.anaconda.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第四步，安装tensorflow最新版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;​       pip install tensorflow

​       pip install tensorflow-gpu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第五步，则试是否正常，运行如下脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tensorflow &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; tf
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TF_CPP_MIN_LOG_LEVEL&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;constant(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;)
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;constant(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;)
print(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b)
print(tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__version__)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GPU:&amp;#39;&lt;/span&gt;, tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_physical_devices(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GPU&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现运行后报错，找不到各种dll 文件，像如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\anaconda3\python.exe E:/studyProject/python/tensorflow/test4.py
2021-07-26 09:52:07.878136: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2.5.0
2021-07-26 09:52:20.978421: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library nvcuda.dll
2021-07-26 09:52:21.087958: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 09:52:21.088759: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 09:52:22.594321: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublas64_11.dll
2021-07-26 09:52:22.594571: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublasLt64_11.dll
2021-07-26 09:52:23.993389: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cufft64_10.dll
2021-07-26 09:52:24.075060: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library curand64_10.dll
2021-07-26 09:52:24.866344: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusolver64_11.dll
2021-07-26 09:52:25.583784: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusparse64_11.dll
2021-07-26 09:52:25.586297: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library &#39;cudnn64_8.dll&#39;; dlerror: cudnn64_8.dll not found
2021-07-26 09:52:25.586582: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1766] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2021-07-26 09:52:25.590408: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-07-26 09:52:25.594368: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1258] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-07-26 09:52:25.594692: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1264]      
tf.Tensor(3.0, shape=(), dtype=float32)
GPU: []

Process finished with exit code 0

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上问题有两个问题&lt;/p&gt;
&lt;p&gt;1，找 不到&amp;rsquo;cudnn64_8.dll&#39;; dlerror: cudnn64_8.dll not found&lt;/p&gt;
&lt;p&gt;2，GPU: []  gpu不支持，跑tensorflow怎么能没有gpu工作呢，怎么不支持gpu呢&lt;/p&gt;
&lt;p&gt;首先把第一个版本解决&lt;/p&gt;
&lt;p&gt;直接在网站https://www.dll-files.com/search/下载，我上面报错只丢了一个dll 文件，有些人丢一堆，我在这建议安装最新版本cuda,和显卡驱动程序 再测试一下&lt;/p&gt;
&lt;p&gt;下载dll文件后，把它放在cuda 安装目录 bin文件下，具体目录，我的目录如下：&lt;/p&gt;
&lt;p&gt;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\bin&lt;/p&gt;
&lt;p&gt;注意NVIDIA GPU Computing Toolkit  这个目录是你下载cuda后，双击解压安装后才会有的这个目录，必须安装，而不是下载下来解压就有的&lt;/p&gt;
&lt;p&gt;安装完后，重启电脑&lt;/p&gt;
&lt;p&gt;再跑一次上面脚本得到如下信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\anaconda3\python.exe E:/studyProject/python/tensorflow/test4.py
2021-07-26 10:26:42.976336: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 10:26:48.285803: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library nvcuda.dll
2021-07-26 10:26:48.337562: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 10:26:48.338010: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudart64_110.dll
2021-07-26 10:26:48.357652: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublas64_11.dll
2021-07-26 10:26:48.357930: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cublasLt64_11.dll
2021-07-26 10:26:48.373414: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cufft64_10.dll
2021-07-26 10:26:48.376599: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library curand64_10.dll
2021-07-26 10:26:48.383979: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusolver64_11.dll
2021-07-26 10:26:48.392844: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cusparse64_11.dll
2021-07-26 10:26:48.394278: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library cudnn64_8.dll
2021-07-26 10:26:48.394723: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0
2021-07-26 10:26:48.395510: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-07-26 10:26:48.398205: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: 
pciBusID: 0000:01:00.0 name: NVIDIA GeForce GTX 1650 computeCapability: 7.5
coreClock: 1.515GHz coreCount: 14 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 178.84GiB/s
2021-07-26 10:26:48.398921: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0
2021-07-26 10:26:49.488227: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1258] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-07-26 10:26:49.488470: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1264]      0 
2021-07-26 10:26:49.488610: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1277] 0:   N 
2021-07-26 10:26:49.489126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1418] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2147 MB memory) -&amp;gt; physical GPU (device: 0, name: NVIDIA GeForce GTX 1650, pci bus id: 0000:01:00.0, compute capability: 7.5)
tf.Tensor(3.0, shape=(), dtype=float32)
2.5.0
GPU: [PhysicalDevice(name=&#39;/physical_device:GPU:0&#39;, device_type=&#39;GPU&#39;)]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如下三行是打印的真实结果，上面是tensorflow打印的日志信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;｀tf.Tensor(3.0, shape=(), dtype=float32)｀&lt;br&gt;
｀2.5.0｀&lt;br&gt;
｀GPU: [PhysicalDevice(name=&#39;/physical_device:GPU:0&#39;, device_type=&amp;lsquo;GPU&amp;rsquo;)]｀&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终于看到GPU 中括号里有 信息了，说明gpu生效，安装tensorflow-gpu成功，&lt;/p&gt;
&lt;p&gt;如果你用Anaconda Jupyter Notebook 默认是不会打印 上面日志的，也就是说看不到什么dll 文件丢失&lt;/p&gt;
&lt;p&gt;我用的pycharm ide&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726110316971.png&#34; alt=&#34;image-20210726110316971&#34;&gt;&lt;/p&gt;
&lt;p&gt;我用pycharm ide 配置的环境 如下，我电脑 安装了很多的python 环境，有代码需要在pycharm 切换python 版本，才能正常跑起来，比如我的tensorflow2.5.0 是要用Python 3.8.8才能跑的。 就是如下设置&lt;/p&gt;
&lt;p&gt;下面就是我安装的tensorflow 相关依赖包&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210726110516851.png&#34; alt=&#34;image-20210726110516851&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My Python2.7 Notes</title>
      <link>https://ltan.me/post/2021/07/my-python2.7-notes/</link>
      <pubDate>Wed, 21 Jul 2021 20:43:52 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/my-python2.7-notes/</guid>
      <description>python 日常笔记 记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个</description>
      <content>&lt;h1 id=&#34;python-日常笔记&#34;&gt;python 日常笔记&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录工作要用的python 使用工具，或者常用的代码片段。 Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 &amp;raquo;&amp;gt; 后直接执行代码。Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;时间转换&#34;&gt;时间转换&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromtimestamp(long(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1528797322&amp;#34;&lt;/span&gt;))
print date_time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, %H:%M:%S&amp;#34;&lt;/span&gt;)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],date1[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;])
 
 
strftime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:31:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
strftime2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-11-02 09:30:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;32&amp;#34;&lt;/span&gt;,strftime&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;strftime2)
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
print datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple()
print time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timetuple())
 
 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
date1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11 09:35:10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;)
print long(time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mktime(date1) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;where-in-mysql-使用&#34;&gt;where in mysql 使用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_config_list&lt;/span&gt;(conn, cur, aid, keys):
 sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;select `key`,label from config where id = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; and `key` in (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (
    aid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; len(keys)))
    cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(sql, keys)
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cur&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fetchall()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;实现类似java-stream-grouping-by-to-map-效果&#34;&gt;实现类似java stream grouping by to map 效果&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_config_list(conn, cur,item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;],keys)
print clist
clist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]:v[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(clist)}
print clist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;三目表达式应用&#34;&gt;三目表达式应用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ram_size&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reso&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resolution&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viseo&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content_source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sourname&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
 
device[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brad&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; clist[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;brand&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;批量插入mysql&#34;&gt;批量插入mysql&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;INSERT INTO breakfast (name, spam, eggs, sausage, price) VALUES (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;, [ (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spam and Sausage Lover&amp;#39;s Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not So Much Spam Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.95&lt;/span&gt; ), (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Don&amp;#39;t Wany ANY SPAM! Plate&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.95&lt;/span&gt; ) ] )
&lt;span style=&#34;color:#75715e&#34;&gt;#so in your case:&lt;/span&gt;
c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executemany(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insert into T (F1,F2) values (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;, [(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Mathematical Concepts Ai Learing Section 2</title>
      <link>https://ltan.me/post/2021/07/mathematical-concepts-ai-learing-section-2/</link>
      <pubDate>Fri, 09 Jul 2021 16:23:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/mathematical-concepts-ai-learing-section-2/</guid>
      <description>AI学习&amp;ndash;数学基础概念 绝对值 绝对值是指一个数在数轴上所对应点到原点的距离，例如，3的绝对值为3，-3的绝对值也为3。数字的绝对值可以被认为是与零的距离。 应用举例： from keras import backend as K # b是生成一个</description>
      <content>&lt;h1 id=&#34;ai学习--数学基础概念&#34;&gt;AI学习&amp;ndash;数学基础概念&lt;/h1&gt;
&lt;h4 id=&#34;绝对值&#34;&gt;绝对值&lt;/h4&gt;
&lt;p&gt;绝对值是指一个数在数轴上所对应点到原点的距离，例如，3的绝对值为3，-3的绝对值也为3。数字的绝对值可以被认为是与零的距离。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;应用举例：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; backend &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; K
&lt;span style=&#34;color:#75715e&#34;&gt;# b是生成一个4x4 二维 -1 ~ 0 的随机数&lt;/span&gt;
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; K&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random_uniform_variable(shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), low&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, high&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 均匀分布&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 原始打印&lt;/span&gt;
print(b)
&lt;span style=&#34;color:#75715e&#34;&gt;# 取绝对值后打印&lt;/span&gt;
print(K&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;abs(b))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#原始数据打印，一个二维张量，4x4列的数据&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Variable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Variable:0&amp;#39;&lt;/span&gt; shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32, numpy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
array([[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9059057&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.58264804&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9395989&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.39963734&lt;/span&gt;],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1112231&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5067514&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.10375643&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6551852&lt;/span&gt; ],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8337679&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.778535&lt;/span&gt;  , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7544004&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5426916&lt;/span&gt; ],
       [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.09164572&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6224438&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2649765&lt;/span&gt; , &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.45468187&lt;/span&gt;]],
      dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      
&lt;span style=&#34;color:#75715e&#34;&gt;#取绝对值后的结果&lt;/span&gt;
tf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tensor(
[[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9059057&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.58264804&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9395989&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.39963734&lt;/span&gt;]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1112231&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5067514&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.10375643&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6551852&lt;/span&gt; ]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8337679&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.778535&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7544004&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5426916&lt;/span&gt; ]
 [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.09164572&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6224438&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2649765&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.45468187&lt;/span&gt;]], shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float32)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Anaconda Modify the Domestic Mirror Ai Learning Section 1</title>
      <link>https://ltan.me/post/2021/07/anaconda-modify-the-domestic-mirror-ai-learning-section-1/</link>
      <pubDate>Thu, 08 Jul 2021 20:58:37 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/anaconda-modify-the-domestic-mirror-ai-learning-section-1/</guid>
      <description>我的AI学习第一课 Anaconda 修改镜像源 为什么要修改镜像源，因为初次使用anaconda 发现下载太慢了，都是从官网服务器拉取模块，需要 等很漫长时间， 因此网上找了一上镜像源和修改源的方法，就用清华大学的源 [https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/](https://link.jianshu.com/?t=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/) 大概分</description>
      <content>&lt;h1 id=&#34;我的ai学习第一课-anaconda-修改镜像源&#34;&gt;我的AI学习第一课 Anaconda 修改镜像源&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要修改镜像源，因为初次使用anaconda 发现下载太慢了，都是从官网服务器拉取模块，需要 等很漫长时间，&lt;/p&gt;
&lt;p&gt;因此网上找了一上镜像源和修改源的方法，就用清华大学的源&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/](https://link.jianshu.com/?t=https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大概分为三步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1首先找到conda安装目录&#34;&gt;1、首先找到conda安装目录&lt;/h2&gt;
&lt;p&gt;这里我安装在&lt;code&gt;D:\anaconda3&lt;/code&gt;  然后找到&lt;code&gt;condabin&lt;/code&gt;目录&lt;/p&gt;
&lt;p&gt;在地址输入 &lt;code&gt;cmd&lt;/code&gt; 命令并回车执行，在弹窗的cmd 窗口输入以下两条命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;此时，目录 C:\Users&amp;lt;你的用户名&amp;gt; 下就会生成配置文件.condarc，内容如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&amp;gt;type .condarc
channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - defaults
show_channel_urls: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2修改配置文件&#34;&gt;2、修改配置文件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;删除上述配置文件 .condarc 中的第三行，然后保存，最终版本文件如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
show_channel_urls: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3查看是生否生效&#34;&gt;3、查看是生否生效&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;通过命令 conda info 查看当前配置信息，内容如下，即修改成功，关注 channel URLs 字段内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;ondabin&amp;gt;conda info

     active environment : None
       user config file : C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;condarc
 populated config files : C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;condarc
          conda version : 4.10.3
    conda-build version : 3.21.4
         python version : 3.8.8.final.0
       virtual packages : __cuda&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;11.0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                          __win&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
                          __archspec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64
       base environment : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;writable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      conda av data dir : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;tc&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda
  conda av metadata url : None
           channel URLs : https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/win-64
                          https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/noarch
                          https://repo.anaconda.com/pkgs/main/win-64
                          https://repo.anaconda.com/pkgs/main/noarch
                          https://repo.anaconda.com/pkgs/r/win-64
                          https://repo.anaconda.com/pkgs/r/noarch
                          https://repo.anaconda.com/pkgs/msys2/win-64
                          https://repo.anaconda.com/pkgs/msys2/noarch
          package cache : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;conda&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;kgs
       envs directories : D:&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;naconda3&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;conda&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
                          C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;dmin&lt;span style=&#34;color:#ae81ff&#34;&gt;\A&lt;/span&gt;ppData&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;ocal&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\c&lt;/span&gt;onda&lt;span style=&#34;color:#ae81ff&#34;&gt;\e&lt;/span&gt;nvs
               platform : win-64
             user-agent : conda/4.10.3 requests/2.25.1 CPython/3.8.8 Windows/10 Windows/10.0.19041
          administrator : True
             netrc file : None
           offline mode : False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;很明显我上述加的 清华镜像源 己成功了，&lt;code&gt;win-64&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Phicomm Router Upgrade System to Openwrt</title>
      <link>https://ltan.me/post/2021/07/phicomm-router-upgrade-system-to-openwrt/</link>
      <pubDate>Fri, 02 Jul 2021 14:40:17 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/07/phicomm-router-upgrade-system-to-openwrt/</guid>
      <description>OpenWrt Lede 系统 刷入 k2p 路由器 记录一下，过去经常用的k2p 刷入老毛子系统【padavan】 不用选闪存布局，分分钟成功刷入。但这次刷入OpenWrt 时发现死活进去路由器登录界面。经过在恩山发贴求助终于解决，感谢恩</description>
      <content>&lt;h1 id=&#34;openwrt-lede-系统-刷入-k2p-路由器&#34;&gt;OpenWrt Lede 系统 刷入 k2p 路由器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一下，过去经常用的k2p 刷入老毛子系统【padavan】 不用选闪存布局，分分钟成功刷入。但这次刷入OpenWrt 时发现死活进去路由器登录界面。经过在恩山发贴求助终于解决，感谢恩山大神们，真的很厉害！
我刷入步骤是都先复位的，长按复位键 8到10秒，松开，
然后上传&lt;code&gt;openwrt-ramips-mt7621-phicomm_k2p-initramfs-kernel.binn &lt;/code&gt;文件，
然后点击更新，重启，就是不能进入&lt;code&gt;openwrt&lt;/code&gt; 系统路由系统，关键是&lt;code&gt;openwrt wifi ssid &lt;/code&gt;搜索不到，没看到， 说明刷入不成功，我用网线链接电脑 ，电脑网线插上都不能有正常的&lt;code&gt;ip&lt;/code&gt; 获取到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;登录界面如下图, 打开 http://192.168.10.10 就可以进入，如果找不到ip是多少，可以用ipconfig查看，必须是电脑 网线有线连接到 k2p lan口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702144843102.png&#34; alt=&#34;image-20210702144843102&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;默认用户名 &lt;code&gt;root&lt;/code&gt;   密码 &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702144651741.png&#34; alt=&#34;image-20210702144651741&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;刷入失败导致路由器不能工作，重新解决步骤   记录一下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702145346377.png&#34; alt=&#34;image-20210702145346377&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Solve the Startup Problem of Nano Disk Manager Zerotier</title>
      <link>https://ltan.me/post/2021/06/solve-the-startup-problem-of-nano-disk-manager-zerotier/</link>
      <pubDate>Tue, 15 Jun 2021 16:06:18 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/solve-the-startup-problem-of-nano-disk-manager-zerotier/</guid>
      <description>解决[贝壳云]小刚炮系统（Nano Disk Manager） zerotier 开机启动问题 在网上找了很多的教程，有很相关做开机启动 zerotier 客户端，我都没有成功，好几次由于停电导致的 盒子启动后并没有启动zerotier 客户端。出门在</description>
      <content>&lt;h1 id=&#34;解决贝壳云小刚炮系统nano-disk-manager-zerotier-开机启动问题&#34;&gt;解决[贝壳云]小刚炮系统（Nano Disk Manager） zerotier 开机启动问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在网上找了很多的教程，有很相关做开机启动 zerotier 客户端，我都没有成功，好几次由于停电导致的 盒子启动后并没有启动zerotier 客户端。出门在外没有远程服务真的很不方便。经过折腾好一阵子找到一个解决方法如下&lt;/p&gt;
&lt;h5 id=&#34;找到原来开机启动脚本没有的话添加即可-etcinitds50zerotiersh&#34;&gt;找到原来开机启动脚本,没有的话添加即可 /etc/init.d/S50zerotier.sh&lt;/h5&gt;
&lt;h5 id=&#34;把如下代码新建startup_zerotiersh文件写入如下代码内容保存在root目录下&#34;&gt;把如下代码，新建startup_zerotier.sh文件，写入如下代码内容，保存在/root目录下&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt; 
#!/bin/sh
program=zerotier
sn=`ps -ef | grep program | grep -v grep |awk &#39;{print $2}&#39;`
if [ &amp;quot;${sn}&amp;quot; = &amp;quot;&amp;quot; ]
then
  sh /etc/init.d/S50zerotier.sh
  echo start ok !
else
  echo running
fi
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;h5 id=&#34;在小刚炮系统后台打开任务执行菜单栏添加-计划任务为每隔2分钟启动该脚本即可&#34;&gt;在小刚炮系统后台，打开任务执行菜单栏，添加 计划任务为每隔2分钟启动该脚本即可&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;image-20210702145944040.png&#34; alt=&#34;image-20210702145944040&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Set Kodi to Start Playing Content</title>
      <link>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</link>
      <pubDate>Sun, 13 Jun 2021 07:09:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/how-to-set-kodi-to-start-playing-content/</guid>
      <description>我是如何在coreelec系统设置开机自动播放视频列表的 手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱 打造一台家用融媒体diy宣传</description>
      <content>&lt;h1 id=&#34;我是如何在coreelec系统设置开机自动播放视频列表的&#34;&gt;&lt;strong&gt;我是如何在coreelec系统设置开机自动播放视频列表的&lt;/strong&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;手里空闲N1盒子一台，刷了coreelec 系统，本质为kodi播放器，起初想配合小米智能插座 + n1盒子+显示器+音箱&lt;/p&gt;
&lt;p&gt;打造一台家用融媒体diy宣传广告机,设置定时开关机，定时播放指定内容，比如每天早上播放《三字经》《刷牙》，每天中午播放《交通安全》，晚上播放《护眼宣导片》&lt;/p&gt;
&lt;p&gt;等三个.mp4文件。于是翻了一下kodi技术开发论坛，就有了以下成果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原论坛：https://forum.kodi.tv/showthread.php?tid=157120&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;​     用electerm ssh管理软件登录到kodi 系统，在/storage/.kodi/userdata/ 目录下 创建 autoexec.py 文件 ，输入代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc 
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/test.m3u)&amp;#34;&lt;/span&gt;)
xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# 设置音量，这个很有用，比如早上闹钟模式可以设置大一点，晚上睡觉前可以小一点声音，这里的脚本是在nas 群晖系统自动生成，采用定时任务生成的，然后在kodi设备做了开机启动挂载nfs共享实现的&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;test.m3u我这里只是测试音视频列表，你可以用nas nfs 接入就可以，做一个软链接即可读取&lt;/p&gt;
&lt;p&gt;test.m3u为播放列表，该文件是生成的，生成工具在这里，也可以制混合m3u播放列表，包含本地播放，在线链接播放&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Isayso/PlaylistEditorTV&#34;&gt;Isayso/PlaylistEditorTV: IPTV m3u list Editor/Player for Windows with Kodi support (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072200142.png&#34; alt=&#34;image-20210613072200142&#34;&gt;&lt;/p&gt;
&lt;p&gt;设备实际播放效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210613072552887.png&#34; alt=&#34;image-20210613072552887&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后推荐一款-快控-app-非常好用配合ddnsto远程控制相当完美&#34;&gt;最后推荐一款 &lt;code&gt;快控&lt;/code&gt; APP 非常好用，配合ddnsto远程控制相当完美&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162652341.png&#34; alt=&#34;image-20210615162652341&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;image-20210615162617390.png&#34; alt=&#34;image-20210615162617390&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;h1 id=&#34;注意事项总结&#34;&gt;注意事项总结&lt;/h1&gt;
&lt;p&gt;本场景需求是：让n1 kodi 设备 音视频播放器，开机自动播放，并根据早，中，晚，周末，节假日特证来设置不同播放内容，内容可以是&lt;/p&gt;
&lt;p&gt;网络采集的在线视频，在线新闻，音乐，Youtube频道自动播放等等，诸如此类，&lt;/p&gt;
&lt;p&gt;需要注意以下几点：&lt;/p&gt;
&lt;p&gt;1，通过小米智能插座，控制开关机时段，比如早上时间段为6：00 ~ 8：00， 中午时间段11：00 ~ 14：00 ， 晚上时间段：17：30 ~ 21：00&lt;/p&gt;
&lt;p&gt;2，内容通过群晖计划任务，定时生成播放计划脚本，以及播放内容&lt;/p&gt;
&lt;p&gt;3，播放列表根据自己喜好，分类制作不同的分类播放列表&lt;/p&gt;
&lt;p&gt;​      如国学单独一个播放列表，流行music一个播放列表，背景音乐，睡前音乐等等&lt;/p&gt;
&lt;p&gt;播放列表是自己生成的播放列表.m3u格式如下文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-m3u&#34; data-lang=&#34;m3u&#34;&gt;#EXTCPlayListM3U::M3U
#EXTINF:0,高枫 - 大中国
/storage/recordings/mp3/高枫 - 大中国.mp3
#EXTINF:0,下山
/storage/recordings/01.下山.flac
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;开机自动播放脚本存储位置 &lt;code&gt;/storage/.kodi/userdata/autoexec.py&lt;/code&gt;  代码内容如下，根据自身需求定制&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xbmc
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime

today &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;today()
d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()
now &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; today&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day
dayOfWeek &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;weekday())
cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(getattr(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hour&amp;#39;&lt;/span&gt;))
cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(getattr(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;minute&amp;#39;&lt;/span&gt;))
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(dayOfWeek&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dayOfWeek &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;):
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_minute &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;):
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/go2school.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/go2school.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;))
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatall)&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cur_hour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;):
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;))
		xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatall)&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayMedia(/storage/ad/playlist.m3u)&amp;#34;&lt;/span&gt;)
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ActivateWindow(Music,special:/storage/ad/bj.m3u)&amp;#34;&lt;/span&gt;)
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XBMC.SetVolume(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;))
	xbmc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;executebuiltin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PlayerControl(repeatoff)&amp;#34;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过不需要重启coreELEC系统就可以执行，这样可以快速调试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kodi-send --action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RunScript(&amp;#34;special://profile/autoexec.py&amp;#34;)&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其播放计划脚本为autoexec.py 脚本 需要根据不同日期判断音量，不同时间段判断播放内容&lt;/p&gt;
&lt;p&gt;m3u 文件格式制作请参考文档：&lt;a href=&#34;https://en.wikipedia.org/wiki/M3U&#34;&gt;M3U - Wikipedia&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Abacus Mental Arithmetic Problem Generation</title>
      <link>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</link>
      <pubDate>Tue, 01 Jun 2021 09:33:32 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/06/abacus-mental-arithmetic-problem-generation/</guid>
      <description>珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成 珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到</description>
      <content>&lt;h1 id=&#34;珠心算二笔三笔五笔十笔一位加减混合计算题自动生成&#34;&gt;珠心算二笔、三笔、五笔、十笔一位加减混合计算题自动生成&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;珠算是以算盘为工具，数学理论为基础，运用手指拨珠，进行运算的一门计算技术，它是我国古代劳动人民重要的发明创造之一，千百年来这一技术不断扩散，传播到世界各国，推进着人类文明的发展历程。&lt;/p&gt;
&lt;p&gt;珠心算只有三个符号即1、5和0;数学有10个符号，即0、1、2、3、4、5、6、7、8、9。可见珠心算运算的简捷性。珠心算的直观模型作用能培养小孩子的数学概念能力，珠心算的分析模型作用能帮助小孩子理解应用题的结构关系和数量关系，提高解题能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;./zhuxinsuanpang.jpg&#34; alt=&#34;珠心算盘&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这几天看到娃娘，在用办公软件excel 给5岁娃出题，一页一页的打印出来, 很费劲&lt;/p&gt;
&lt;p&gt;我说这个可以写个程序自动生成出来，更快。不用这么幸苦&lt;/p&gt;
&lt;p&gt;开始我不太了解珠心算的规则，后面翻了资料，还真不是随便10以内的加减组合。有一定的规则，如上文章开头所描述&lt;/p&gt;
&lt;h3 id=&#34;出题要求规则如下&#34;&gt;出题要求规则如下:&lt;/h3&gt;
&lt;p&gt;加法&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以加&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以加&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以加&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以加&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
减法&lt;br&gt;
&lt;code&gt;9&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;，&lt;code&gt;9&lt;/code&gt;&lt;br&gt;
&lt;code&gt;8&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;，&lt;code&gt;8&lt;/code&gt;&lt;br&gt;
&lt;code&gt;7&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;，&lt;code&gt;7&lt;/code&gt;&lt;br&gt;
&lt;code&gt;6&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;6&lt;/code&gt;&lt;br&gt;
&lt;code&gt;5&lt;/code&gt;可以减&lt;code&gt;5&lt;/code&gt;&lt;br&gt;
&lt;code&gt;4&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;，&lt;code&gt;4&lt;/code&gt;&lt;br&gt;
&lt;code&gt;3&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;2&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1&lt;/code&gt;可以减&lt;code&gt;1&lt;/code&gt;&lt;br&gt;
&lt;code&gt;1-9&lt;/code&gt;都可以加减&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;出&lt;code&gt;五笔&lt;/code&gt;到&lt;code&gt;十笔&lt;/code&gt;的题&lt;/p&gt;
&lt;p&gt;要求计算结果不能是负数，结果不能大于10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;于是就有以下代码&#34;&gt;于是就有以下代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding=utf-8 -*-&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openpyxl &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Workbook
wb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Workbook()
ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;active
reload(sys)
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setdefaultencoding(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;)
var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub9&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub8&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub7&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub6&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub5&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub4&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub3&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub2&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub1&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub0&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
sa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;
}
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getNum&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getU&lt;/span&gt;(f):
    u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:
        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (u &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;,var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;, var[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; f]
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getV&lt;/span&gt;(a):
    al &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(a)
    qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (al &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
        qz &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randrange(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, al)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; qz
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getRes&lt;/span&gt;(a,b,u):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(u&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;b
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recursive_formula&lt;/span&gt;(num,count,arr):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(arr)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
      arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(num))
    u1, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getU(num)
    count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; count&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[getV(a)]
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(u1))
        arr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(str(v))
        r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getRes(num,v,u1)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; recursive_formula(r, count, arr)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; arr 
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
cell &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#生成excel 4列表格&lt;/span&gt;
total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#生成100题&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; recursive_formula(getNum(), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, [])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(data)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;total:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a:
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(a) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;)

print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;共&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;题&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; len(data)
rows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:
    rows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(item)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(rows)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;cell:
        ws&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(rows)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; rows[:]
version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H%M%S&amp;#39;&lt;/span&gt;)
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;珠心算题目生成-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xlsx&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (cell,len(data),version))
wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终生成效果如下，请自行调整打印格式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210601102211603.png&#34; alt=&#34;image-20210601102211603&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Application Based on lua-resty-balancer</title>
      <link>https://ltan.me/post/2021/05/application-based-on-lua-resty-balancer/</link>
      <pubDate>Sun, 30 May 2021 12:46:19 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/application-based-on-lua-resty-balancer/</guid>
      <description>基于openresty lua-resty-balancer 模块实现自定义分流功能 该模块为提供分流算法，抽离了hash算法, roundrobin轮询等，好处使业务灵活调用算法而分配对像。该对像不一定指服务器，也可以是数据对像或文件对像等</description>
      <content>&lt;h1 id=&#34;基于openresty--lua-resty-balancer-模块实现自定义分流功能&#34;&gt;基于openresty  lua-resty-balancer 模块实现自定义分流功能&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;该模块为提供分流算法，抽离了hash算法, roundrobin轮询等，好处使业务灵活调用算法而分配对像。该对像不一定指服务器，也可以是数据对像或文件对像等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1，下载https://github.com/openresty/lua-resty-balancer&lt;/p&gt;
&lt;p&gt;编译安装balancer&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://github.com/openresty/lua-resty-balancer&#34;&gt;lua-resty-balancer&lt;/a&gt;目录下执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt; gcc -O2 -fPIC -I/usr/local/include -c chash.c -o chash.o

 gcc -shared -o librestychash.so chash.o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将编译后的so文件存放在openresty 安装目录下的lualib 文件夹下即可，&lt;/p&gt;
&lt;p&gt;把 chash.lua   roundrobin.lua    两个文件复制到lualib/resty 目录下即可&lt;/p&gt;
&lt;p&gt;2，应用业务代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;worker_processes&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;error_log&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;logs/error.log&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;debug&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;events&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;worker_connections&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;http&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;init_by_lua_block&lt;/span&gt; {
	    &lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;resty_chash&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;resty.chash&amp;#34;&lt;/span&gt;
		&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;cjson&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;require(&amp;#34;cjson.safe&amp;#34;)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;object_list_1999&lt;/span&gt; = {
            &lt;span style=&#34;color:#f92672&#34;&gt;[&amp;#34;1985&amp;#34;]&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;[&amp;#34;1986&amp;#34;]&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;str_null&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;string.char(0)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pids,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;nodes&lt;/span&gt; = {}&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; {}
        &lt;span style=&#34;color:#f92672&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pid,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;weight&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pairs(object_list_1999)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;do&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;string.gsub(pid,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;str_null)&lt;/span&gt; 
            &lt;span style=&#34;color:#e6db74&#34;&gt;pids[id]&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pid&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;nodes[id]&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;weight&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;resty_chash:new(nodes)&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_chash_up_1999&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_ids_1999&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pids&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;server&lt;/span&gt; {
        &lt;span style=&#34;color:#f92672&#34;&gt;listen&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;;
		&lt;span style=&#34;color:#f92672&#34;&gt;charset&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;utf-8&lt;/span&gt;;
        &lt;span style=&#34;color:#f92672&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/fpId&lt;/span&gt; {
		    &lt;span style=&#34;color:#f92672&#34;&gt;default_type&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;text/html&lt;/span&gt;;
			&lt;span style=&#34;color:#f92672&#34;&gt;content_by_lua_block&lt;/span&gt; {
				&lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;args,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;ngx.req.get_uri_args()&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;userId&lt;/span&gt;  = &lt;span style=&#34;color:#e6db74&#34;&gt;args[&amp;#34;userId&amp;#34;]&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_chash_up_1999&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;pid&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;package.loaded.my_ids_1999&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;chash_up:find(userId)&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;hit_id&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;pid[id]&lt;/span&gt;
				&lt;span style=&#34;color:#e6db74&#34;&gt;ngx.say(&amp;#34;用户ID:&amp;#34;..userId..&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;命中了:&amp;#34;..hit_id)&lt;/span&gt;
			&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>How to Customize Load Balancing Logic Based on Openresty</title>
      <link>https://ltan.me/post/2021/05/how-to-customize-load-balancing-logic-based-on-openresty/</link>
      <pubDate>Wed, 19 May 2021 17:37:04 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-customize-load-balancing-logic-based-on-openresty/</guid>
      <description>基于openresty 自定义tcp 请求流量转发到不同消息处理服务器 有个消息推荐项目，netty 框架技术架构，客户端采用netty client 封装的私有tcp 协议 请求消息服务器。需要一套tcp 分流处理网关来分发请</description>
      <content>&lt;h1 id=&#34;基于openresty-自定义tcp-请求流量转发到不同消息处理服务器&#34;&gt;基于openresty 自定义tcp 请求流量转发到不同消息处理服务器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;有个消息推荐项目，netty 框架技术架构，客户端采用netty client 封装的私有tcp 协议 请求消息服务器。需要一套tcp 分流处理网关来分发请求流量到不同的tcp 消息处理器，现采用openresty 基本可以满足，主要是是用到openresy  balancer&lt;/p&gt;
&lt;p&gt;[]: &lt;a href=&#34;https://github.com/openresty/lua-resty-balancer#name&#34;&gt;https://github.com/openresty/lua-resty-balancer#name&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;模块技术实现，具体请参考官方文档说明&lt;/p&gt;
&lt;p&gt;主要思路是 利用 lua 语言 lpack 模块 对私有协议头 协议主体进行解析，解析得到设备id 取模得到一台上游消息处理服务器upstream server 节点， 然后通过balancer 模块更新上游处理服务器转发流量。&lt;/p&gt;
&lt;p&gt;也可以利用openresty 自带balancer 模块来完成实现，应用核心代码如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;stream {
  lua_code_cache off; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;关闭代码缓存，利于调用，生产环境不建议&lt;/span&gt;
  init_by_lua_block {  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;当&lt;/span&gt;nginx &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;启动时，初始化时，从&lt;/span&gt;redis加载配置&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，或者从&lt;/span&gt;etcd &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;加载配置&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;该数据可以做一个后台管理，运维人员直接后台操作&lt;/span&gt;
    require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ngx.balancer&amp;#39;&lt;/span&gt;)
    _G.BACKENDS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
      {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;172.17.0.3&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;消息&lt;/span&gt;netty服务器c2s&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
    }
  }
  
  &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;配置&lt;/span&gt;lua请求拦截器 upstream
  upstream lua_dispatcher {
    server &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0.0.1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;;
    balancer_by_lua_block {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; balancer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ngx.balancer&amp;#39;&lt;/span&gt;)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; backend_index
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.crc32_long(ngx.ctx.devid);
      backend_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (hash &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; backend_table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; _G.BACKENDS[backend_index]
      &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;通过激活&lt;/span&gt;id算出一个hash值 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;取个模后，得到服务器下标&lt;/span&gt;index &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;然后更新&lt;/span&gt;balancer &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;即可流量负载过去&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; ok, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; balancer.set_current_peer(table.unpack(backend_table))
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; ok &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
          ngx.log(ngx.ERR, err)
          ngx.exit(ngx.ERROR)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    }
  }
  
   &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;配置代码&lt;/span&gt; proxy
  server {
    listen &lt;span style=&#34;color:#ae81ff&#34;&gt;9000&lt;/span&gt;;
    proxy_pass lua_dispatcher;
    preread_by_lua_block {
        require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pack&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; mypack    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.pack
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; myunpack    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string.unpack
        &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ngx.req.socket(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; sock &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;got the request socket&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            ngx.say(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed to get the request socket: &amp;#34;&lt;/span&gt;, err)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;先尝试读取固定头&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;个字节&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; data, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sock:receive(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;如果遇到&lt;/span&gt;timeout,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;或者&lt;/span&gt;close的情况&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，则&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;本次循环读取，继续下一条读取&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; err&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; err &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;close&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;按消息推送私有协议读取返回的参数，&lt;/span&gt;type1为消息类型&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;ver2为消息推送私有协议版本号&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;time待命时间&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;len4为消息体的长度&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，不包含头的长度&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; succ,succLen,type1,Ver2,Time3,Len4 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pcall(myunpack,data,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;ccHH&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;读取剩余的消息体长度内容&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; body, err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sock:receive(Len4)
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;如果读取&lt;/span&gt;body为空&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，则退出&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; body &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;打印&lt;/span&gt;body消息内容 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;解析&lt;/span&gt;body是一个json串&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，需要对&lt;/span&gt;json进行解码&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，再赋值给&lt;/span&gt;ngx.ctx &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;全局上下文中共享变量&lt;/span&gt;
            ngx.ctx.device_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; body[devid]
            ngx.log(ngx.ERR, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;------bdy &amp;#34;&lt;/span&gt;, body)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
  
    }
  }
  
    
  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如下图，左边是设备，中间是tcp 流量转发器，  右 边是消息处理服务器，  设备需要和消息处理服务器 建立tcp长链接，并维持不间断时间心跳，总之采用openresty 来完现流量分发具有强性能，只需要在原来的netty消息层外层加个流量处理网关即可。&lt;/p&gt;
&lt;p&gt;但我们在实际环境不推荐这样做，除非小项目，大项目还是推荐apisix 网关来处理很方便&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210519191548391.png&#34; alt=&#34;image-20210519191548391&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Run Spring Boot Program on Windows Server</title>
      <link>https://ltan.me/post/2021/05/how-to-run-spring-boot-program-on-windows-server/</link>
      <pubDate>Thu, 13 May 2021 16:22:51 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-run-spring-boot-program-on-windows-server/</guid>
      <description>spring boot程序如何正确运行在Windows服务器上面 一次项目开发中，要求服务器是windows环境，一般我们都是用java sprint boot 开发的程序运行在linux 环境中，通过supervisor程序来守护，设置</description>
      <content>&lt;h1 id=&#34;spring-boot程序如何正确运行在windows服务器上面&#34;&gt;spring boot程序如何正确运行在Windows服务器上面&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一次项目开发中，要求服务器是windows环境，一般我们都是用java sprint boot 开发的程序运行在linux 环境中，通过supervisor程序来守护，设置开机启动之类的操作命令， 很少有人用windows server, 这次机会遇到这个问题需要解决，好在记的我在几年前用过java service wapper（简称jsw）这个程序 ，对jsw 有一些了解,于是找一相当资料看一下&lt;/p&gt;
&lt;p&gt;官网资料介绍在这里：https://wrapper.tanukisoftware.com/doc/english/launch-win.html&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在这里简单介绍一下jsw，通过官网介绍，我了解到。&lt;/p&gt;
&lt;p&gt;他可以替代supervisor 做程序守护，开机启动等相关设置，如果是需要把jar包跑在windows 服务器当中。我需要通过sc 命令来注册服务指令&lt;/p&gt;
&lt;p&gt;目前我暂时用到服务守护，和服务注册，等特点，其他特性还没有研究。以下是记录一下我在spring boot 项目中如何使用它来打包成 jsw 服务。&lt;/p&gt;
&lt;p&gt;​    首先看一下我的项目结构图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513163512015.png&#34; alt=&#34;image-20210513163512015&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要在pom.xml 加入maven 打外插件，
插件名为：maven-assembly-plugin&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;upgrade-admin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt; 
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--主要是以下插件配置--&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-assembly-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;descriptors&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--通过service-assembly.xml 描述该项目打包的配置信息--&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;descriptor&amp;gt;&lt;/span&gt;${project.basedir}/src/assembly/service-assembly.xml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/descriptor&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/descriptors&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;service-assembly&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;single&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;配置服务jsw 打包描述信息&lt;/p&gt;
&lt;p&gt;以下是打包配置文件信息：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;service&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;bamboo-upgrade-service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Bamboo Upgrade Service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Bamboo Upgrade Windows service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;java&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;-jar upgrade-admin.jar&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;id: windows 服务id,要是唯一的，在windows 服务注册表里是唯一的

name: 服务名称

description：  服务描述

executable ： 执行bin 名称
arguments： 执行参数
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513163836081.png&#34; alt=&#34;image-20210513163836081&#34;&gt;&lt;/p&gt;
&lt;p&gt;​      service-assembly.xml 文件  这是打包核心配置核心文件&lt;/p&gt;
&lt;p&gt;​     主是用于告诉maven 需要打包的文件在哪 里，如何打包，打成什么格式的包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/ASSEMBLY/2.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;service&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;formats&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;format&amp;gt;&lt;/span&gt;zip&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/format&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/formats&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSets&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Copy in the application JAR --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSet&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;${project.build.directory}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;/&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;includes&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;include&amp;gt;&lt;/span&gt;${project.build.finalName}.jar&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/includes&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSet&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Copy in the resources including the wrapper exe and config --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fileSet&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;${project.basedir}/src/assembly/resources&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;/&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSet&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fileSets&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该文件的目录位置如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513164413150.png&#34; alt=&#34;image-20210513164413150&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;执行打包 mvn package 命令
&lt;img src=&#34;./image-20210513164650797.png&#34; alt=&#34;image-20210513164650797&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部署程序，降upgrade-admin-service.zip包 复制到一个正式的目录下解压后下图就是解压后zip后的效果
&lt;img src=&#34;./image-20210513164952742.png&#34; alt=&#34;image-20210513164952742&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先安装windows 服务指令，上图install.bat是我之前写好的，该文件就是用来install Windows 服务脚本
install.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
bamboo-upgrade-service-wrapper install
echo 安装bamboo服务完成
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写启动服务，新建startup.bat文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; /f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;skip=3 tokens=4&amp;#34;&lt;/span&gt; %&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sc query bamboo-upgrade-service&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; set &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zt=%%i&amp;#34;&lt;/span&gt; &amp;amp;goto &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;next
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;next
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; /i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zt%&amp;#34;&lt;/span&gt;==&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RUNNING&amp;#34;&lt;/span&gt; (
echo 已经发现该服务在运行
) &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; (
   net start bamboo-upgrade-service
   echo 该服务现己启动&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;请等20秒中....
)
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;停止服务 ，新建stop.bat文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  ```powershell
  @echo off
  for /f &amp;quot;skip=3 tokens=4&amp;quot; %%i in (&#39;sc query bamboo-upgrade-service&#39;) do set &amp;quot;zt=%%i&amp;quot; &amp;amp;goto :next
  :next
  if /i &amp;quot;%zt%&amp;quot;==&amp;quot;RUNNING&amp;quot; (
     net stop bamboo-upgrade-service
     echo 该服务现己关闭，请等20秒中....
  ) else (
  
  )
  pause
  ```
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;卸载服务, 新建uninstall.bat 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;@echo off
bamboo-upgrade-service-wrapper uninstall
echo 卸载bamboo服务完成
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看windows运行效果&lt;/p&gt;
&lt;p&gt;按win+R 快捷键，输入&lt;em&gt;services.msc&lt;/em&gt;  命令，回车，&lt;/p&gt;
&lt;p&gt;设置开机启动该服务都可以在windows 这边设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210513165843939.png&#34; alt=&#34;image-20210513165843939&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>How to Do Not Release Resources After Uploading the Zip Package in Java</title>
      <link>https://ltan.me/post/2021/05/how-to-do-not-release-resources-after-uploading-the-zip-package-in-java/</link>
      <pubDate>Wed, 12 May 2021 19:36:48 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/how-to-do-not-release-resources-after-uploading-the-zip-package-in-java/</guid>
      <description>在windows系统中检验一个上传文件程序是否有bug另一种姿势 某一天在公司对一个文件上传项目进行bug修改，不料查到另一个bug 也顺带解决，在此记录一下解决过程 在windows系统调试一个文件上传程</description>
      <content>&lt;h1 id=&#34;在windows系统中检验一个上传文件程序是否有bug另一种姿势&#34;&gt;在windows系统中检验一个上传文件程序是否有bug另一种姿势&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;某一天在公司对一个文件上传项目进行bug修改，不料查到另一个bug 也顺带解决，在此记录一下解决过程&lt;/p&gt;
&lt;p&gt;在windows系统调试一个文件上传程序，手贱想重新删除原文件，重新上传，结果这一删除发现windows 弹窗，报窗&lt;/p&gt;
&lt;p&gt;&lt;em&gt;文件正常使用&lt;/em&gt;    错误提示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个程序需求就是把一个zip包上传到ftp当中，流程是先上传到服务器本地，然后同步到ftp当中&lt;/p&gt;
&lt;p&gt;在windows 调试过程重新删除了己上传的文件，但发现不能删除的，这个问题也找了很久。&lt;/p&gt;
&lt;p&gt;于是就重新梳理一下上传的流程。&lt;/p&gt;
&lt;p&gt;发现以下问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194748766.png&#34; alt=&#34;image-20210512194748766&#34;&gt;&lt;/p&gt;
&lt;p&gt;来调试代码&lt;/p&gt;
&lt;p&gt;下面这段代码，上传zip后先保存到本地&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194834905.png&#34; alt=&#34;image-20210512194834905&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来是解压zip&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512194951003.png&#34; alt=&#34;image-20210512194951003&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后增加zipFile.close() 解决，增加in.close() 解决&lt;/p&gt;
&lt;p&gt;问题总结：&lt;/p&gt;
&lt;p&gt;​    论代码review 重要性，前期需要多多测试。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>A Bug That Displays Abnormally After Uploading an Image</title>
      <link>https://ltan.me/post/2021/05/a-bug-that-displays-abnormally-after-uploading-an-image/</link>
      <pubDate>Wed, 12 May 2021 19:11:15 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/a-bug-that-displays-abnormally-after-uploading-an-image/</guid>
      <description>记一次解决图片上传后在浏览器不能正常显示的问题 原来这个项目是比较老，采用的是spirng mvc +ftp 技术搭建的上传功能，通过把一个静态资源h5页，打包成一个zip上传到后台 后台再对其zip包进行解压上传到cd</description>
      <content>&lt;h1 id=&#34;记一次解决图片上传后在浏览器不能正常显示的问题&#34;&gt;记一次解决图片上传后在浏览器不能正常显示的问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;原来这个项目是比较老，采用的是spirng mvc +ftp 技术搭建的上传功能，通过把一个静态资源h5页，打包成一个zip上传到后台&lt;/p&gt;
&lt;p&gt;后台再对其zip包进行解压上传到cdn服务器，以域名访问该静态资源页面，其静态资源包含html,js, jpg。 然后设计师大部分以图片形式排版，组成的html5 幻灯显示页面，难后在上传过程有偶发性的遇到图片打不开，显示不正常等问题，bug是随机复现。于是找了很久才找到这个问题根源，下面对其记录一下&lt;/p&gt;
&lt;p&gt;问题主要原因：从本地上传到ftp服务器传输读写编码不一至导致的，对于二进制图片，应采用二进制上传，开启ftp被动模式,编码为ASCII，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于文本文件如css,txt,js文件应采用utf8或者ascii都可以，关键是在文件读写时需要保持编码前后一致即可&lt;/p&gt;
&lt;p&gt;意思就是在本地解压zip后，需要把zip包静态资源按照 目录格式同步 ftp 服务器当中，关键是文件在上传前后读写需要保持编码一至就不会出现这个问题&lt;/p&gt;
&lt;p&gt;下面开始详细分析调式&lt;/p&gt;
&lt;p&gt;当设置uft8编码上传图片文件后，每个文件上传后会少很多的字节内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192524181.png&#34; alt=&#34;image-20210512192524181&#34;&gt;&lt;/p&gt;
&lt;p&gt;该图片文件默认在上传前编码格式为 ANSI&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192650863.png&#34; alt=&#34;image-20210512192650863&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后从同步到ftp 服务器后，下载到本地打开发现，编码变成了GB2312 格式的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192804222.png&#34; alt=&#34;image-20210512192804222&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然变成GB2312编码上传后的图片文件，文件md5值是一样的，浏览器不能正常显示图片文件，因为图片文件被编码破坏了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512192847433.png&#34; alt=&#34;image-20210512192847433&#34;&gt;&lt;/p&gt;
&lt;p&gt;原老项目采用apache commons net 包下的ftp client，不知道为什么设置了编码也没有解决问题，说是同步到ftp工具用apache camel 组件代替 apache commons net 的ftp  client,  替换之前尝试把编码设置成uft-8,果然很容易复现问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210512193353856.png&#34; alt=&#34;image-20210512193353856&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终用apache camel 代替了 ftpclient 解决ftp 同步图片后偶发性打不开的问题&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Reverse Proxy to Websocket Service Set Based on Apisix2</title>
      <link>https://ltan.me/post/2021/05/reverse-proxy-to-websocket-service-set-based-on-apisix2.4-gateway/</link>
      <pubDate>Tue, 11 May 2021 15:39:09 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/reverse-proxy-to-websocket-service-set-based-on-apisix2.4-gateway/</guid>
      <description>基于apisix2.4网关反向代理到websocket服务集节点 问题背景，主要是解决远程控制通信服务端单点问题，借助openresty强劲的性能，可定制化的负载均衡设计特点 apisix就是基于open</description>
      <content>&lt;h1 id=&#34;基于apisix24网关反向代理到websocket服务集节点&#34;&gt;基于apisix2.4网关反向代理到websocket服务集节点&lt;/h1&gt;
&lt;p&gt;问题背景，主要是解决远程控制通信服务端单点问题，借助openresty强劲的性能，可定制化的负载均衡设计特点&lt;/p&gt;
&lt;p&gt;apisix就是基于openresty开发分布式网关集群平台，优势现阶段轻量，易维护等&lt;/p&gt;
&lt;p&gt;本为搭建环境，模拟集群环境，在我windows 电脑 采用docker 模拟&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;整体的环境说明：如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511150518389.png&#34; alt=&#34;image-20210511150518389&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 搭建环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker pull django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 运行python 容器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker run -itd --name py3 -v /i:/i -v /d:/d django /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 进入容器，检查容器环境是否正常&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shel&#34; data-lang=&#34;shel&#34;&gt;docker exec -it  c5d2369adde2 /bin/bash

docker exec -it 58e1c95fea73 /bin/sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;./image-20210511150600898.png&#34; alt=&#34;image-20210511150600898&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 安装websocket&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt; pip install websocket 

 pip install stomp.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 启动后端 java websocket 环境&lt;/p&gt;
&lt;p&gt;进入java 容器，设置同一个网络环境，同一个网段&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-she&#34; data-lang=&#34;she&#34;&gt;    docker run --name s1 --network app-tier -d -v /i:/i -v /d:/d -p 8081:8080 ltjsj/super-dev-env:v1.1 

​      docker exec -it s1 /bin/bash

​      java -jar /i/path/to/websocket.jar 

​       docker inspect s1 | findstr IPAddress # 查看容器ip， 准备填入apisix 节点 
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 配置apisix&lt;/p&gt;
&lt;p&gt;路由代理，配置上游&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511150841820.png&#34; alt=&#34;image-20210511150841820&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 编写python 脚本测试代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-pytho&#34; data-lang=&#34;pytho&#34;&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2021/03/31 下午03:21
# @Author  : ltan.me

from stomp_ws import Stomp
import time

def do_thing_a(msg):
    print(&amp;quot;MESSAGE: &amp;quot; + msg)

if __name__ == &amp;quot;__main__&amp;quot;:

    for i in range(0,10):
        #为了模拟设备id,激活id,采用id为作为通信参数，生成10个id分别请求websocket服务器域名
        url = &amp;quot;test.xxxx.com/stompServer/websocket?id=%s&amp;amp;activeId=416&amp;amp;deviceId=3657dc0cfede992b97d2135fd0514c6c&amp;amp;userId=1&amp;amp;&amp;amp;connectType=0&amp;amp;token=9d3b7282d295eefe9e9b959f63134dee&amp;quot; % str(i)
        print(url)
        stomp = Stomp(url, sockjs=True, wss=False)
        stomp.connect()
        stomp.subscribe(&amp;quot;/user/1_416/command&amp;quot;, do_thing_a)
        time.sleep(2)
        stomp.send(&amp;quot;/web2client_term&amp;quot;, &#39;{&amp;quot;userId&amp;quot;:1,&amp;quot;activeId&amp;quot;:416,&amp;quot;cmdType&amp;quot;:18,&amp;quot;content&amp;quot;:&amp;quot;python-hahah&amp;quot;}&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 最终运行效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511151138269.png&#34; alt=&#34;image-20210511151138269&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210511151206802.png&#34; alt=&#34;image-20210511151206802&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Lua Language Parsing Private Protocol Package</title>
      <link>https://ltan.me/post/2021/05/lua-language-parsing-private-protocol-package/</link>
      <pubDate>Sat, 08 May 2021 17:47:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/lua-language-parsing-private-protocol-package/</guid>
      <description>使用lua语言解析tcp私有协议包示例 为什么需要lua来解析tcp 私有协议包？ 因为lua语言生态内，有强大的openresty 技术可使用，而openresty可以提供强劲的web 并发性能，能提供tcp</description>
      <content>&lt;h1 id=&#34;使用lua语言解析tcp私有协议包示例&#34;&gt;使用lua语言解析tcp私有协议包示例&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么需要lua来解析tcp 私有协议包？&lt;/p&gt;
&lt;p&gt;因为lua语言生态内，有强大的openresty 技术可使用，而openresty可以提供强劲的web 并发性能，能提供tcp 长链接通道 技术&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;首先需要lapck包对其解析&#34;&gt;首先需要lapck包对其解析&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone  https://github.com/Kong/lua-pack 
或
git clone https://github.com/lilien1010/lpack
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;安装lapck包需要编译&#34;&gt;安装lapck包需要编译&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508175332849.png&#34; alt=&#34;image-20210508175332849&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;--编译时找不到luah头文件需要增加以下参数其目的是让编译是找到luajit-luah头文件--&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;
&lt;p&gt;在编译时遇到 lua.h No such file or directory #include &amp;quot; lua.h&amp;quot; ？ 问题时，需要遇增加如下参数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-DLUA_INCLUDE_DIR=/usr/local/openresty/luajit/include/luajit-2.1/ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终编译命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#DLUA_INCLUDE_DIR 表示lua.h 存放的位置 LUA_LIBRARY指定luajit库，so文件，
cmake ./  -DLUA_INCLUDE_DIR=/usr/local/openresty/luajit/include/luajit-2.1/  -DLUA_LIBRARY=/usr/local/lib/libluajit-5.1.so
make  #编译成so文件，得到pack.so
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;详细解析tcp私有代码如下&#34;&gt;详细解析tcp私有代码如下&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;require(&amp;quot;pack&amp;quot;)
local mypack    = string.pack
local myunpack    = string.unpack
local sock = ngx.req.socket(true)
if sock then
    ngx.say(&amp;quot;got the request socket&amp;quot;)
else
    ngx.say(&amp;quot;failed to get the request socket: &amp;quot;, err)
    return
end
while true do
    --先尝试读取固定头 6个字节
    local data, err = sock:receive(6)
    --如果遇到timeout,或者close的情况，则break 本次循环读取，继续下一条读取
    if err==&#39;timeout&#39; or err ==&#39;close&#39; then
        break
    end
    --按pmtp协议读取返回的参数，type1为消息类型，ver2为pmtp协议版本号，time待命时间，len4为消息体的长度，不包含头的长度
    --默认字节顺序为 大端，&amp;gt;ccHH
    local succ,succLen,type1,Ver2,Time3,Len4 = pcall(myunpack,data,&amp;quot;&amp;gt;ccHH&amp;quot;)
    --读取剩余的消息体长度内容
    local body, err = sock:receive(Len4)
    --如果读取body为空，则退出
    if body == nil then
        break
    end
    --打印body消息内容
    ngx.log(ngx.ERR, &amp;quot;------bdy &amp;quot;, body)
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过客户端链接后发送tcp私有协议包的一模拟效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508175828796.png&#34; alt=&#34;image-20210508175828796&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Solve the Problem of Maven Packaging Static Resource Coding</title>
      <link>https://ltan.me/post/2021/05/solve-the-problem-of-maven-packaging-static-resource-coding/</link>
      <pubDate>Sat, 08 May 2021 16:39:39 +0800</pubDate>
      
      <guid>https://ltan.me/post/2021/05/solve-the-problem-of-maven-packaging-static-resource-coding/</guid>
      <description>解决maven生成jar包时字体不能正常显示 由于前端人手不够，今天做了一个小项目，这个项目是用spring boot + layui 构建的后台管理系统。就没有用到前后端分离的方式去开发 项目做完后在打包时运行时发现浏览器显</description>
      <content>&lt;h1 id=&#34;解决maven生成jar包时字体不能正常显示&#34;&gt;解决maven生成jar包时字体不能正常显示&lt;/h1&gt;
&lt;p&gt;由于前端人手不够，今天做了一个小项目，这个项目是用spring boot  + layui 构建的后台管理系统。就没有用到前后端分离的方式去开发&lt;/p&gt;
&lt;p&gt;项目做完后在打包时运行时发现浏览器显示字体损坏，导致网站icon图标不能正常显示&lt;/p&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;解决方法：&lt;/h2&gt;
&lt;p&gt;在pom.xml 里找到build 区块用下面代码替换它&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;build&amp;gt;
        &amp;lt;finalName&amp;gt;ivy-admin&amp;lt;/finalName&amp;gt;
        &amp;lt;resources&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;
                &amp;lt;filtering&amp;gt;true&amp;lt;/filtering&amp;gt;
                &amp;lt;excludes&amp;gt;
                    &amp;lt;exclude&amp;gt;static/layui/font/**&amp;lt;/exclude&amp;gt;
                    &amp;lt;exclude&amp;gt;static/admin/font/**&amp;lt;/exclude&amp;gt;
                    &amp;lt;exclude&amp;gt;static/admin/fonts/**&amp;lt;/exclude&amp;gt;
                &amp;lt;/excludes&amp;gt;
            &amp;lt;/resource&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;
                &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
                &amp;lt;includes&amp;gt;
                    &amp;lt;include&amp;gt;static/layui/font/**&amp;lt;/include&amp;gt;
                    &amp;lt;include&amp;gt;static/admin/font/**&amp;lt;/include&amp;gt;
                    &amp;lt;include&amp;gt;static/admin/fonts/**&amp;lt;/include&amp;gt;
                &amp;lt;/includes&amp;gt;
            &amp;lt;/resource&amp;gt;
        &amp;lt;/resources&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;executable&amp;gt;true&amp;lt;/executable&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;问题原因&#34;&gt;问题原因:&lt;/h2&gt;
&lt;p&gt;经过发现在不加上面打包代码时，不排除font 字体目录时，发现maven在打包复制时，对其font字体文件编译，导致文件被改写，编码和原来的字体文件不一样，导致打包前，打包前文件md5不一样，font 字体损坏，最终浏览器显示字体损坏&lt;/p&gt;
&lt;p&gt;打包后可以对比一下字体md5文件，就知道mvn在编译打包时，损坏了font&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./image-20210508170557174.png&#34; alt=&#34;image-20210508170557174&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
